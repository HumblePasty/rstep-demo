import{bZ as g,gF as m,P as u,b as v,$ as _,hs as w,aj as T,ht as R,f7 as k,bm as b,d1 as x,r as l,o as n,p as F}from"./index-DbqNxVxJ.js";import{i as S,e as P,h as j}from"./progressUtils-CdZhFZrg.js";import{o as E}from"./infoFor3D-BU6V8avP.js";let i=class extends g{constructor(){super({}),this.files=[],this.progress=0,this._uploadTask=null,this._layer=null}destroy(){this.cancel(),this.files=[],this._layer=null,this._uploadTask=null}get state(){const e=this._uploadTask;return e&&this.files.length!==0?e.finished?e.error?"error":"success":"pending":"default"}get result(){var e;return((e=this._uploadTask)==null?void 0:e.value)??null}get error(){var e;return((e=this._uploadTask)==null?void 0:e.error)??null}uploadTo(e){this.cancel(),this.files=[],this._layer=e,this._uploadTask=m(async s=>{var f;const o=await z(e);u(s),this.progress=0,this.files=o;const t=S(P.upload,d=>{this.progress=d},"Upload.uploadTo");if(o.length===0)return null;u(s);const a=await e.extractAndFilterFiles(o);u(s),a.length>0&&(this.files=a);const r=await e.convertMesh(a,{signal:s,onProgress:t.makeOnProgress("createFromFiles")});if(u(s),!r)throw new v("editor:upload","could not upload or convert model");const p=a.reduce((d,y)=>d+y.size,0),h=t.simulate("loadMesh",j(p));try{await r.load()}finally{h.remove()}if(_("enable-feature:georeferenced-uploads")&&r.metadata.georeferenced){if(await w(e.spatialReference,(f=r.origin)==null?void 0:f.spatialReference))return{type:"georeferenced",mesh:r};if((e.spatialReference.isWebMercator||e.spatialReference.isWGS84)&&await M(r,e.spatialReference))return{type:"georeferenced-reprojected",mesh:r}}return r.spatialReference=e.spatialReference,r.vertexSpace.origin=[0,0,0],{type:"non-georeferenced",mesh:r}})}retry(){this._layer&&this.uploadTo(this._layer)}cancel(){var e;(e=this._uploadTask)==null||e.abort()}};l([n()],i.prototype,"files",void 0),l([n()],i.prototype,"progress",void 0),l([n()],i.prototype,"state",null),l([n()],i.prototype,"result",null),l([n()],i.prototype,"error",null),l([n()],i.prototype,"_uploadTask",void 0),l([n()],i.prototype,"_layer",void 0),i=l([F("esri.widgets.Editor.Upload")],i);let c=null;async function z(e){const{resolve:s,promise:o}=T(),t=document.createElement("input");t.type="file",t.multiple=!1,t.accept=[...E(e.infoFor3D),".zip"].join(","),t.style.display="none",document.body.appendChild(t);const a=R(t,"change",()=>s(t.files?Array.from(t.files):[]));return c?c(t):t.click(),o.finally(()=>{a.remove(),t.remove()})}function G(e,s){c=o=>{s==null||s(),Promise.resolve().then(()=>e).then(t=>{if(!c)return;const a=new DataTransfer;t.forEach(r=>a.items.add(r)),o.files=a.files,o.dispatchEvent(new Event("change"))})}}function W(){c=null}async function M(e,s){if(await k(e.spatialReference,s),!e.vertexSpace.origin)return!1;const[o,t,a]=e.vertexSpace.origin,r=new b({x:o,y:t,z:a,spatialReference:e.spatialReference}),p=x(r,s);return!!p&&(e.vertexSpace.origin=[p.x,p.y,p.z??0],e.spatialReference=s,!0)}export{i as Upload,W as clearPromptForFilesStub,G as stubFilePickerToSelect};
