import{fq as E,fr as p,fs as x,ft as y}from"./index-CgLC99fU.js";import{J as b,z as f}from"./GeodeticDistanceCalculator-CJvEB3vc-C43-z4Cl.js";import"./OperatorShapePreservingDensify-Lnr-J0cW.js";class A{getOperatorType(){return 10316}supportsCurves(){return!0}accelerateGeometry(e,r,t){return!1}canAccelerateGeometry(e){return!1}execute(e,r,t,s,o){return this.executeEx(e,r,t,s,o,null,null,Number.NaN)}executeEx(e,r,t,s,o,i,c,u){const a={stack:[],error:void 0,hasError:!1};try{if(t.getCoordinateSystemType()===0&&E(""),p(e),p(r),e.isEmpty()||r.isEmpty())return Number.NaN;Number.isNaN(u)&&(u=Number.MAX_VALUE);const n=x(a,new b(t,s,o,u,1),!1),m=f(),l=f(),N=n.calculate(e,r,m,l);return i&&i.outPoint.assign(m.outPoint),c&&c.outPoint.assign(l.outPoint),N}catch(n){a.error=n,a.hasError=!0}finally{y(a)}}}export{A as OperatorGeodeticDistance,f as makeOutput};
