import{a4 as l,r as a,m as y,n as d,Y as f,kO as g,R as v}from"./index-BeW5XHHa.js";import{i as $}from"./NetworkElement-DZPOSsx-.js";import{f as w,s as j,i as O}from"./utils-qTUZr5IF.js";import{d as S}from"./Association-IJWUee4R.js";let r=class extends l{constructor(e){super(e),this.associations=[]}};a([y({type:[S],json:{write:!0}})],r.prototype,"associations",void 0),r=a([d("esri.rest.networks.support.QueryAssociationsResult")],r);const k=r;function I(s){const{returnDeletes:e,elements:n,gdbVersion:o,moment:i}=s.toJSON();return{returnDeletes:e,elements:JSON.stringify(n.map(t=>({globalId:t.globalId,networkSourceId:t.networkSourceId,terminalId:t.terminalId}))),types:JSON.stringify(s.types.map(t=>$.toJSON(t))).replaceAll('"connectivity"','"junctionJunctionConnectivity"'),gdbVersion:o,moment:i}}async function q(s,e,n){const o=w(s),i={...I(e),f:"json"},t=j({...o.query,...i}),c=O(t,{...n,method:"post"}),p=`${o.path}/associations/query`,{data:u}=await f(p,c),m=k.fromJSON(u);return e.types.includes("connectivity")&&g(v.getLogger("esri/rest/networks/support/QueryAssociationsParameters"),"types",{replacement:"Please use 'junction-junction-connectivity' instead of 'connectivity'.",see:"https://developers.arcgis.com/javascript/latest/api-reference/esri-rest-networks-support-QueryAssociationsParameters.html#types",version:"4.29",warnOnce:!0}),m}export{q as queryAssociations};
