import{cr as l,d8 as b,cS as M,a5 as P,d9 as T,da as A}from"./index-CdlB_1jZ.js";function D(e,a){const s=e==null?void 0:e.geometry;if(!e||(s==null?void 0:s.type)!=="mesh"||!a)return;const{renderCoordsHelper:i,elevationProvider:x}=a,{camera:m}=a.state,{extent:t}=s,{center:h,spatialReference:r}=t,z=l(r),n=b(r),v=l(i.spatialReference),w=t.width*z,y=t.height*n,u=(t.zmax??0)*n,p=u-(t.zmin??0)*n,C=Math.max(w,y,p)/v,{x:c,y:d}=h,f=h.z??0;M(o,c,d,f),i.toRenderCoords(o,r,o);const g=C/m.computeScreenPixelSizeAt(o);if(g>m.width*U)return"meshTooClose";if(g<H)return"meshTooFar";const R=T(e),{absoluteZ:S}=A(c,d,u,r,a,R);return S<(x.getElevation(c,d,f,r,"ground")??0)*n+p*j?"meshUnderground":"mesh"}const H=20,U=1,j=.1,o=P();export{D as getDrawMeshHelpMessage};
