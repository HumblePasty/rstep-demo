import{a3 as f,r as e,o as u,p as l,gP as d,gR as y,gQ as N,U as h}from"./index-CgLC99fU.js";import{d as C}from"./WebMap-CXIjOSa4.js";import"./ColorBackground-Bsy77oew.js";import"./Basemap-Dmz7cfxt.js";import"./editableLayers-BEzarSAf.js";import"./catalogUtils-BfCsvIc2.js";import"./basemapUtils-Dxc4EhWK.js";import"./jsonContext-Js9jvoqX.js";import"./project-D8_59vVs.js";import"./NetworkElement-D0YeA_74.js";let s=class extends f{constructor(a){super(a),this.namedTraceConfigurations=[]}};e([u({type:[C],json:{read:{source:"traceConfigurations"},write:{target:"traceConfigurations"}}})],s.prototype,"namedTraceConfigurations",void 0),s=e([l("esri.rest.networks.support.QueryNamedTraceConfigurationsResult")],s);const $=s;async function Q(a,t,i){const o=d(a),r=t.toJSON();t.globalIds&&t.globalIds.length>0&&(r.globalIds=JSON.stringify(t.globalIds)),t.creators&&t.creators.length>0&&(r.creators=JSON.stringify(t.creators)),t.tags&&t.tags.length>0&&(r.tags=JSON.stringify(t.tags)),t.names&&t.names.length>0&&(r.names=JSON.stringify(t.names));const n={...r,f:"json"},g=y({...o.query,...n}),m=N(g,{...i,method:"post"}),c=`${o.path}/traceConfigurations/query`,{data:p}=await h(c,m);return $.fromJSON(p)}export{Q as queryNamedTraceConfigurations};
