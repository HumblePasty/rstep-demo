import{a4 as f,r as i,m as u,n as l,Y as d}from"./index-BeW5XHHa.js";import{f as y,s as N,i as h}from"./utils-qTUZr5IF.js";import{d as C}from"./WebMap-QsQtHZyE.js";import"./ColorBackground-BVKEg-ac.js";import"./Basemap-NADnrhTn.js";import"./loadAll-CXj3UdOi.js";import"./writeUtils-B7-V_fnF.js";import"./CollectionFlattener-DQyCU__2.js";import"./editableLayers-DTLxgvJL.js";import"./catalogUtils-DH9XeEkf.js";import"./basemapUtils-DslCIlfo.js";import"./TablesMixin-ST5f4_Kg.js";import"./jsonContext-BIL0Zu_y.js";import"./project-DVpMNVPf.js";import"./utils-L8buF51K.js";import"./NetworkElement-DZPOSsx-.js";let o=class extends f{constructor(s){super(s),this.namedTraceConfigurations=[]}};i([u({type:[C],json:{read:{source:"traceConfigurations"},write:{target:"traceConfigurations"}}})],o.prototype,"namedTraceConfigurations",void 0),o=i([l("esri.rest.networks.support.QueryNamedTraceConfigurationsResult")],o);const $=o;async function z(s,t,e){const a=y(s),r=t.toJSON();t.globalIds&&t.globalIds.length>0&&(r.globalIds=JSON.stringify(t.globalIds)),t.creators&&t.creators.length>0&&(r.creators=JSON.stringify(t.creators)),t.tags&&t.tags.length>0&&(r.tags=JSON.stringify(t.tags)),t.names&&t.names.length>0&&(r.names=JSON.stringify(t.names));const m={...r,f:"json"},n=N({...a.query,...m}),p=h(n,{...e,method:"post"}),g=`${a.path}/traceConfigurations/query`,{data:c}=await d(g,p);return $.fromJSON(c)}export{z as queryNamedTraceConfigurations};
