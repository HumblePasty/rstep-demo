import{eT as R,cr as h,k1 as b,G as y,bm as $,h1 as M,aG as W,k6 as w}from"./index-Clgsc_ww.js";import{M as j}from"./normalizeUtils-D41z3Sc6.js";const d=50,T=5;function k(e,a){return Math.log(e)/Math.log(a)}function U(e,a,o){const t=e===1?10:e;return t**(o?Math.round(k(d/a,t)):0)}function S(e){const{isGeographic:a,isWebMercator:o}=e;return!a&&!o}function v(e,a,o){const t=typeof e=="number"?null:e,r=o??(t==null?void 0:t.spatialReference);if(r==null||!R(r)||S(r))return h(r);let s=(t==null?void 0:t.x)??e,c=(t==null?void 0:t.y)??a;const f=1/Math.sqrt(2);let i=s+f,l=c+f;const{isWebMercator:g,isGeographic:m}=r;let u=m&&!b(r)?y.WGS84:r;if(g){let n=new $({x:s,y:c,spatialReference:r});M(n,!0,n),s=n.x,c=n.y,n=new $({x:i,y:l,spatialReference:r}),M(n,!0,n),i=n.x,l=n.y,u=y.WGS84}const x=new W({paths:[[[s,c],[i,l]]],spatialReference:u}),G=j(x,10);let p;try{[p]=w([G],"meters")}catch{return h(r)}return p}export{S as f,U as l,T as t,v as u};
