import{V as y,U as m,x as l,j8 as _,M as S,mv as G,mw as V,mx as W,ac as K,j9 as Q,hq as X,my as Y,b8 as Z,h1 as ee,cD as se,i$ as te,w as ae}from"./index-BlU5-B7d.js";import{m as ne,N as oe,b as re,a as E,i as N}from"./External-BybnfLQ2.js";import{r as ie,n as ce,t as le,l as ue,c as R,a as pe,d as fe,u as me,p as de}from"./uploadAssetErrors-DBtwbXOs.js";import{i as w,h as ge,e as A,m as ye,a as we}from"./progressUtils-NH401gLu.js";import{t as he}from"./meshSpatialReferenceScaleUtils--kFb39wu.js";import{i as Pe,n as be}from"./meshFeatureAttributes-CvpOwNX6.js";import"./MeshTransform-xgFEXoYK.js";import"./axisAngleDegrees-dm_iSU6n.js";const U=1e6,D=20*U,Te=2e9,Ae=3;async function je({data:s,name:t,description:e},a,n){let r=null;try{const o=y(a,"uploads"),i=y(o,"info"),{data:u}=await m(i,{query:{f:"json"},responseType:"json"});l(n);const d=_(a),g=u.maxUploadFileSize*U,f=d?Te:g,c=d?Math.min(D,g):D;if(s.size>f)throw new Error("Data too large");const k=y(o,"register"),{data:j}=await m(k,{query:{f:"json",itemName:ve(t),description:e},responseType:"json",method:"post"});if(l(n),!j.success)throw new Error("Registration failed");const{itemID:z}=j.item;r=y(o,z);const B=y(r,"uploadPart"),v=Math.ceil(s.size/c),h=new Array;for(let p=0;p<v;++p)h.push(s.slice(p*c,Math.min((p+1)*c,s.size)));const P=h.slice().reverse(),F=new Array,M=w(v,n==null?void 0:n.onProgress,"uploadItem"),L=async()=>{for(;P.length!==0;){const p=h.length-P.length,b=P.pop(),T=new FormData,H=M.simulate(p,ge(b.size));try{T.append("f","json"),T.append("file",b),T.append("partId",`${p}`);const{data:J}=await m(B,{timeout:0,body:T,responseType:"json",method:"post"});if(l(n),!J.success)throw new Error("Part upload failed")}finally{H.remove()}}};for(let p=0;p<Ae&&P.length!==0;++p)F.push(L());await Promise.all(F);const $=y(r,"commit"),{data:x}=await m($,{query:{f:"json",parts:h.map((p,b)=>b).join(",")},responseType:"json",method:"post"});if(l(n),!x.success)throw new Error("Commit failed");return x.item}catch(o){if(r!=null){const i=y(r,"delete");await m(i,{query:{f:"json"},responseType:"json",method:"post"})}throw o}}function ve(s){return s.replaceAll("/","_").replaceAll("\\","_")}async function es(s,t,e){var r;const a=s.length;if(!a)return(r=e==null?void 0:e.onProgress)==null||r.call(e,1),[];const n=w(a,e==null?void 0:e.onProgress,"uploadAssets");return Promise.all(s.map((o,i)=>Fe(o,t,{...e,onProgress:n.makeOnProgress(i)})))}async function Fe(s,{layer:t,ongoingUploads:e},a){var o;const n=e.get(s);if(n)return n;if(!He(t))throw new ie;if(xe(s,t))return(o=a==null?void 0:a.onProgress)==null||o.call(a,1),s;const r=De(s,t,a);e.set(s,r);try{await r}finally{e.delete(s)}return s}function xe(s,t){const{parsedUrl:e}=t;return e!=null&&s.metadata.externalSources.some(a=>ne(a,e))}async function De(s,t,e){const{metadata:a}=s,{displaySource:n}=a,r=C(n==null?void 0:n.source,t,{checkForConversionRequired:S("enable-feature:georeferenced-uploads")}),o=r!=null?Se(r,t,e):a.externalSources.length>0?Ee(s,t,e):Ne(s,t,e),i=await o;return l(e),s.addExternalSources([i]),s}async function Se(s,t,e){return{source:await q(s,t,e),original:!0,unitConversionDisabled:!0}}async function Ee(s,t,e){const a=O(t),{externalSources:n}=s.metadata,r=Ue(n,t);if(!r)throw new ce;const o=w(A.uploadConvertibleSource,e==null?void 0:e.onProgress,"uploadConvertibleSource"),i=await q(r,t,{onProgress:o.makeOnProgress("uploadEditSource")});s.addExternalSources([{source:i,original:!0}]);const u=r.reduce((g,{asset:f})=>f instanceof File?g+f.size:g,0),d=o.simulate("serviceAssetsToGlb",ye(u));try{const{source:g,transform:f,origin:c}=await Be(i,t,a);return s.transform=f,c&&(s.metadata.georeferenced=!0,e!=null&&e.useAssetOrigin&&(s.vertexSpace.origin=[c.x,c.y,c.z??0],s.spatialReference=c.spatialReference)),{source:g,unitConversionDisabled:!0}}finally{d.remove()}}async function Ne(s,t,e){const a=w(A.uploadLocalMesh,e==null?void 0:e.onProgress,"uploadLocalMesh"),n=Re(s,t,{...e,onProgress:a.makeOnProgress("meshToAssetBlob")});return{source:await I([n],t,{...e,onProgress:a.makeOnProgress("uploadAssetBlobs")}),extent:s.extent.clone(),original:!0}}async function Re(s,t,e){const a=O(t),n=await s.load(e),r=await n.toBinaryGLTF({origin:n.origin,signal:e==null?void 0:e.signal,ignoreLocalTransform:!0,unitConversionDisabled:!0});return l(e),{blob:new Blob([r],{type:"model/gltf-binary"}),assetName:`${K()}.glb`,assetType:a}}function Ue(s,t){for(const e of s){const a=C(e.source,t);if(a)return a}return null}function C(s,{infoFor3D:t},e={}){if(!s)return null;const{supportedFormats:a,editFormats:n}=t,r=oe(s),o=new Array,i=G(t),u=V(t);let d=!1;for(const g of r){const f=Ce(g,a);if(!f)return null;const{assetType:c}=f;if(e.checkForConversionRequired&&(c===i||c===u))return null;n.includes(c)&&(d=!0),o.push(f)}return d?o:null}function Ce(s,t){const e=re(s,t);return e?{asset:s,assetType:e}:null}async function q(s,t,e){return I(s.map(a=>qe(a,e)),t,e)}async function I(s,t,e){const a=w(A.uploadAssetBlobs,e==null?void 0:e.onProgress,"uploadAssetBlobs"),n=await Oe(s,t,{...e,onProgress:a.makeOnProgress("prepareAssetItems")});l(e);const r=n.map(({item:i})=>i),{uploadResults:o}=await ke(r,t,{...e,onProgress:a.makeOnProgress("uploadAssetItems")});return l(e),s.map((i,u)=>ze(n[u],o[u],t))}async function qe(s,t){const{asset:e,assetType:a}=s;if(e instanceof File)return{blob:e,assetName:e.name,assetType:a};const n=await e.toBlob(t);return l(t),{blob:n,assetName:e.assetName,assetType:a}}async function Ie(s,t,e){const{blob:a,assetType:n,assetName:r}=s;let o=null;try{const i=await je({data:a,name:r},t.url,e);l(e),o={assetType:n,assetUploadId:i.itemID}}catch(i){se(i),Je().warnOnce(`Service ${t.url} does not support the REST Uploads API.`)}if(!o){const i=await te(a);if(l(e),!i.isBase64)throw new me;o={assetType:n,assetData:i.data}}if(!o)throw new de;return{item:o,assetName:r}}function Oe(s,t,e){const a=w(s.length,e==null?void 0:e.onProgress,"prepareAssetItems");return Promise.all(s.map(async(n,r)=>{const o=Ie(await n,t,{...e,onProgress:a.makeOnProgress(r)});return l(e),o}))}async function ke(s,t,e){const a=we(e==null?void 0:e.onProgress);try{const n=await m(y(t.parsedUrl.path,"uploadAssets"),{timeout:0,query:{f:"json",assets:JSON.stringify(s)},method:"post",responseType:"json"});if(l(e),n.data.uploadResults.length!==s.length)throw new pe(s.length,n.data.uploadResults.length);return n.data}finally{a.remove()}}function ze(s,t,e){const{success:a}=t;if(!a){const{error:d}=t;throw new fe(s.assetName,d)}const{assetHash:n}=t,{assetName:r,item:{assetType:o}}=s,{infoFor3D:{supportedFormats:i}}=e,u=ee(o,i);if(!u)throw new R(o);return new E(r,u,[new N(`${e.parsedUrl.path}/assets/${n}`,n)])}async function Be(s,t,e){var r;const a=s.map(({assetName:o,parts:i})=>({assetName:o,assetHash:i[0].partHash}));let n;try{const o=y(t.parsedUrl.path,"convert3D"),i=(r=t.capabilities)==null?void 0:r.operations.supportsAsyncConvert3D;n=(await(i?$e:Le)(o,{query:{f:"json",assets:JSON.stringify(a),transportType:"esriTransportTypeUrl",targetFormat:e,async:i},responseType:"json",timeout:0})).data}catch{throw new ue}return Me(t,n)}function Me(s,t){const e={source:t.assets.map(a=>{const n=Y(a.contentType,s.infoFor3D.supportedFormats);if(!n)throw new R(n);return new E(a.assetName,a.contentType,[new N(a.assetURL,a.assetHash)])}),origin:void 0,transform:void 0};if(S("enable-feature:georeferenced-uploads")&&t.transform){if(e.transform=Pe(t.transform),t.spatialReference){const a=Z.fromJSON(t.spatialReference);e.origin=be(t.transform,a)}}else e.transform=he(s.spatialReference);return e}function Le(s,t){return m(s,t)}async function $e(s,t){const e=(await m(s,t)).data.statusUrl;for(;;){const a=(await m(e,{query:{f:"json"},responseType:"json"})).data;switch(a.status){case"Completed":return m(a.resultUrl,{query:{f:"json"},responseType:"json"});case"CompletedWithErrors":throw new Error(a.status);case"Failed ImportChanges":case"InProgress":case"Pending":case"ExportAttachments":case"ExportChanges":case"ExportingData":case"ExportingSnapshot":case"ImportAttachments":case"ProvisioningReplica":case"UnRegisteringReplica":break;default:throw new Error}await Q(_e)}}function He(s){return!!s.infoFor3D&&!!s.url}function O({infoFor3D:s}){const t=W(s);if(!t)throw new le;return t}function Je(){return ae.getLogger("esri.layers.graphics.sources.support.uploadAssets")}const _e=X(1e3);export{es as uploadAssets};
