import{hB as $,dZ as v,bt as w,hC as j}from"./index-Clgsc_ww.js";import{e as g}from"./CIMSymbolHelper-CVqtVK_G.js";import{CIMSymbolRasterizer as G}from"./CIMSymbolRasterizer-CKiLSW7k.js";import{l as O,t as b}from"./symbolUtils-DM3tGsHX.js";import"./BidiEngine-QXap_35O.js";import"./fontUtils-CrrHZX7Y.js";import"./OptimizedGeometry-BF8iz5FO.js";import"./GeometryUtils-CzwzzK-1.js";import"./definitions-DyYHcW4a.js";import"./mat2df32-orApM5a3.js";import"./vec2f32-BbH2jxlN.js";import"./Rect-CUzevAry.js";import"./BoundingBox-CnpCxTZE.js";import"./CIMResourceManager-Bj07OPIG.js";import"./imageUtils-BGF-PRfx.js";import"./utils-P9W16Y3N.js";import"./cimSymbolUtils-CZW8-0MT.js";import"./webStyleSymbolUtils-C929I5M-.js";import"./devEnvironmentUtils-CnNDiFMM.js";const u=new G(null),p=w(b.size),S=w(b.maxSize),C=w(b.lineWidth),R=1;async function V(a,e,o){const i=e==null?void 0:e.size;let t=i!=null&&typeof i=="object"&&"width"in i?i.width:i,r=i!=null&&typeof i=="object"&&"height"in i?i.height:i;if(t==null||r==null)if(o==="esriGeometryPolygon")t=p,r=p;else{const l=await q(a,e,o);l&&(t=l.width,r=l.height),o==="esriGeometryPolyline"&&(t=C),t=t!=null&&isFinite(t)?Math.min(t,S):p,r=r!=null&&isFinite(r)?Math.max(Math.min(r,S),R):p}return e.style==="legend"&&o==="esriGeometryPolyline"&&(t=C),{width:t,height:r}}async function q(a,e,o){const{feature:i,fieldMap:t,viewParams:r}=e.cimOptions||e,l=await j.resolveSymbolOverrides(a.data,i,null,t,o,null,r);if(!l)return null;(a=a.clone()).data={type:"CIMSymbolReference",symbol:l},a.data.primitiveOverrides=void 0;const n=[];return g.fetchResources(l,u.resourceManager,n),g.fetchFonts(l,u.resourceManager,n),n.length>0&&await Promise.all(n),g.getEnvelope(l,null,u.resourceManager)}async function ie(a,e={}){var M;const{node:o,opacity:i,symbolConfig:t}=e,r=t!=null&&typeof t=="object"&&"isSquareFill"in t&&t.isSquareFill,l=e.cimOptions||e,n=l.geometryType||$((M=a==null?void 0:a.data)==null?void 0:M.symbol),h=await V(a,e,n),{feature:P,fieldMap:I}=l,L=r||n!=="esriGeometryPolygon"?"preview":"legend",y=await u.rasterizeCIMSymbolAsync(a,P,h,L,I,n,null,l.viewParams,l.allowScalingUp);if(!y)return null;const{width:x,height:z}=y,m=document.createElement("canvas");m.width=x,m.height=z,m.getContext("2d").putImageData(y,0,0);const f=v(h.width),d=v(h.height),s=new Image(f,d);s.src=m.toDataURL(),s.ariaLabel=e.ariaLabel??null,s.alt=e.ariaLabel??"",i!=null&&(s.style.opacity=`${i}`);let c=s;if(e.effectView!=null){const F={shape:{type:"image",x:0,y:0,width:f,height:d,src:s.src},fill:null,stroke:null,offset:[0,0]};c=O([[F]],[f,d],{effectView:e.effectView,ariaLabel:e.ariaLabel})}return o&&c&&o.appendChild(c),c}export{ie as previewCIMSymbol};
