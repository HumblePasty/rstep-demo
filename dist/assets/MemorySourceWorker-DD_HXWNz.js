import{fg as O,s as I,fh as Q,fj as Z,fi as A,bY as C,ff as S,aK as b,aE as v}from"./index-CdlB_1jZ.js";import{e as w,n as k,t as P}from"./featureConversionUtils-B6y9BgHk.js";import{t as $,n as G}from"./objectIdUtils-4dd1rf9p.js";import{m as L}from"./FeatureStore-DYcXKL8J.js";import{x as E,j as _}from"./queryUtils-DSBn9ytv.js";import{V as W}from"./QueryEngine-zFOd3zuM.js";import{a as z,l as H,u as U}from"./clientSideDefaults-B14xyqUk.js";import{j as B,f as g,p as j,d as T,y as D}from"./sourceUtils-CyNkfD1a.js";import"./OptimizedFeature-6cJ-QFG5.js";import"./OptimizedGeometry-BF8iz5FO.js";import"./OptimizedFeatureSet-Blu9Ckm7.js";import"./BoundsStore-DEqFqtGS.js";import"./PooledRBush-C5wb9ZNa.js";import"./quickselect-QQC62dOK.js";import"./timeSupport-B3EI-mjl.js";import"./optimizedFeatureQueryEngineAdapter-BOPMFOve.js";import"./centroid-DdLmOD72.js";import"./normalizeUtils-U2Ac8e-q.js";import"./normalizeUtilsCommon-NZz_4rsX.js";import"./utils-C6_UxkSn.js";import"./utils-BYArndnc.js";import"./json-Wa8cmqdu.js";import"./WhereClause-oXBVmuF6.js";import"./TimeOnly-Dm43Bq0I.js";import"./QueryEngineCapabilities-DjYb9CEb.js";import"./utils-C81fImqZ.js";import"./utils-lDwRRUNi.js";import"./Basemap-C-l1VFzS.js";import"./loadAll-DJQRbLYI.js";import"./writeUtils-BpED38n7.js";import"./utils-Cw9it73R.js";import"./ClassBreaksDefinition-DnCut8Q4.js";import"./SnappingCandidate-DGkpYqI6.js";import"./capabilities-D6exRNM4.js";import"./date-Ctp1FiBW.js";const K=S,N={xmin:-180,ymin:-90,xmax:180,ymax:90,spatialReference:S},V={hasAttachments:!1,capabilities:"query, editing, create, delete, update",useStandardizedQueries:!0,supportsCoordinatesQuantization:!0,supportsReturningQueryGeometry:!0,advancedQueryCapabilities:{supportsQueryAttachments:!1,supportsStatistics:!0,supportsPercentileStatistics:!0,supportsReturningGeometryCentroid:!0,supportsQueryWithDistance:!0,supportsDistinct:!0,supportsReturningQueryExtent:!0,supportsReturningGeometryProperties:!1,supportsHavingClause:!0,supportsOrderBy:!0,supportsPagination:!0,supportsQueryWithResultType:!0,supportsSqlExpression:!0,supportsDisjointSpatialRel:!0,supportsQueryWithCacheHint:!0}};function J(h){return v(h)?h.z!=null:!!h.hasZ}function Y(h){return v(h)?h.m!=null:!!h.hasM}class Qe{constructor(){this._queryEngine=null,this._nextObjectId=null}destroy(){var e;(e=this._queryEngine)==null||e.destroy(),this._queryEngine=this._createDefaultAttributes=null}async load(e){const i=[],{features:a}=e,r=this._inferLayerProperties(a,e.fields),l=e.fields||[],d=e.hasM!=null?e.hasM:!!r.hasM,c=e.hasZ!=null?e.hasZ:!!r.hasZ,p=!e.spatialReference&&!r.spatialReference,u=p?K:e.spatialReference||r.spatialReference,y=p?N:null,f=e.geometryType||r.geometryType,o=!f;let t=e.objectIdField||r.objectIdField,n=e.timeInfo;const m=new O(l);if(!o&&(p&&i.push({name:"feature-layer:spatial-reference-not-found",message:"Spatial reference not provided or found in features. Defaults to WGS84"}),!f))throw new I("feature-layer:missing-property","geometryType not set and couldn't be inferred from the provided features");if(!t)throw new I("feature-layer:missing-property","objectIdField not set and couldn't be found in the provided fields");if(r.objectIdField&&t!==r.objectIdField&&(i.push({name:"feature-layer:duplicated-oid-field",message:`Provided objectIdField "${t}" doesn't match the field name "${r.objectIdField}", found in the provided fields`}),t=r.objectIdField),t&&!r.objectIdField){const s=m.get(t);s?(t=s.name,s.type="esriFieldTypeOID",s.editable=!1,s.nullable=!1):l.unshift({alias:t,name:t,type:"esriFieldTypeOID",editable:!1,nullable:!1})}for(const s of l){if(s.name==null&&(s.name=s.alias),s.alias==null&&(s.alias=s.name),!s.name)throw new I("feature-layer:invalid-field-name","field name is missing",{field:s});if(s.name===t&&(s.type="esriFieldTypeOID"),!Q.jsonValues.includes(s.type))throw new I("feature-layer:invalid-field-type",`invalid type for field "${s.name}"`,{field:s});s.length==null&&(s.length=Z(s))}const F={};for(const s of l)if(s.type!=="esriFieldTypeOID"&&s.type!=="esriFieldTypeGlobalID"){const q=A(s);q!==void 0&&(F[s.name]=q)}if(n){if(n.startTimeField){const s=m.get(n.startTimeField);s?(n.startTimeField=s.name,s.type="esriFieldTypeDate"):n.startTimeField=null}if(n.endTimeField){const s=m.get(n.endTimeField);s?(n.endTimeField=s.name,s.type="esriFieldTypeDate"):n.endTimeField=null}if(n.trackIdField){const s=m.get(n.trackIdField);s?n.trackIdField=s.name:(n.trackIdField=null,i.push({name:"feature-layer:invalid-timeInfo-trackIdField",message:"trackIdField is missing",details:{timeInfo:n}}))}n.startTimeField||n.endTimeField||(i.push({name:"feature-layer:invalid-timeInfo",message:"startTimeField and endTimeField are missing or invalid",details:{timeInfo:n}}),n=null)}const x=m.dateFields.length?{timeZoneIANA:e.dateFieldsTimeZone??C}:null;this._createDefaultAttributes=z(F,t);const R={warnings:i,featureErrors:[],layerDefinition:{...V,drawingInfo:U(f),templates:H(F),extent:y,geometryType:f,objectIdField:t,fields:l,hasZ:c,hasM:d,timeInfo:n,dateFieldsTimeReference:x},assignedObjectIds:{}};if(this._queryEngine=new W({fieldsIndex:O.fromLayerJSON({fields:l,timeInfo:n,dateFieldsTimeReference:x}),geometryType:f,hasM:d,hasZ:c,objectIdField:t,spatialReference:u,featureStore:new L({geometryType:f,hasM:d,hasZ:c}),timeInfo:n}),!(a!=null&&a.length))return this._nextObjectId=$,R;const M=G(t,a);return this._nextObjectId=M+1,await E(a,u),this._loadInitialFeatures(R,a)}async applyEdits(e){const{spatialReference:i,geometryType:a}=this._queryEngine;return await Promise.all([B(i,a),E(e.adds,i),E(e.updates,i)]),this._applyEdits(e)}queryFeatures(e,i={}){return this._queryEngine.executeQuery(e,i.signal)}queryFeatureCount(e,i={}){return this._queryEngine.executeQueryForCount(e,i.signal)}queryObjectIds(e,i={}){return this._queryEngine.executeQueryForIds(e,i.signal)}queryExtent(e,i={}){return this._queryEngine.executeQueryForExtent(e,i.signal)}querySnapping(e,i={}){return this._queryEngine.executeQueryForSnapping(e,i.signal)}_inferLayerProperties(e,i){let a,r,l=null,d=null,c=null;for(const p of e){const u=p.geometry;if(u!=null&&(l||(l=b(u)),d||(d=u.spatialReference),a==null&&(a=J(u)),r==null&&(r=Y(u)),l&&d&&a!=null&&r!=null))break}if(i&&i.length){let p=null;i.some(u=>{const y=u.type==="esriFieldTypeOID",f=!u.type&&u.name&&u.name.toLowerCase()==="objectid";return p=u,y||f})&&(c=p.name)}return{geometryType:l,spatialReference:d,objectIdField:c,hasM:r,hasZ:a}}async _loadInitialFeatures(e,i){const{geometryType:a,hasM:r,hasZ:l,objectIdField:d,spatialReference:c,featureStore:p,fieldsIndex:u}=this._queryEngine,y=[];for(const t of i){if(t.uid!=null&&(e.assignedObjectIds[t.uid]=-1),t.geometry&&a!==b(t.geometry)){e.featureErrors.push(g("Incorrect geometry type."));continue}const n=this._createDefaultAttributes(),m=j(u,n,t.attributes,!0);m?e.featureErrors.push(m):(this._assignObjectId(n,t.attributes,!0),t.attributes=n,t.uid!=null&&(e.assignedObjectIds[t.uid]=t.attributes[d]),t.geometry!=null&&(t.geometry=_(t.geometry,t.geometry.spatialReference,c)),y.push(t))}p.addMany(w([],y,a,l,r,d));const{fullExtent:f,timeExtent:o}=await this._queryEngine.fetchRecomputedExtents();if(e.layerDefinition.extent=f,o){const{start:t,end:n}=o;e.layerDefinition.timeInfo.timeExtent=[t,n]}return e}async _applyEdits(e){const{adds:i,updates:a,deletes:r}=e,l={addResults:[],deleteResults:[],updateResults:[],uidToObjectId:{}};if(i!=null&&i.length&&this._applyAddEdits(l,i),a!=null&&a.length&&this._applyUpdateEdits(l,a),r==null?void 0:r.length){for(const p of r)l.deleteResults.push(T(p));this._queryEngine.featureStore.removeManyById(r)}const{fullExtent:d,timeExtent:c}=await this._queryEngine.fetchRecomputedExtents();return{extent:d,timeExtent:c,featureEditResults:l}}_applyAddEdits(e,i){const{addResults:a}=e,{geometryType:r,hasM:l,hasZ:d,objectIdField:c,spatialReference:p,featureStore:u,fieldsIndex:y}=this._queryEngine,f=[];for(const o of i){if(o.geometry&&r!==b(o.geometry)){a.push(g("Incorrect geometry type."));continue}const t=this._createDefaultAttributes(),n=j(y,t,o.attributes);if(n)a.push(n);else{if(this._assignObjectId(t,o.attributes),o.attributes=t,o.uid!=null){const m=o.attributes[c];e.uidToObjectId[o.uid]=m}if(o.geometry!=null){const m=o.geometry.spatialReference??p;o.geometry=_(D(o.geometry,m),m,p)}f.push(o),a.push(T(o.attributes[c]))}}u.addMany(w([],f,r,d,l,c))}_applyUpdateEdits({updateResults:e},i){const{geometryType:a,hasM:r,hasZ:l,objectIdField:d,spatialReference:c,featureStore:p,fieldsIndex:u}=this._queryEngine;for(const y of i){const{attributes:f,geometry:o}=y,t=f==null?void 0:f[d];if(t==null){e.push(g(`Identifier field ${d} missing`));continue}if(!p.has(t)){e.push(g(`Feature with object id ${t} missing`));continue}const n=k(p.getFeature(t),a,l,r);if(o!=null){if(a!==b(o)){e.push(g("Incorrect geometry type."));continue}const m=o.spatialReference??c;n.geometry=_(D(o,m),m,c)}if(f){const m=j(u,n.attributes,f);if(m){e.push(m);continue}}p.add(P(n,a,l,r,d)),e.push(T(t))}}_assignObjectId(e,i,a=!1){const r=this._queryEngine.objectIdField;a&&i&&isFinite(i[r])?e[r]=i[r]:e[r]=this._nextObjectId++}}export{Qe as default};
