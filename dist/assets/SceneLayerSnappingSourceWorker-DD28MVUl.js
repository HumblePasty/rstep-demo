import{jS as j,jT as f,cU as _,jU as l,cN as m,a5 as u,T as v,jV as C,a8 as p,r as y,n as L}from"./index-BeW5XHHa.js";import{v as x,b as S,j as P}from"./lineSegment-C26xFnhf.js";import{Y as b}from"./Octree-Bm09QtLt.js";import{m as T}from"./edgeProcessing-BFBqLJQR.js";import"./Util-CULiR2cx.js";import"./deduplicate-CjrB8XiJ.js";import"./Indices-C3e9MxgP.js";import"./InterleavedLayout-BGJz6YRc.js";import"./BufferView-BB-vsLR1.js";import"./types-D0PSWh4d.js";import"./VertexAttribute-Cq4MnHjR.js";import"./glUtil-CAJRmga-.js";import"./enums-D9v74xTE.js";import"./VertexElementDescriptor-BLyltQyJ.js";import"./Normals-DwZKFj7v.js";const V=1e3;function $(t,n,o){const s=j(),e=l(s);return f(e,e,t,.5),f(e,e,n,.5),s[3]=_(e,t),m(e,e,o),s}let g=class{constructor(){this._idToComponent=new Map,this._components=new b(t=>t.bounds),this._edges=new b(t=>t.bounds),this._tmpLineSegment=x(),this._tmpP1=u(),this._tmpP2=u(),this._tmpP3=u(),this.remoteClient=null}async fetchCandidates(t,n){await Promise.resolve(),v(n),await this._ensureEdgeLocations(t,n);const o=[];return this._edges.forEachNeighbor(s=>(this._addCandidates(t,s,o),o.length<V),t.bounds),{result:{candidates:o}}}async _ensureEdgeLocations(t,n){const o=[];if(this._components.forEachNeighbor(i=>{if(i.info==null){const{id:c,uid:r}=i;o.push({id:c,uid:r})}return!0},t.bounds),!o.length)return;const s={components:o},e=await this.remoteClient.invoke("fetchAllEdgeLocations",s,n??{});for(const i of e.components)this._setFetchEdgeLocations(i)}async add(t){const n=new h(t.id,t.bounds);return this._idToComponent.set(n.id,n),this._components.add([n]),{result:{}}}async remove(t){const n=this._idToComponent.get(t.id);if(n){const o=[];this._edges.forEachNeighbor(s=>(s.component===n&&o.push(s),!0),n.bounds),this._edges.remove(o),this._components.remove([n]),this._idToComponent.delete(n.id)}return{result:{}}}_setFetchEdgeLocations(t){const n=this._idToComponent.get(t.id);if(n==null||t.uid!==n.uid)return;const o=T.createView(t.locations),s=new Array(o.count),e=u(),i=u();for(let d=0;d<o.count;d++){o.position0.getVec(d,e),o.position1.getVec(d,i);const a=$(e,i,t.origin),E=new I(n,d,a);s[d]=E}this._edges.add(s);const{objectIds:c,origin:r}=t;n.info={locations:o,objectIds:c,origin:r}}_addCandidates(t,n,o){const{info:s}=n.component,{origin:e,objectIds:i}=s,c=s.locations,r=c.position0.getVec(n.index,this._tmpP1),d=c.position1.getVec(n.index,this._tmpP2);m(r,r,e),m(d,d,e);const a=i[c.componentIndex.get(n.index)];this._addEdgeCandidate(t,a,r,d,o),w(t,a,r,o),w(t,a,d,o)}_addEdgeCandidate(t,n,o,s,e){if(!t.returnEdge)return;const i=l(t.bounds),c=S(o,s,this._tmpLineSegment),r=P(c,i,this._tmpP3);C(t.bounds,r)&&e.push({type:"edge",objectId:n,target:p(r),distance:_(i,r),start:p(o),end:p(s)})}};g=y([L("esri.views.interactive.snapping.featureSources.sceneLayerSource.SceneLayerSnappingSourceWorker")],g);const K=g;function w(t,n,o,s){if(!t.returnVertex||!C(t.bounds,o))return;const e=l(t.bounds);s.push({type:"vertex",objectId:n,target:p(o),distance:_(e,o)})}class h{constructor(n,o){this.id=n,this.bounds=o,this.info=null,this.uid=++h.uid}}h.uid=0;class I{constructor(n,o,s){this.component=n,this.index=o,this.bounds=s}}export{K as default};
