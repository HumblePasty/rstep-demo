import{r as a,o as h,p as E,aS as S,b as f,K as F,a_ as M,H as C,k as R,ce as q}from"./index-CgLC99fU.js";import{a as $}from"./BitmapContainer-vjz0Fm1l.js";import{j as U}from"./LayerView2D-LzfXt3tE.js";import{_ as V}from"./ExportStrategy-CffjH-E8.js";import{y as L}from"./LayerView-9WiESYjx.js";import{i as W}from"./RefreshableLayerView-BCWZ2CKf.js";import{a as H}from"./ExportWMSImageParameters-etLMnQ3a.js";import{i as _}from"./timeSupport-3WmhpBUu.js";import"./WGLContainer-D-nkfAtw.js";import"./definitions-DyYHcW4a.js";import"./LabelMetric-CkiFKpU_.js";import"./Texture-C3YGcoid.js";import"./enums-D9v74xTE.js";import"./Program-CM9G_CqU.js";import"./BufferObject-C4nMFIWm.js";import"./VertexElementDescriptor-BLyltQyJ.js";import"./BoundingBox-CnpCxTZE.js";import"./vec2f32-BbH2jxlN.js";import"./VertexArrayObject-QcyQZhQw.js";import"./ProgramTemplate-1oR5Wis2.js";import"./mat2df32-orApM5a3.js";import"./MapView-Co-HUkgL.js";import"./ColorBackground-Bsy77oew.js";import"./Basemap-Dmz7cfxt.js";import"./editableLayers-BEzarSAf.js";import"./catalogUtils-BfCsvIc2.js";import"./basemapUtils-Dxc4EhWK.js";import"./ReactiveMap-edD7Ccaw.js";import"./IViewEvents-Bci6PjlS.js";import"./a11yUtils-B3sBDR7x.js";import"./heightModelInfoUtils-BVJF0QBd.js";import"./unitBezier-BX6NeAEr.js";import"./Tile-By0bOVs5.js";import"./TileKey-CRZ4lzEK.js";import"./QueueProcessor-gazTryI7.js";import"./quickselect-QQC62dOK.js";import"./HighlightDefaults-DfleVcD3.js";import"./imageUtils-CJFaHuI9.js";import"./capabilities-DWNhET5Y.js";import"./accessibleHandler-DtC10D7F.js";import"./GoTo-C19ZUZYZ.js";import"./vec3f32-nZdmKIgz.js";import"./Container-Gmu-g1na.js";import"./EffectView-DcVaa4Pd.js";import"./StyleDefinition-C0j-efrU.js";import"./config-BOD8--da.js";import"./earcut-D9gy186-.js";import"./Bitmap-3aBp-qE0.js";const A=r=>{let t=class extends r{initialize(){this.exportImageParameters=new H({layer:this.layer})}destroy(){this.exportImageParameters=S(this.exportImageParameters)}get exportImageVersion(){var e;return(e=this.exportImageParameters)==null||e.commitProperty("version"),this.commitProperty("timeExtent"),(this._get("exportImageVersion")||0)+1}get timeExtent(){var e;return _(this.layer,(e=this.view)==null?void 0:e.timeExtent,this._get("timeExtent"))}async fetchPopupFeaturesAtLocation(e,o){const{layer:s}=this;if(!e)throw new f("wmslayerview:fetchPopupFeatures","Nothing to fetch without area",{layer:s});const{popupEnabled:d}=s;if(!d)throw new f("wmslayerview:fetchPopupFeatures","popupEnabled should be true",{popupEnabled:d});const i=this.createFetchPopupFeaturesQuery(e);if(!i)return[];const{extent:p,width:m,height:n,x:c,y:l}=i;if(!(p&&m&&n))throw new f("wmslayerview:fetchPopupFeatures","WMSLayer does not support fetching features.",{extent:p,width:m,height:n});const y=await s.fetchFeatureInfo(p,m,n,c,l);return F(o),y}};return a([h()],t.prototype,"exportImageParameters",void 0),a([h({readOnly:!0})],t.prototype,"exportImageVersion",null),a([h()],t.prototype,"layer",void 0),a([h({readOnly:!0})],t.prototype,"timeExtent",null),t=a([E("esri.views.layers.WMSLayerView")],t),t};let u=class extends A(W(U(L))){constructor(){super(...arguments),this.bitmapContainer=new $}supportsSpatialReference(r){return this.layer.serviceSupportsSpatialReference(r)}update(r){this.strategy.update(r).catch(t=>{M(t)||C.getLogger(this).error(t)})}attach(){const{layer:r}=this,{imageMaxHeight:t,imageMaxWidth:e}=r;this.bitmapContainer=new $,this.container.addChild(this.bitmapContainer),this.strategy=new V({container:this.bitmapContainer,fetchSource:this.fetchImage.bind(this),requestUpdate:this.requestUpdate.bind(this),imageMaxHeight:t,imageMaxWidth:e,imageRotationSupported:!1,imageNormalizationSupported:!1,hidpi:!1}),this.addAttachHandles(R(()=>this.exportImageVersion,()=>this.requestUpdate()))}detach(){this.strategy=S(this.strategy),this.container.removeAllChildren()}viewChange(){}moveEnd(){this.requestUpdate()}createFetchPopupFeaturesQuery(r){const{view:t,bitmapContainer:e}=this,{x:o,y:s}=r,{spatialReference:d}=t;let i,p=0,m=0;if(e.children.some(y=>{const{width:w,height:v,resolution:b,x:g,y:x}=y,I=g+b*w,P=x-b*v;return o>=g&&o<=I&&s<=x&&s>=P&&(i=new q({xmin:g,ymin:P,xmax:I,ymax:x,spatialReference:d}),p=w,m=v,!0)}),!i)return null;const n=i.width/p,c=Math.round((o-i.xmin)/n),l=Math.round((i.ymax-s)/n);return{extent:i,width:p,height:m,x:c,y:l}}async doRefresh(){this.requestUpdate()}isUpdating(){return this.strategy.updating||this.updateRequested}fetchImage(r,t,e,o){return this.layer.fetchImageBitmap(r,t,e,{timeExtent:this.timeExtent,...o})}};a([h()],u.prototype,"strategy",void 0),a([h()],u.prototype,"updating",void 0),u=a([E("esri.views.2d.layers.WMSLayerView2D")],u);const Vt=u;export{Vt as default};
