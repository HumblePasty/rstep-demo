import{r as o,o as h,p as E,b1 as M,b as f,P as F,J as S,M as C,k as R,ck as q}from"./index-DbqNxVxJ.js";import{a as $}from"./BitmapContainer-B4i6rUk4.js";import{j as U}from"./LayerView2D-DX4DyjrV.js";import{_ as V}from"./ExportStrategy-BVn1nAEh.js";import{y as L}from"./LayerView-ByFNqdV7.js";import{i as W}from"./RefreshableLayerView-BCXJ4Y1d.js";import{a as A}from"./ExportWMSImageParameters-BjVrnhw1.js";import{i as H}from"./timeSupport-CS1opyjl.js";import"./WGLContainer-aEJfFZX6.js";import"./definitions-DyYHcW4a.js";import"./LabelMetric-BWL7JrDH.js";import"./Texture-Bl_GIld_.js";import"./enums-D9v74xTE.js";import"./Program-B7ASi8g4.js";import"./BufferObject-C7bitMFo.js";import"./VertexElementDescriptor-BLyltQyJ.js";import"./BoundingBox-CnpCxTZE.js";import"./vec2f32-BbH2jxlN.js";import"./VertexArrayObject-4MSaCQ-T.js";import"./ProgramTemplate-D0J1Kwpw.js";import"./mat2df32-orApM5a3.js";import"./MapView-Cn9MYaa7.js";import"./ColorBackground-rTDsb6IB.js";import"./Basemap-4KLP2F4G.js";import"./editableLayers-DIrZsfUW.js";import"./catalogUtils-Dw3ygtxz.js";import"./basemapUtils-rJfnFnB5.js";import"./TileInfo-DG1O849h.js";import"./TileKey-DZd6gJy7.js";import"./ReactiveMap-Cug8X0xt.js";import"./IViewEvents-Bci6PjlS.js";import"./a11yUtils-C6joKUjB.js";import"./heightModelInfoUtils-B5tZw2hT.js";import"./normalizeUtils-hz0ntiLq.js";import"./normalizeUtilsCommon-C3Voc78J.js";import"./utils-Q1Jhjtem.js";import"./utils-dAUtFwAX.js";import"./unitBezier-BX6NeAEr.js";import"./Tile-oi-60D4a.js";import"./TileKey-BnP3Lhmt.js";import"./QueueProcessor-DHv7nY6U.js";import"./quickselect-QQC62dOK.js";import"./HighlightDefaults-DUp-RYDN.js";import"./imageUtils-4era0I_Z.js";import"./capabilities-DWNhET5Y.js";import"./accessibleHandler-b2T7QkVC.js";import"./GoTo-BKF1hgcz.js";import"./vec3f32-nZdmKIgz.js";import"./Container-Cg59gA5R.js";import"./EffectView-Cnlzsu5-.js";import"./StyleDefinition-D132TQ82.js";import"./config-BOD8--da.js";import"./earcut-D9gy186-.js";import"./featureConversionUtils-nO17eUTR.js";import"./OptimizedFeature-6cJ-QFG5.js";import"./OptimizedGeometry-BF8iz5FO.js";import"./OptimizedFeatureSet-Blu9Ckm7.js";import"./Bitmap-CQjX7qDx.js";const _=r=>{let t=class extends r{initialize(){this.exportImageParameters=new A({layer:this.layer})}destroy(){this.exportImageParameters=M(this.exportImageParameters)}get exportImageVersion(){var e;return(e=this.exportImageParameters)==null||e.commitProperty("version"),this.commitProperty("timeExtent"),(this._get("exportImageVersion")||0)+1}get timeExtent(){var e;return H(this.layer,(e=this.view)==null?void 0:e.timeExtent,this._get("timeExtent"))}async fetchPopupFeaturesAtLocation(e,a){const{layer:p}=this;if(!e)throw new f("wmslayerview:fetchPopupFeatures","Nothing to fetch without area",{layer:p});const{popupEnabled:d}=p;if(!d)throw new f("wmslayerview:fetchPopupFeatures","popupEnabled should be true",{popupEnabled:d});const i=this.createFetchPopupFeaturesQuery(e);if(!i)return[];const{extent:s,width:m,height:n,x:c,y:l}=i;if(!(s&&m&&n))throw new f("wmslayerview:fetchPopupFeatures","WMSLayer does not support fetching features.",{extent:s,width:m,height:n});const y=await p.fetchFeatureInfo(s,m,n,c,l);return F(a),y}};return o([h()],t.prototype,"exportImageParameters",void 0),o([h({readOnly:!0})],t.prototype,"exportImageVersion",null),o([h()],t.prototype,"layer",void 0),o([h({readOnly:!0})],t.prototype,"timeExtent",null),t=o([E("esri.views.layers.WMSLayerView")],t),t};let u=class extends _(W(U(L))){constructor(){super(...arguments),this.bitmapContainer=new $}supportsSpatialReference(r){return this.layer.serviceSupportsSpatialReference(r)}update(r){this.strategy.update(r).catch(t=>{S(t)||C.getLogger(this).error(t)})}attach(){const{layer:r}=this,{imageMaxHeight:t,imageMaxWidth:e}=r;this.bitmapContainer=new $,this.container.addChild(this.bitmapContainer),this.strategy=new V({container:this.bitmapContainer,fetchSource:this.fetchImage.bind(this),requestUpdate:this.requestUpdate.bind(this),imageMaxHeight:t,imageMaxWidth:e,imageRotationSupported:!1,imageNormalizationSupported:!1,hidpi:!1}),this.addAttachHandles(R(()=>this.exportImageVersion,()=>this.requestUpdate()))}detach(){this.strategy=M(this.strategy),this.container.removeAllChildren()}viewChange(){}moveEnd(){this.requestUpdate()}createFetchPopupFeaturesQuery(r){const{view:t,bitmapContainer:e}=this,{x:a,y:p}=r,{spatialReference:d}=t;let i,s=0,m=0;if(e.children.some(y=>{const{width:w,height:v,resolution:b,x:g,y:x}=y,P=g+b*w,I=x-b*v;return a>=g&&a<=P&&p<=x&&p>=I&&(i=new q({xmin:g,ymin:I,xmax:P,ymax:x,spatialReference:d}),s=w,m=v,!0)}),!i)return null;const n=i.width/s,c=Math.round((a-i.xmin)/n),l=Math.round((i.ymax-p)/n);return{extent:i,width:s,height:m,x:c,y:l}}async doRefresh(){this.requestUpdate()}isUpdating(){return this.strategy.updating||this.updateRequested}fetchImage(r,t,e,a){return this.layer.fetchImageBitmap(r,t,e,{timeExtent:this.timeExtent,...a})}};o([h()],u.prototype,"strategy",void 0),o([h()],u.prototype,"updating",void 0),u=o([E("esri.views.2d.layers.WMSLayerView2D")],u);const Ot=u;export{Ot as default};
