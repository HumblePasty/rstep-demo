import{r as a,o as h,p as E,aK as S,b as f,x as F,aS as M,w as C,k as R,cj as q}from"./index-CW6gHi3a.js";import{a as $}from"./BitmapContainer-Ti2wIKL2.js";import{j as U}from"./LayerView2D-DPa_orHp.js";import{_ as V}from"./ExportStrategy-DfkYW9y0.js";import{y as L}from"./LayerView-DbQXxGKu.js";import{i as W}from"./RefreshableLayerView-S4AOBMGr.js";import{a as j}from"./ExportWMSImageParameters-BbxQB8uV.js";import{i as A}from"./timeSupport-BXhHfsLD.js";import"./WGLContainer-Ci2HHPbO.js";import"./definitions-DyYHcW4a.js";import"./LabelMetric-BpJAzKI3.js";import"./Texture-CPI1qv4O.js";import"./enums-D9v74xTE.js";import"./Program-CzR3_6cC.js";import"./BufferObject-Dd-DgKtS.js";import"./VertexElementDescriptor-BLyltQyJ.js";import"./BoundingBox-CnpCxTZE.js";import"./vec2f32-BbH2jxlN.js";import"./VertexArrayObject-Dnpi3fpX.js";import"./ProgramTemplate-B5gHjgGt.js";import"./mat2df32-orApM5a3.js";import"./MapView-CSCXeU1L.js";import"./ColorBackground-Zvl6WFwn.js";import"./Basemap-B7JH8ahh.js";import"./editableLayers-CtF83F1x.js";import"./catalogUtils-C5MM8eat.js";import"./basemapUtils-dI6tlNFF.js";import"./ReactiveMap-DJuXf8F6.js";import"./IViewEvents-Bci6PjlS.js";import"./a11yUtils-38Hxkhfu.js";import"./heightModelInfoUtils-Cb4tsNOg.js";import"./unitBezier-BX6NeAEr.js";import"./Tile-Dz_dvAiT.js";import"./TileKey-gYTcETqi.js";import"./QueueProcessor-D7-0R4uc.js";import"./quickselect-QQC62dOK.js";import"./HighlightDefaults-ed6mFyf9.js";import"./imageUtils-CI6jvOe2.js";import"./capabilities-DWNhET5Y.js";import"./accessibleHandler-zttpahxM.js";import"./GoTo-D23tvqtp.js";import"./vec3f32-nZdmKIgz.js";import"./Container-BZIK0L5b.js";import"./EffectView-CxFHuewt.js";import"./StyleDefinition-BCMmD6Hs.js";import"./config-BOD8--da.js";import"./earcut-D9gy186-.js";import"./Bitmap-j-dQEQv6.js";const H=r=>{let t=class extends r{initialize(){this.exportImageParameters=new j({layer:this.layer})}destroy(){this.exportImageParameters=S(this.exportImageParameters)}get exportImageVersion(){var e;return(e=this.exportImageParameters)==null||e.commitProperty("version"),this.commitProperty("timeExtent"),(this._get("exportImageVersion")||0)+1}get timeExtent(){var e;return A(this.layer,(e=this.view)==null?void 0:e.timeExtent,this._get("timeExtent"))}async fetchPopupFeaturesAtLocation(e,o){const{layer:s}=this;if(!e)throw new f("wmslayerview:fetchPopupFeatures","Nothing to fetch without area",{layer:s});const{popupEnabled:d}=s;if(!d)throw new f("wmslayerview:fetchPopupFeatures","popupEnabled should be true",{popupEnabled:d});const i=this.createFetchPopupFeaturesQuery(e);if(!i)return[];const{extent:p,width:m,height:n,x:c,y:l}=i;if(!(p&&m&&n))throw new f("wmslayerview:fetchPopupFeatures","WMSLayer does not support fetching features.",{extent:p,width:m,height:n});const y=await s.fetchFeatureInfo(p,m,n,c,l);return F(o),y}};return a([h()],t.prototype,"exportImageParameters",void 0),a([h({readOnly:!0})],t.prototype,"exportImageVersion",null),a([h()],t.prototype,"layer",void 0),a([h({readOnly:!0})],t.prototype,"timeExtent",null),t=a([E("esri.views.layers.WMSLayerView")],t),t};let u=class extends H(W(U(L))){constructor(){super(...arguments),this.bitmapContainer=new $}supportsSpatialReference(r){return this.layer.serviceSupportsSpatialReference(r)}update(r){this.strategy.update(r).catch(t=>{M(t)||C.getLogger(this).error(t)})}attach(){const{layer:r}=this,{imageMaxHeight:t,imageMaxWidth:e}=r;this.bitmapContainer=new $,this.container.addChild(this.bitmapContainer),this.strategy=new V({container:this.bitmapContainer,fetchSource:this.fetchImage.bind(this),requestUpdate:this.requestUpdate.bind(this),imageMaxHeight:t,imageMaxWidth:e,imageRotationSupported:!1,imageNormalizationSupported:!1,hidpi:!1}),this.addAttachHandles(R(()=>this.exportImageVersion,()=>this.requestUpdate()))}detach(){this.strategy=S(this.strategy),this.container.removeAllChildren()}viewChange(){}moveEnd(){this.requestUpdate()}createFetchPopupFeaturesQuery(r){const{view:t,bitmapContainer:e}=this,{x:o,y:s}=r,{spatialReference:d}=t;let i,p=0,m=0;if(e.children.some(y=>{const{width:w,height:v,resolution:b,x:g,y:x}=y,I=g+b*w,P=x-b*v;return o>=g&&o<=I&&s<=x&&s>=P&&(i=new q({xmin:g,ymin:P,xmax:I,ymax:x,spatialReference:d}),p=w,m=v,!0)}),!i)return null;const n=i.width/p,c=Math.round((o-i.xmin)/n),l=Math.round((i.ymax-s)/n);return{extent:i,width:p,height:m,x:c,y:l}}async doRefresh(){this.requestUpdate()}isUpdating(){return this.strategy.updating||this.updateRequested}fetchImage(r,t,e,o){return this.layer.fetchImageBitmap(r,t,e,{timeExtent:this.timeExtent,...o})}};a([h()],u.prototype,"strategy",void 0),a([h()],u.prototype,"updating",void 0),u=a([E("esri.views.2d.layers.WMSLayerView2D")],u);const Vt=u;export{Vt as default};
