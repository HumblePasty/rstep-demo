import{r as s,o as n,k7 as _,p as d,k as m,b as c,bD as g,m as f,a4 as l}from"./index-iVlkrMet.js";import{n as v,r as S}from"./FeatureLayerView2D-CKoblqUj.js";import"./EffectView-D_eanp_g.js";import"./featureConversionUtils-OHAPdSRR.js";import"./OptimizedFeature-6cJ-QFG5.js";import"./OptimizedGeometry-BF8iz5FO.js";import"./OptimizedFeatureSet-Blu9Ckm7.js";import"./timeSupport-CMkcJ6qh.js";import"./LayerView2D-ByFzhYsh.js";import"./Container-CRnBPCQQ.js";import"./MapView-CmUlEZ03.js";import"./ColorBackground-r4rnu2aW.js";import"./Basemap-BTOnfB6q.js";import"./editableLayers-BUxD9Rs8.js";import"./catalogUtils-J1X8hQ-e.js";import"./basemapUtils-CV5TcQzY.js";import"./TileInfo-C_JVarU6.js";import"./TileKey-DZd6gJy7.js";import"./ReactiveMap-BBqjIwDS.js";import"./IViewEvents-Bci6PjlS.js";import"./a11yUtils-B8bCuohp.js";import"./heightModelInfoUtils-BWeWnrL-.js";import"./normalizeUtils-DQsVP1km.js";import"./normalizeUtilsCommon-Che8FPCx.js";import"./utils-oO-C4Iyn.js";import"./utils-DiRmdl4x.js";import"./mat2df32-orApM5a3.js";import"./vec2f32-BbH2jxlN.js";import"./unitBezier-BX6NeAEr.js";import"./Tile-BmZ8lmVE.js";import"./TileKey-dQAx_7Fk.js";import"./QueueProcessor-VIg_xa4w.js";import"./quickselect-QQC62dOK.js";import"./definitions-DyYHcW4a.js";import"./HighlightDefaults-_3Lw8Xdr.js";import"./enums-D9v74xTE.js";import"./Texture-BPY80ch1.js";import"./imageUtils-BOESpqtI.js";import"./capabilities-DWNhET5Y.js";import"./accessibleHandler-BoVgh6NQ.js";import"./GoTo-COuiYkgM.js";import"./TechniqueInstance-CgOlmYkQ.js";import"./UpdateTracking2D-BeRQQF2D.js";import"./BindType-BmZEZMMh.js";import"./Util-B_VVMmYm.js";import"./Program-DmQFWlLN.js";import"./BufferObject-C2WaK149.js";import"./LabelMetric-MmCl6fCY.js";import"./VertexElementDescriptor-BLyltQyJ.js";import"./BoundingBox-CnpCxTZE.js";import"./TileContainer-Bai_qZNv.js";import"./WGLContainer-C9k3y6pY.js";import"./VertexArrayObject-DsitYV1k.js";import"./ProgramTemplate-B3_AeFml.js";import"./vec3f32-nZdmKIgz.js";import"./StyleDefinition-jNkd3dme.js";import"./config-BOD8--da.js";import"./earcut-D9gy186-.js";import"./FeatureCommandQueue-Org9AnbM.js";import"./CIMSymbolHelper-CvLlQYVV.js";import"./BidiEngine-QXap_35O.js";import"./fontUtils-ExLwdcvY.js";import"./GeometryUtils-B9fWQhnN.js";import"./Rect-CUzevAry.js";import"./constants-F8oTIn7N.js";import"./CircularArray-CujHzHWW.js";import"./featureReductionUtils-Caulfaw_.js";import"./SDFHelper-D6xg-bWl.js";import"./floatRGBA-DpUYmhbT.js";import"./HighlightCounter-Czi-fdpx.js";import"./floorFilterUtils-DZ5C6FQv.js";import"./popupUtils-CCR84YDf.js";import"./LayerView-BMeRKo2V.js";import"./RefreshableLayerView-CGdZN47k.js";const C=e=>{let t=class extends e{resume(){this._isUserPaused=!1,this.suspended||this._doResume()}pause(){this._isUserPaused=!0,this.suspended||this._doPause()}disconnect(){this._doDisconnect()}connect(){this._doConnect()}clear(){this._doClear()}constructor(...r){super(...r),this._isUserPaused=!1,this.filter=null}get connectionStatus(){return(this._isUserPaused||this.suspended)&&this._streamConnectionStatus==="connected"?"paused":this._streamConnectionStatus}_onSuspendedChange(r){r?this._doPause():this._isUserPaused||this._doResume()}};return s([n()],t.prototype,"_isUserPaused",void 0),s([n({readOnly:!0})],t.prototype,"connectionStatus",null),s([n({type:_})],t.prototype,"filter",void 0),t=s([d("esri.views.layers.StreamLayerView")],t),t};let o=class extends C(S){constructor(){super(...arguments),this.pipelineConnectionStatus="disconnected",this.pipelineErrorString=null}initialize(){this.addHandles([m(()=>this.layer.customParameters,async e=>{(await this.getWorker()).streamMessenger.updateCustomParameters(e)}),this.layer.on("send-message-to-socket",async e=>{(await this.getWorker()).streamMessenger.sendMessageToSocket(e)}),this.layer.on("send-message-to-client",async e=>{(await this.getWorker()).streamMessenger.sendMessageToClient(e),this._isUserPaused&&"type"in e&&e.type==="clear"&&this.incrementSourceRefreshVersion()}),m(()=>this.layer.purgeOptions,()=>this._update()),m(()=>this.suspended,this._onSuspendedChange.bind(this))],"constructor"),this._doResume()}destroy(){this._doPause()}get connectionError(){return this.pipelineErrorString?new c("stream-controller",this.pipelineErrorString):null}on(e,t){if(Array.isArray(e))return g(e.map(i=>this.on(i,t)));const r=["data-received","message-received"].includes(e);r&&this.getWorker().then(i=>i.streamMessenger.enableEvent(e,!0));const p=super.on(e,t),a=this;return f(()=>{p.remove(),r&&(a._workerProxy.closed||a.hasEventListener(e)||a.getWorker().then(i=>i.streamMessenger.enableEvent(e,!1)))})}async queryLatestObservations(e,t){var p,a,i;if(!((p=this.layer.timeInfo)!=null&&p.endField||(a=this.layer.timeInfo)!=null&&a.startField||(i=this.layer.timeInfo)!=null&&i.trackIdField))throw new c("streamlayer-no-timeField","queryLatestObservation can only be used with services that define a TrackIdField");const r=await this.getWorker();return v(r.features.executeQueryForLatestObservations(this._cleanUpQuery(e),t).then(y=>{const u=l.fromJSON(y);return u.features.forEach(h=>{h.layer=this.layer,h.sourceLayer=this.layer}),u}),new l({features:[]}))}detach(){super.detach(),this.pipelineConnectionStatus="disconnected"}get _streamConnectionStatus(){return this.pipelineConnectionStatus}_doPause(){this._refreshInterval!=null&&(clearInterval(this._refreshInterval),this._refreshInterval=null)}_doResume(){this._refreshInterval=setInterval(()=>this.incrementSourceRefreshVersion(),this.layer.updateInterval)}_doDisconnect(){this.getWorker().then(e=>e.streamMessenger.disconnect()),this._doPause()}_doConnect(){this.getWorker().then(e=>e.streamMessenger.connect()),this.resume()}_doClear(){this.getWorker().then(e=>e.streamMessenger.clear()),this._refreshInterval==null&&this.incrementSourceRefreshVersion()}_createClientOptions(){const e=super._createClientOptions(),t=this;return{...e,get container(){return t.featureContainer},setProperty:r=>{this.set(r.propertyName,r.value)}}}};s([n()],o.prototype,"pipelineConnectionStatus",void 0),s([n()],o.prototype,"pipelineErrorString",void 0),s([n({readOnly:!0})],o.prototype,"connectionError",null),s([n({readOnly:!0})],o.prototype,"_streamConnectionStatus",null),o=s([d("esri.views.2d.layers.StreamLayerView2D")],o);const Qe=o;export{Qe as default};
