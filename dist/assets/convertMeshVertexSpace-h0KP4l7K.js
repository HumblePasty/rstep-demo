import{P as p,b as m,a0 as i}from"./index-Clgsc_ww.js";import{p as n}from"./MeshVertexAttributes-bz6lSTa4.js";import{B as a}from"./vertexSpaceConversion-BSe8FmEy.js";import"./meshProperties-C4iW0Ukm.js";import"./spatialReferenceEllipsoidUtils-YYGMbrLg.js";import"./computeTranslationToOriginAndRotation-DRnFiqrY.js";import"./vec3-CdDgk9pU.js";import"./BufferView-Zyvo5bA0.js";import"./vec4-bQiYVhvO.js";async function A(t,e,r){await Promise.resolve(),p(r);const o=a(t,e,{useEllipsoid:r==null?void 0:r.useEllipsoid});if(!o)throw new m("meshUtils:convertVertexSpace()","Failed to convert to provided vertex space due to projection errors");const s=t.cloneAndModifyVertexAttributes(new n({...o,uv:i(t.vertexAttributes.uv),color:i(t.vertexAttributes.color)}),e);return s.transform=null,s}export{A as convertMeshVertexSpace};
