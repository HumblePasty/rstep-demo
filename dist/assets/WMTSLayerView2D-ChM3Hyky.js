import{aq as l,gQ as y,J as c,M as w,r as u,o as g,p as I}from"./index-Clgsc_ww.js";import{r as S,n as f}from"./imageUtils-CLIdKMsr.js";import{j as T}from"./LayerView2D-C1thh6TT.js";import{h as V,p as v,r as x}from"./Tile-DyPqReij.js";import{e as d}from"./TileKey-BYE4o8R3.js";import{y as M}from"./LayerView-CwzjKKP6.js";import{i as q}from"./RefreshableLayerView-CA1Shz9I.js";import"./MapView-BSc05RhZ.js";import"./ColorBackground-Culo9zv3.js";import"./Basemap-C55jA_4J.js";import"./editableLayers-D01jxX5I.js";import"./catalogUtils-nuN0YsKB.js";import"./basemapUtils-BtVgAZyh.js";import"./TileInfo-DE_C4-d4.js";import"./TileKey-DZd6gJy7.js";import"./ReactiveMap-BZ7M9Iai.js";import"./IViewEvents-Bci6PjlS.js";import"./a11yUtils-DpDdtsvA.js";import"./heightModelInfoUtils-BJnvTU2F.js";import"./normalizeUtils-D41z3Sc6.js";import"./normalizeUtilsCommon-DdoKG547.js";import"./utils-B95B5uOD.js";import"./utils-DSCvw780.js";import"./mat2df32-orApM5a3.js";import"./vec2f32-BbH2jxlN.js";import"./unitBezier-BX6NeAEr.js";import"./definitions-DyYHcW4a.js";import"./HighlightDefaults-B3qdZrQW.js";import"./enums-D9v74xTE.js";import"./Texture-DyXOhKsV.js";import"./imageUtils-BGF-PRfx.js";import"./capabilities-DWNhET5Y.js";import"./accessibleHandler-CAka6Pgv.js";import"./GoTo-D0c6IP3K.js";import"./Bitmap-CWNapWKA.js";import"./Container-BU1u2SIH.js";import"./EffectView-C4l0-Don.js";import"./WGLContainer-Dp52BGRV.js";import"./LabelMetric-DpBQcGA5.js";import"./Program-CbpDqC-1.js";import"./BufferObject-BG_LvDvc.js";import"./VertexElementDescriptor-BLyltQyJ.js";import"./BoundingBox-CnpCxTZE.js";import"./VertexArrayObject-Be6iuBkl.js";import"./ProgramTemplate-C8RFrvgL.js";import"./vec3f32-nZdmKIgz.js";import"./StyleDefinition-DaF-Cgaa.js";import"./config-BOD8--da.js";import"./earcut-D9gy186-.js";import"./featureConversionUtils-DN0wCCRp.js";import"./OptimizedFeature-6cJ-QFG5.js";import"./OptimizedGeometry-BF8iz5FO.js";import"./OptimizedFeatureSet-Blu9Ckm7.js";import"./TileContainer-D2WHgY1q.js";import"./QueueProcessor-DJXUtTsL.js";import"./quickselect-QQC62dOK.js";const Q=[0,0];let s=class extends q(S(T(M))){constructor(){super(...arguments),this._tileStrategy=null,this._fetchQueue=null,this.layer=null}get tileMatrixSet(){var r;const{activeLayer:t}=this.layer,{tileMatrixSet:e}=t;if(e&&l((r=e.tileInfo)==null?void 0:r.spatialReference,this.view.spatialReference))return e;const i=this._getTileMatrixSetBySpatialReference(t);return i&&i.id!==t.tileMatrixSetId?(t.tileMatrixSetId=i.id,i):null}update(t){this._fetchQueue.pause(),this._fetchQueue.state=t.state,this._tileStrategy.update(t),this._fetchQueue.resume()}attach(){var e;const t=(e=this.tileMatrixSet)==null?void 0:e.tileInfo;t&&(this._tileInfoView=new V(t),this._fetchQueue=new v({tileInfoView:this._tileInfoView,concurrency:16,process:(i,r)=>this.fetchTile(i,r),scheduler:this.scheduler,priority:y.MAPVIEW_FETCH_QUEUE}),this._tileStrategy=new x({cachePolicy:"keep",resampling:!0,acquireTile:i=>this.acquireTile(i),releaseTile:i=>this.releaseTile(i),tileInfoView:this._tileInfoView}),this.addAttachHandles(this._updatingHandles.add(()=>{var i,r;return[(r=(i=this.layer)==null?void 0:i.activeLayer)==null?void 0:r.styleId,this.tileMatrixSet]},()=>this.doRefresh())),super.attach())}detach(){var t,e;super.detach(),(t=this._tileStrategy)==null||t.destroy(),(e=this._fetchQueue)==null||e.destroy(),this._fetchQueue=this._tileStrategy=this._tileInfoView=null}viewChange(){this.requestUpdate()}moveEnd(){this.requestUpdate()}supportsSpatialReference(t){var e;return((e=this.layer.activeLayer.tileMatrixSets)==null?void 0:e.some(i=>{var r;return l((r=i.tileInfo)==null?void 0:r.spatialReference,t)}))??!1}async doRefresh(){if(this.attached){if(this.suspended)return this._tileStrategy.clear(),void this.requestUpdate();this._fetchQueue.reset(),this._tileStrategy.refresh(t=>this._updatingHandles.addPromise(this._enqueueTileFetch(t)))}}acquireTile(t){const e=this._bitmapView.createTile(t),i=e.bitmap;return[i.x,i.y]=this._tileInfoView.getTileCoords(Q,e.key),i.resolution=this._tileInfoView.getTileResolution(e.key),[i.width,i.height]=this._tileInfoView.tileInfo.size,this._updatingHandles.addPromise(this._enqueueTileFetch(e)),this._bitmapView.addChild(e),this.requestUpdate(),e}releaseTile(t){this._fetchQueue.abort(t.key.id),this._bitmapView.removeChild(t),t.once("detach",()=>t.destroy()),this.requestUpdate()}async fetchTile(t,e={}){const i="tilemapCache"in this.layer?this.layer.tilemapCache:null,{signal:r,resamplingLevel:h=0}=e;if(!i)return this._fetchImage(t,r);const a=new d(0,0,0,0);let p;try{await i.fetchAvailabilityUpsample(t.level,t.row,t.col,a,{signal:r}),p=await this._fetchImage(a,r)}catch(o){if(c(o))throw o;if(h<3){const n=this._tileInfoView.getTileParentId(t.id);if(n){const m=new d(n),_=await this.fetchTile(m,{...e,resamplingLevel:h+1});return f(this._tileInfoView,_,m,t)}}throw o}return f(this._tileInfoView,p,a,t)}canResume(){const t=super.canResume();return t&&this.tileMatrixSet!==null}async _enqueueTileFetch(t){if(!this._fetchQueue.has(t.key.id)){try{const e=await this._fetchQueue.push(t.key);t.bitmap.source=e,t.bitmap.width=this._tileInfoView.tileInfo.size[0],t.bitmap.height=this._tileInfoView.tileInfo.size[1],t.once("attach",()=>this.requestUpdate())}catch(e){c(e)||w.getLogger(this).error(e)}this.requestUpdate()}}async _fetchImage(t,e){return this.layer.fetchImageBitmapTile(t.level,t.row,t.col,{signal:e})}_getTileMatrixSetBySpatialReference(t){var e;return(e=t.tileMatrixSets)==null?void 0:e.find(i=>{var r;return l((r=i.tileInfo)==null?void 0:r.spatialReference,this.view.spatialReference)})}};u([g({readOnly:!0})],s.prototype,"tileMatrixSet",null),s=u([I("esri.views.2d.layers.WMTSLayerView2D")],s);const Ut=s;export{Ut as default};
