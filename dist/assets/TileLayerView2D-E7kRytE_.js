import{hn as w,ho as y,hp as I,m as V,ah as H,aS as l,w as v,r as n,o as g,p as T}from"./index-CW6gHi3a.js";import"./floatRGBA-CJ1WMLJF.js";import"./definitions-DyYHcW4a.js";import"./UpdateTracking2D-B8l698Xy.js";import"./GeometryUtils-CAixfqJt.js";import"./CIMSymbolHelper-C0OGMFuw.js";import"./vec2f32-BbH2jxlN.js";import"./EffectView-CxFHuewt.js";import"./Container-BZIK0L5b.js";import"./MapView-CSCXeU1L.js";import"./WGLContainer-Ci2HHPbO.js";import"./Texture-CPI1qv4O.js";import"./enums-D9v74xTE.js";import"./Program-CzR3_6cC.js";import"./LabelMetric-BpJAzKI3.js";import"./StyleDefinition-BCMmD6Hs.js";import"./enums-BRzLM11V.js";import"./GridShader-qDbWqvhb.js";import"./FeatureCommandQueue-D9MoK3HE.js";import"./PieChartMeshWriter-3oR6wQgB.js";import"./renderState-5U5mGt-0.js";import"./interfaces-DDtDqZYj.js";import"./testSVGPremultipliedAlpha-vHKPmiEk.js";import{F as q}from"./GraphicsView2D-1jyxP5lD.js";import"./earcut-D9gy186-.js";import"./vec3f32-nZdmKIgz.js";import{r as U,o as m,n as f}from"./imageUtils-DIW2l_EF.js";import{j as C}from"./LayerView2D-DPa_orHp.js";import{h as b}from"./HighlightGraphicContainer-DcEaXIpm.js";import{h as Q,p as S,r as $}from"./Tile-Dz_dvAiT.js";import{e as d}from"./TileKey-gYTcETqi.js";import{y as F}from"./LayerView-DbQXxGKu.js";import{i as P}from"./RefreshableLayerView-S4AOBMGr.js";import{_ as L,R as k}from"./MapServiceLayerViewHelper-B72wJicy.js";import"./BindType-BmZEZMMh.js";import"./Util-CH0CKLV8.js";import"./ReactiveMap-DJuXf8F6.js";import"./BidiEngine-QXap_35O.js";import"./fontUtils-DtbQOETI.js";import"./mat2df32-orApM5a3.js";import"./Rect-CUzevAry.js";import"./BoundingBox-CnpCxTZE.js";import"./ColorBackground-Zvl6WFwn.js";import"./Basemap-B7JH8ahh.js";import"./editableLayers-CtF83F1x.js";import"./catalogUtils-C5MM8eat.js";import"./basemapUtils-dI6tlNFF.js";import"./IViewEvents-Bci6PjlS.js";import"./a11yUtils-38Hxkhfu.js";import"./heightModelInfoUtils-Cb4tsNOg.js";import"./unitBezier-BX6NeAEr.js";import"./HighlightDefaults-ed6mFyf9.js";import"./imageUtils-CI6jvOe2.js";import"./capabilities-DWNhET5Y.js";import"./accessibleHandler-zttpahxM.js";import"./GoTo-D23tvqtp.js";import"./BufferObject-Dd-DgKtS.js";import"./VertexArrayObject-Dnpi3fpX.js";import"./VertexElementDescriptor-BLyltQyJ.js";import"./ProgramTemplate-B5gHjgGt.js";import"./config-BOD8--da.js";import"./CircularArray-CujHzHWW.js";import"./AttributeStore-nIWrljAo.js";import"./TimeOnly-BaFYDIX2.js";import"./centroid-DdLmOD72.js";import"./queryUtils-BGbLhWX4.js";import"./json-Wa8cmqdu.js";import"./timeSupport-CsJwyL03.js";import"./constants-F8oTIn7N.js";import"./QueueProcessor-D7-0R4uc.js";import"./TurboLine-AZ7xwrcY.js";import"./basicInterfaces-CZwQPxTp.js";import"./normalizeUtilsSync-mw0m7D4I.js";import"./Bitmap-j-dQEQv6.js";import"./TileContainer-DfriXqr1.js";import"./AGraphicContainer-DSVNFEzN.js";import"./TechniqueInstance-lGQcppc2.js";import"./quickselect-QQC62dOK.js";import"./languageUtils-DrvJeVtZ.js";import"./ImmutableArray-BPVd6ESQ.js";import"./shared-DHN2EuM_.js";import"./number-DJ1nw-kS.js";import"./scaleUtils-BztCJiiV.js";import"./floorFilterUtils-DZ5C6FQv.js";import"./highlightUtils-Dehwe1SE.js";import"./popupUtils-CIUHgiKq.js";const E=[0,0];let p=class extends P(U(C(F))){constructor(){super(...arguments),this._fetchQueue=null,this._highlightGraphics=new w,this._highlightView=null,this._popupHighlightHelper=null,this._tileStrategy=null,this.layer=null}get resampling(){return!("resampling"in this.layer)||this.layer.resampling!==!1}get tilemapCache(){return"tilemapCache"in this.layer?this.layer.tilemapCache:null}update(t){var i;this._fetchQueue.pause(),this._fetchQueue.state=t.state,this._tileStrategy.update(t),this._fetchQueue.resume(),(i=this._highlightView)==null||i.processUpdate(t)}attach(){const t="tileServers"in this.layer?this.layer.tileServers:null,i=this.tilemapCache;if(this._tileInfoView=new Q(this.layer.tileInfo,this.layer.fullExtent,i==null?void 0:i.effectiveMinLOD,i==null?void 0:i.effectiveMaxLOD),this._fetchQueue=new S({tileInfoView:this._tileInfoView,concurrency:t&&10*t.length||10,process:(e,r)=>this.fetchTile(e,r),scheduler:this.scheduler,priority:y.MAPVIEW_FETCH_QUEUE}),this._tileStrategy=new $({cachePolicy:"keep",resampling:this.resampling,acquireTile:e=>this.acquireTile(e),releaseTile:e=>this.releaseTile(e),tileInfoView:this._tileInfoView}),L(this,this.layer)){const e=this._highlightView=new q({view:this.view,graphics:this._highlightGraphics,requestUpdateCallback:()=>this.requestUpdate(),container:new b(this.view.featuresTilingScheme),defaultPointSymbolEnabled:!1});this.container.addChild(this._highlightView.container),this._popupHighlightHelper=new k({createFetchPopupFeaturesQueryGeometry:(r,h)=>I(r,h,this.view),highlightGraphics:this._highlightGraphics,highlightGraphicUpdated:(r,h)=>{e.graphicUpdateHandler({graphic:r,property:h})},layerView:this,updatingHandles:this._updatingHandles})}this.requestUpdate(),this.addAttachHandles(this._updatingHandles.add(()=>this.resampling,()=>{this.doRefresh()})),super.attach()}detach(){var t,i;super.detach(),this._tileStrategy.destroy(),this._fetchQueue.clear(),this.container.removeAllChildren(),(t=this._popupHighlightHelper)==null||t.destroy(),(i=this._highlightView)==null||i.destroy(),this._fetchQueue=this._tileStrategy=this._tileInfoView=this._popupHighlightHelper=null}async fetchPopupFeaturesAtLocation(t,i){return this._popupHighlightHelper?this._popupHighlightHelper.fetchPopupFeaturesAtLocation(t,i):[]}highlight(t){return this._popupHighlightHelper?this._popupHighlightHelper.highlight(t):V()}viewChange(){this.requestUpdate()}moveEnd(){this.requestUpdate()}supportsSpatialReference(t){var i;return H((i=this.layer.tileInfo)==null?void 0:i.spatialReference,t)}async doRefresh(){if(this.attached){if(this.suspended)return this._tileStrategy.clear(),void this.requestUpdate();this._fetchQueue.reset(),this._tileStrategy.refresh(t=>this._updatingHandles.addPromise(this._enqueueTileFetch(t)))}}acquireTile(t){const i=this._bitmapView.createTile(t),e=i.bitmap;return[e.x,e.y]=this._tileInfoView.getTileCoords(E,i.key),e.resolution=this._tileInfoView.getTileResolution(i.key),[e.width,e.height]=this._tileInfoView.tileInfo.size,this._updatingHandles.addPromise(this._enqueueTileFetch(i)),this._bitmapView.addChild(i),this.requestUpdate(),i}releaseTile(t){this._fetchQueue.abort(t.key.id),this._bitmapView.removeChild(t),t.once("detach",()=>t.destroy()),this.requestUpdate()}async fetchTile(t,i={}){const e=this.tilemapCache,{signal:r,resamplingLevel:h=0}=i;if(!e)try{return await this._fetchImage(t,r)}catch(s){if(!l(s)&&!this.resampling)return m(this._tileInfoView.tileInfo.size);if(h<3){const u=this._tileInfoView.getTileParentId(t.id);if(u){const c=new d(u),_=await this.fetchTile(c,{...i,resamplingLevel:h+1});return f(this._tileInfoView,_,c,t)}}throw s}const o=new d(0,0,0,0);let a;try{if(await e.fetchAvailabilityUpsample(t.level,t.row,t.col,o,{signal:r}),!this.resampling&&o.level!==t.level)return m(this._tileInfoView.tileInfo.size);a=await this._fetchImage(o,r)}catch(s){if(l(s))throw s;return m(this._tileInfoView.tileInfo.size)}return this.resampling?f(this._tileInfoView,a,o,t):a}async _enqueueTileFetch(t){if(!this._fetchQueue.has(t.key.id)){try{const i=await this._fetchQueue.push(t.key);t.bitmap.source=i,t.bitmap.width=this._tileInfoView.tileInfo.size[0],t.bitmap.height=this._tileInfoView.tileInfo.size[1],t.once("attach",()=>this.requestUpdate())}catch(i){l(i)||v.getLogger(this).error(i)}this.requestUpdate()}}async _fetchImage(t,i){return this.layer.fetchImageBitmapTile(t.level,t.row,t.col,{signal:i})}};n([g()],p.prototype,"resampling",null),n([g()],p.prototype,"tilemapCache",null),p=n([T("esri.views.2d.layers.TileLayerView2D")],p);const fi=p;export{fi as default};
