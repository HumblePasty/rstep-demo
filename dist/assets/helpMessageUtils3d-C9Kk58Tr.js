import{cr as l,fc as M,ec as P,a7 as S,fd as T,fe as A}from"./index-DbqNxVxJ.js";function D(e,s){const a=e==null?void 0:e.geometry;if(!e||(a==null?void 0:a.type)!=="mesh"||!s)return;const{renderCoordsHelper:m,elevationProvider:x}=s,{camera:d}=s.state,{extent:t}=a,{center:h,spatialReference:r}=t,z=l(r),n=M(r),v=l(m.spatialReference),w=t.width*z,y=t.height*n,f=(t.zmax??0)*n,u=f-(t.zmin??0)*n,C=Math.max(w,y,u)/v,{x:c,y:i}=h,p=h.z??0;P(o,c,i,p),m.toRenderCoords(o,r,o);const g=C/d.computeScreenPixelSizeAt(o);if(g>d.width*U)return"meshTooClose";if(g<H)return"meshTooFar";const R=T(e),{absoluteZ:b}=A(c,i,f,r,s,R);return b<(x.getElevation(c,i,p,r,"ground")??0)*n+u*j?"meshUnderground":"mesh"}const H=20,U=1,j=.1,o=S();export{D as getDrawMeshHelpMessage};
