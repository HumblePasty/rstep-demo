import{x as p,b as m,N as i}from"./index-BlU5-B7d.js";import{p as n}from"./MeshVertexAttributes-DR4YQQci.js";import{B as a}from"./vertexSpaceConversion-CEe4seBv.js";import"./meshProperties-C4iW0Ukm.js";import"./spatialReferenceEllipsoidUtils-Do52pa15.js";import"./computeTranslationToOriginAndRotation-yPeVNk0h.js";import"./vec3-CXBv8sd6.js";import"./BufferView-CrA8PvYV.js";import"./vec4-Ch273w4Z.js";async function A(t,e,r){await Promise.resolve(),p(r);const o=a(t,e,{useEllipsoid:r==null?void 0:r.useEllipsoid});if(!o)throw new m("meshUtils:convertVertexSpace()","Failed to convert to provided vertex space due to projection errors");const s=t.cloneAndModifyVertexAttributes(new n({...o,uv:i(t.vertexAttributes.uv),color:i(t.vertexAttributes.color)}),e);return s.transform=null,s}export{A as convertMeshVertexSpace};
