import{ai as u,V as f,F as w,j as m,g as h,gW as p,gV as y,r as _,n as V}from"./index-CdlB_1jZ.js";import{j as v}from"./LayerView2D-Cm48yCIP.js";import{t as g}from"./GraphicContainer-DanE4x1K.js";import{F as c}from"./GraphicsView2D-CQ2pehhV.js";import{y as C}from"./LayerView-CBPi4mUl.js";import"./Container-Uoh4jaDK.js";import"./MapView-yTXyrQAB.js";import"./ColorBackground-D1ULsJaW.js";import"./Basemap-C-l1VFzS.js";import"./loadAll-DJQRbLYI.js";import"./writeUtils-BpED38n7.js";import"./CollectionFlattener-DXYq1j4X.js";import"./editableLayers-DkMgipBa.js";import"./catalogUtils-CXc9Bdsq.js";import"./basemapUtils-C74MB7Dv.js";import"./TablesMixin-tb_nsbF-.js";import"./TileInfo-D7e1w-ZU.js";import"./TileKey-DZd6gJy7.js";import"./ReactiveMap-BRPQi2qg.js";import"./IViewEvents-Bci6PjlS.js";import"./a11yUtils-Jh-oCjsl.js";import"./heightModelInfoUtils-DdsjbWes.js";import"./normalizeUtils-U2Ac8e-q.js";import"./normalizeUtilsCommon-NZz_4rsX.js";import"./utils-C6_UxkSn.js";import"./utils-BYArndnc.js";import"./mat2df32-orApM5a3.js";import"./vec2f32-BbH2jxlN.js";import"./unitBezier-BX6NeAEr.js";import"./Tile-D8AXtJJB.js";import"./TileKey-VlJgKBZa.js";import"./QueueProcessor-CtXkZibc.js";import"./quickselect-QQC62dOK.js";import"./definitions-DyYHcW4a.js";import"./HighlightDefaults-DFkqUXLX.js";import"./enums-D9v74xTE.js";import"./Texture-YJ5Ydbr7.js";import"./imageUtils-DlV4g_go.js";import"./capabilities-DWNhET5Y.js";import"./accessibleHandler-BE7PkFIl.js";import"./GoTo-DkJRpr0i.js";import"./EffectView-CHVSXY1g.js";import"./AGraphicContainer-BedpFJP6.js";import"./TechniqueInstance-YCqDa59H.js";import"./UpdateTracking2D-DQJ9OdAy.js";import"./BindType-BmZEZMMh.js";import"./Util-B463zVOR.js";import"./Program-CFqNLy1A.js";import"./BufferObject-GeFX3M9K.js";import"./LabelMetric-kUAuaA9z.js";import"./VertexElementDescriptor-BLyltQyJ.js";import"./BoundingBox-CnpCxTZE.js";import"./TileContainer-B_VPlxVw.js";import"./WGLContainer-bZFEgEgR.js";import"./VertexArrayObject-Cx_y4gih.js";import"./ProgramTemplate-DXOVUihN.js";import"./vec3f32-nZdmKIgz.js";import"./StyleDefinition-WlE0QpVn.js";import"./config-BOD8--da.js";import"./earcut-D9gy186-.js";import"./featureConversionUtils-B6y9BgHk.js";import"./OptimizedFeature-6cJ-QFG5.js";import"./OptimizedGeometry-BF8iz5FO.js";import"./OptimizedFeatureSet-Blu9Ckm7.js";import"./FeatureCommandQueue-CJQzraac.js";import"./CIMSymbolHelper-CJojjTWc.js";import"./BidiEngine-QXap_35O.js";import"./fontUtils-D_W2wV2r.js";import"./GeometryUtils-CBEf8Jsw.js";import"./Rect-CUzevAry.js";import"./constants-F8oTIn7N.js";import"./AttributeStore-8wzCovy1.js";import"./TimeOnly-Dm43Bq0I.js";import"./centroid-DdLmOD72.js";import"./queryUtils-DSBn9ytv.js";import"./json-Wa8cmqdu.js";import"./timeSupport-B3EI-mjl.js";import"./normalizeUtilsSync-Cs_YG8z1.js";const d="sublayers",l="layerView",H=new Set(["default"]);let n=class extends v(C){constructor(){super(...arguments),this._highlightIds=new Map}*graphicsViews(){this._graphicsViewsFeatureCollectionMap==null?this._graphicsViews==null?yield*[]:yield*this._graphicsViews:yield*this._graphicsViewsFeatureCollectionMap.keys()}async hitTest(i,t){return Array.from(this.graphicsViews(),e=>{const s=e.hitTest(i);if(this._graphicsViewsFeatureCollectionMap!=null){const o=this._graphicsViewsFeatureCollectionMap.get(e);for(const r of s)!r.popupTemplate&&o.popupTemplate&&(r.popupTemplate=o.popupTemplate),r.sourceLayer=r.layer=this.layer}return s}).flat().map(e=>({type:"graphic",graphic:e,layer:this.layer,mapPoint:i}))}highlight(i){let t;typeof i=="number"?t=[i]:i instanceof u?t=[i.uid]:Array.isArray(i)&&i.length>0?t=typeof i[0]=="number"?i:i.map(s=>s&&s.uid):f.isCollection(i)&&(t=i.map(s=>s&&s.uid).toArray());const e=t==null?void 0:t.filter(w);return e!=null&&e.length?(this._addHighlight(e),m(()=>this._removeHighlight(e))):m()}update(i){for(const t of this.graphicsViews())t.processUpdate(i)}attach(){const i=this.view,t=()=>this.requestUpdate(),e=this.layer.featureCollections;if(e!=null&&e.length){this._graphicsViewsFeatureCollectionMap=new Map;for(const s of e){const o=new g(this.view.featuresTilingScheme),r=new c({view:i,graphics:s.source,renderer:s.renderer,requestUpdateCallback:t,container:o});this._graphicsViewsFeatureCollectionMap.set(r,s),this.container.addChild(r.container),this.addHandles([h(()=>s.visible,a=>r.container.visible=a,p),h(()=>r.updating,()=>this.notifyChange("updating"),p)],l)}this._updateHighlight()}else this.layer.sublayers!=null&&this.addHandles(y(()=>this.layer.sublayers,"change",()=>this._createGraphicsViews(),{onListenerAdd:()=>this._createGraphicsViews(),onListenerRemove:()=>this._destroyGraphicsViews()}),d)}detach(){this._destroyGraphicsViews(),this.removeHandles(d)}moveEnd(){}viewChange(){for(const i of this.graphicsViews())i.viewChange()}isUpdating(){for(const i of this.graphicsViews())if(i.updating)return!0;return!1}_destroyGraphicsViews(){this.container.removeAllChildren(),this.removeHandles(l);for(const i of this.graphicsViews())i.destroy();this._graphicsViews=null,this._graphicsViewsFeatureCollectionMap=null}_createGraphicsViews(){if(this._destroyGraphicsViews(),this.layer.sublayers==null)return;const i=[],t=this.view,e=()=>this.requestUpdate();for(const s of this.layer.sublayers){const o=new g(this.view.featuresTilingScheme);o.fadeTransitionEnabled=!0;const r=new c({view:t,graphics:s.graphics,requestUpdateCallback:e,container:o});this.addHandles([s.on("graphic-update",r.graphicUpdateHandler),h(()=>s.visible,a=>r.container.visible=a,p),h(()=>r.updating,()=>this.notifyChange("updating"),p)],l),this.container.addChild(r.container),i.push(r)}this._graphicsViews=i,this._updateHighlight()}_addHighlight(i){for(const t of i)if(this._highlightIds.has(t)){const e=this._highlightIds.get(t);this._highlightIds.set(t,e+1)}else this._highlightIds.set(t,1);this._updateHighlight()}_removeHighlight(i){for(const t of i)if(this._highlightIds.has(t)){const e=this._highlightIds.get(t)-1;e===0?this._highlightIds.delete(t):this._highlightIds.set(t,e)}this._updateHighlight()}_updateHighlight(){const i=Array.from(this._highlightIds.keys()),t=this._getHighlightBits(H);for(const e of this.graphicsViews())e.setHighlight(i.map(s=>({objectId:s,highlightFlags:t})))}};n=_([V("esri.views.2d.layers.MapNotesLayerView2D")],n);const Ki=n;export{Ki as default};
