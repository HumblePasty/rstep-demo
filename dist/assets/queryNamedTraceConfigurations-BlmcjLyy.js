import{a6 as f,r as e,o as u,p as l,Y as d}from"./index-iVlkrMet.js";import{f as y,s as N,i as h}from"./utils-oO-C4Iyn.js";import{d as C}from"./WebMap-D2uMPYG2.js";import"./ColorBackground-r4rnu2aW.js";import"./Basemap-BTOnfB6q.js";import"./editableLayers-BUxD9Rs8.js";import"./catalogUtils-J1X8hQ-e.js";import"./basemapUtils-CV5TcQzY.js";import"./jsonContext-BfCSCIrT.js";import"./project-I-D7vmlY.js";import"./utils-DiRmdl4x.js";import"./NetworkElement-BoQvwHI4.js";let o=class extends f{constructor(s){super(s),this.namedTraceConfigurations=[]}};e([u({type:[C],json:{read:{source:"traceConfigurations"},write:{target:"traceConfigurations"}}})],o.prototype,"namedTraceConfigurations",void 0),o=e([l("esri.rest.networks.support.QueryNamedTraceConfigurationsResult")],o);const $=o;async function Q(s,t,i){const a=y(s),r=t.toJSON();t.globalIds&&t.globalIds.length>0&&(r.globalIds=JSON.stringify(t.globalIds)),t.creators&&t.creators.length>0&&(r.creators=JSON.stringify(t.creators)),t.tags&&t.tags.length>0&&(r.tags=JSON.stringify(t.tags)),t.names&&t.names.length>0&&(r.names=JSON.stringify(t.names));const n={...r,f:"json"},m=N({...a.query,...n}),g=h(m,{...i,method:"post"}),p=`${a.path}/traceConfigurations/query`,{data:c}=await d(p,g);return $.fromJSON(c)}export{Q as queryNamedTraceConfigurations};
