import{b0 as m,ai as a,V as g,F as l,j as h,r as s,m as n,n as c}from"./index-BeW5XHHa.js";import{j as d}from"./LayerView2D-3plXM5Yn.js";import{t as u}from"./GraphicContainer-DT_Bv9IX.js";import{F as w}from"./GraphicsView2D-BZB8Jhh-.js";import{e as y}from"./HighlightCounter-Czi-fdpx.js";import{y as V}from"./LayerView-CT6BgBtC.js";import"./Container-D19wE-gu.js";import"./MapView-B_hC41MZ.js";import"./ColorBackground-BVKEg-ac.js";import"./Basemap-NADnrhTn.js";import"./loadAll-CXj3UdOi.js";import"./writeUtils-B7-V_fnF.js";import"./CollectionFlattener-DQyCU__2.js";import"./editableLayers-DTLxgvJL.js";import"./catalogUtils-DH9XeEkf.js";import"./basemapUtils-DslCIlfo.js";import"./TablesMixin-ST5f4_Kg.js";import"./TileInfo-BTHKGFgv.js";import"./TileKey-DZd6gJy7.js";import"./ReactiveMap-wjcNjhT8.js";import"./IViewEvents-Bci6PjlS.js";import"./a11yUtils-DxqE10Xh.js";import"./heightModelInfoUtils-BK4uhM0Y.js";import"./normalizeUtils-DYh0eGIs.js";import"./normalizeUtilsCommon-BkMUFFIb.js";import"./utils-qTUZr5IF.js";import"./utils-L8buF51K.js";import"./mat2df32-orApM5a3.js";import"./vec2f32-BbH2jxlN.js";import"./unitBezier-BX6NeAEr.js";import"./Tile-Cut57u45.js";import"./TileKey-pAO9G64c.js";import"./QueueProcessor-Bp8M3t1L.js";import"./quickselect-QQC62dOK.js";import"./definitions-DyYHcW4a.js";import"./HighlightDefaults-BXIAIksb.js";import"./enums-D9v74xTE.js";import"./Texture-BztuSTsV.js";import"./imageUtils-C8uYnyr3.js";import"./capabilities-DWNhET5Y.js";import"./accessibleHandler-BJnCRtTt.js";import"./GoTo-BE7pmK6A.js";import"./EffectView-B0dvKGY4.js";import"./AGraphicContainer-4tbQ4jH8.js";import"./TechniqueInstance-BYTyQyJz.js";import"./UpdateTracking2D-BogUEfUf.js";import"./BindType-BmZEZMMh.js";import"./Util-CULiR2cx.js";import"./Program-DK6q0oy9.js";import"./BufferObject-CpFyAn1Z.js";import"./LabelMetric-C6LP7khp.js";import"./VertexElementDescriptor-BLyltQyJ.js";import"./BoundingBox-CnpCxTZE.js";import"./TileContainer-DXXoFn-F.js";import"./WGLContainer-CH7SreRT.js";import"./VertexArrayObject-B9crYmfD.js";import"./ProgramTemplate-CxLc3XLJ.js";import"./vec3f32-nZdmKIgz.js";import"./StyleDefinition-Dj-ae2ep.js";import"./config-BOD8--da.js";import"./earcut-D9gy186-.js";import"./featureConversionUtils-MXBZI-Ia.js";import"./OptimizedFeature-6cJ-QFG5.js";import"./OptimizedGeometry-BF8iz5FO.js";import"./OptimizedFeatureSet-Blu9Ckm7.js";import"./FeatureCommandQueue-nScKsV6u.js";import"./CIMSymbolHelper-DqPUnUH4.js";import"./BidiEngine-QXap_35O.js";import"./fontUtils-Bb3OjxCp.js";import"./GeometryUtils-BDbSVQr7.js";import"./Rect-CUzevAry.js";import"./constants-F8oTIn7N.js";import"./AttributeStore-ybld9cbo.js";import"./TimeOnly-MgEMA5hS.js";import"./centroid-DdLmOD72.js";import"./queryUtils-5KbzKtJ4.js";import"./json-Wa8cmqdu.js";import"./timeSupport-CUyGMiS0.js";import"./normalizeUtilsSync-DedF4qfL.js";let e=class extends d(V){constructor(){super(...arguments),this._highlightCounter=new y}attach(){this.graphicsView=new w({requestUpdateCallback:()=>this.requestUpdate(),view:this.view,graphics:this.layer.graphics,container:new u(this.view.featuresTilingScheme),layerId:this.layer.id}),this.container.addChild(this.graphicsView.container),this.addAttachHandles([this.layer.on("graphic-update",this.graphicsView.graphicUpdateHandler),this.watch("layer.visible",i=>{i&&(this.graphicsView.update({state:this.view.state}),this.graphicsView.pushUpdate())})]),this._updateHighlights()}detach(){this.container.removeAllChildren(),this.graphicsView=m(this.graphicsView)}async hitTest(i){return this.graphicsView?this.graphicsView.hitTest(i).map(t=>({type:"graphic",graphic:t,mapPoint:i,layer:this.layer})):null}queryGraphics(){return Promise.resolve(this.graphicsView.graphics)}update(i){this.graphicsView.processUpdate(i)}viewChange(){this.graphicsView.viewChange()}moveEnd(){}isUpdating(){return!this.graphicsView||this.graphicsView.updating}highlight(i,t="default"){let r;typeof i=="number"?r=[i]:i instanceof a?r=[i.uid]:Array.isArray(i)&&i.length>0?r=typeof i[0]=="number"?i:i.map(o=>o&&o.uid):g.isCollection(i)&&i.length>0&&(r=i.map(o=>o&&o.uid).toArray());const p=r==null?void 0:r.filter(l);return p!=null&&p.length?(this._addHighlight(p,t),h(()=>this._removeHighlight(p,t))):h()}_addHighlight(i,t){this._highlightCounter.addGroup(i,t),this._updateHighlights()}_removeHighlight(i,t){this._highlightCounter.deleteGroup(i,t),this._updateHighlights()}_updateHighlights(){var t;const i=[];for(const r of this._highlightCounter.ids()){const p=this._highlightCounter.getHighlightGroups(r),o=this._getHighlightBits(p);i.push({objectId:r,highlightFlags:o})}(t=this.graphicsView)==null||t.setHighlight(i)}};s([n()],e.prototype,"graphicsView",void 0),e=s([c("esri.views.2d.layers.GraphicsLayerView2D")],e);const Ki=e;export{Ki as default};
