import{bP as j,bO as G,M as O,f4 as z,f5 as P,bm as V,f6 as A,f7 as D,f8 as E,f9 as L,fa as R}from"./index-BeW5XHHa.js";import{$ as U}from"./utils-DQP56K5r.js";import{m as T,B as Y}from"./utils-CtLm37WA.js";let c=null;const _=/^(?<hh>([0-1][0-9])|([2][0-3])):(?<mm>[0-5][0-9])(:(?<ss>[0-5][0-9]))?([.](?<ms>\d+))?$/;function B(t,e,o){return t.x<0?t.x+=e:t.x>o&&(t.x-=e),t}function H(t,e,o,s){const a=z(o)?P(o):null,m=a?Math.round((a.valid[1]-a.valid[0])/e.scale[0]):null;return t.map(i=>{const r=new V(i.geometry);return A(e,r,r),i.geometry=a?B(r,m??0,s[0]):r,i})}function J(t,e=18,o,s,a){const m=new Float64Array(s*a);e=Math.round(R(e));let i=Number.POSITIVE_INFINITY,r=Number.NEGATIVE_INFINITY;const N=D(o);for(const{geometry:$,attributes:g}of t){const{x,y:u}=$,b=Math.max(0,x-e),M=Math.max(0,u-e),F=Math.min(a,u+e),w=Math.min(s,x+e),h=+N(g);for(let f=M;f<F;f++)for(let d=b;d<w;d++){const y=f*s+d,I=L(d-x,f-u,e)*h,l=m[y]+=I;i=Math.min(i,l),r=Math.max(r,l)}}return{min:i,max:r}}function S(t){const e=_.exec(t);if(!e)return null;const{hh:o,mm:s,ss:a,ms:m}=e.groups;return Number(o)*E.hours+Number(s)*E.minutes+Number(a)*E.seconds+Number(m||0)}async function K(t,e,o=!0){if(!e)return[];const{field:s,field2:a,field3:m,fieldDelimiter:i,fieldInfos:r,timeZone:N}=t,$=s&&(r==null?void 0:r.find(l=>l.name.toLowerCase()===s.toLowerCase())),g=!!$&&j($),x=!!$&&U($),u=t.valueExpression,b=t.normalizationType,M=t.normalizationField,F=t.normalizationTotal,w=[],h=t.viewInfoParams;let f=null,d=null;if(u){if(!c){const{arcadeUtils:l}=await G();c=l}c.hasGeometryOperations(u)&&await c.enableGeometryOperations(),f=c.createFunction(u),d=h?c.getViewInfo({viewingMode:h.viewingMode,scale:h.scale,spatialReference:new O(h.spatialReference)}):null}const y=t.fieldInfos,I=!(e[0]&&"declaredClass"in e[0]&&e[0].declaredClass==="esri.Graphic")&&y?{fields:y}:null;return e.forEach(l=>{const p=l.attributes;let n;if(u){const v=I?{...l,layer:I}:l,C=c.createExecContext(v,d,N);n=c.executeFunction(f,C)}else p&&(n=p[s],a?(n=`${T(n)}${i}${T(p[a])}`,m&&(n=`${n}${i}${T(p[m])}`)):typeof n=="string"&&o&&(x?n=n?new Date(n).getTime():null:g&&(n=n?S(n):null)));if(b&&typeof n=="number"&&isFinite(n)){const v=p&&parseFloat(p[M]);n=Y(n,b,v,F)}w.push(n)}),w}export{S as I,K as b,J as w,H as x};
