import{bZ as V,ar as E,eY as U,eZ as F,e_ as f,R as X,be as D,e$ as I,f0 as G,f1 as O,f2 as W,f3 as Y,r as o,m as p,n as Z}from"./index-BeW5XHHa.js";import{P as _}from"./normalizeUtils-DYh0eGIs.js";import{o as B}from"./scaleUtils-DIW22IJB.js";import{l as H,u as K,t as T}from"./gridUtils-CxmViIFY.js";import"./normalizeUtilsCommon-BkMUFFIb.js";import"./utils-qTUZr5IF.js";import"./utils-L8buF51K.js";let s=class extends V{constructor(e){super(e),this.options=null}destroy(){this._set("options",null)}get grid(){return this.view.grid}get effectiveViewRotation(){var e;return(e=this.grid)!=null&&e.rotateWithMap?0:E(this.view.rotation??0)}get gridRotation(){var e;return E(((e=this.grid)==null?void 0:e.rotation)??0)}get gridCenter(){var t;const{spatialReference:e,grid:i}=this;if(!i||!e||!U(i.center.spatialReference,e))return null;try{const r=F(i.center,e),n=e.isWrappable&&((t=this.view)==null?void 0:t.center)!=null?_(r.x,this.view.center.x,e):r.x;return f(n,r.y,r.z)}catch(r){return X.getLogger(this).errorOnce("Grid Snapping - Failed to project grid center.",r),null}}get offsetScaleFactor(){const{pixelsPerStride:e,grid:i}=this;if(!i||!e)return 1;const{majorLineInterval:t,dynamicScaling:r}=i;return t<1?null:H(t,e,r)}get spatialReference(){return this.view.spatialReference}get gridMetersPerStride(){const{grid:e}=this;return e?D(e.spacing,e.units,"meters"):null}get viewMetersPerPixel(){const{viewMetersPerSRUnit:e}=this;return e==null?null:e*B(this.view.scale,this.view.spatialReference)}get viewMetersPerSRUnit(){const{spatialReference:e}=this.view;return this.gridCenter?K(this.gridCenter[0],this.gridCenter[1],e):null}get pixelsPerStride(){const{gridMetersPerStride:e,viewMetersPerPixel:i}=this;return i&&e?e/i:null}get updating(){return this.grid!=null&&this.spatialReference!=null&&this.viewMetersPerSRUnit==null}async fetchCandidates(e,i,t){var u;const{options:r,view:n}=this;if(!(r!=null&&r.effectiveGridEnabled)||!n.grid||(u=t.feature)!=null&&u.attributes&&I in t.feature.attributes)return[];const a=t.coordinateHelper.arrayToPoint(e),l=r.distance*(t.pointer==="touch"?r.touchSensitivityMultiplier:1);return this.fetchCandidatesSync(a,l)}fetchCandidatesSync(e,i){const t=[],{grid:r,effectiveViewRotation:n,gridRotation:a,gridCenter:l,viewMetersPerPixel:u,viewMetersPerSRUnit:g,offsetScaleFactor:v,spatialReference:h,gridMetersPerStride:b,pixelsPerStride:C}=this;if(!(r&&u&&g&&l&&h&&v&&b&&C)||!r.dynamicScaling&&C<T||!U(e.spatialReference,h))return t;const P=F(e,h),z=f(P.x,P.y,P.z),c=S(z,-a,l,-n),R=b/g*v,d=k(c,R,l),{shouldSnapX:w,shouldSnapY:y}=q(d,c,i,u,g);if(!w&&!y)return[];const L=f((w?d:c)[0],(y?d:c)[1]),M=S(L,a,l,n),$=S(d,a,l,n);if(y){const m=j(d,c,R,"y"),x=S(m,a,l,n);t.push(new G({lineStart:$,lineEnd:x,targetPoint:M,isDraped:!1}))}if(w){const m=j(d,c,R,"x"),x=S(m,a,l,n);t.push(new G({lineStart:$,lineEnd:x,targetPoint:M,isDraped:!1}))}return w&&y&&t.push(new O(M,t[0],t[1],!1)),t}};o([p({constructOnly:!0})],s.prototype,"view",void 0),o([p()],s.prototype,"options",void 0),o([p()],s.prototype,"grid",null),o([p()],s.prototype,"effectiveViewRotation",null),o([p()],s.prototype,"gridRotation",null),o([p()],s.prototype,"gridCenter",null),o([p()],s.prototype,"offsetScaleFactor",null),o([p()],s.prototype,"spatialReference",null),o([p()],s.prototype,"gridMetersPerStride",null),o([p()],s.prototype,"viewMetersPerPixel",null),o([p()],s.prototype,"viewMetersPerSRUnit",null),o([p()],s.prototype,"pixelsPerStride",null),o([p()],s.prototype,"updating",null),s=o([Z("esri.views.interactive.snapping.GridSnappingEngine")],s);const S=(e,i,t,r)=>{const n=W(e[0],e[1],e[2]);return Y(n,Y(n,n,t,i),t,r)},k=(e,i,t)=>{const r=(e[0]-t[0])/i,n=(e[1]-t[1])/i,a=Math.trunc(r),l=Math.trunc(n),u=Math.round(r%1),g=Math.round(n%1),v=t[0]+(a+u)*i,h=t[1]+(l+g)*i;return f(v,h)},q=(e,i,t,r,n)=>{if(r<=0)return{shouldSnapX:!1,shouldSnapY:!1};const a=(e[0]-i[0])/r,l=(e[1]-i[1])/r;return{shouldSnapX:Math.abs(a*n)<t,shouldSnapY:Math.abs(l*n)<t}},j=(e,i,t,r)=>{if(r==="y"){const a=i[0]>e[0]?1:-1;return f(e[0]+t*a,e[1])}const n=i[1]>e[1]?1:-1;return f(e[0],e[1]+t*n)};export{s as GridSnappingEngine};
