import{cH as C,nZ as J,n_ as k,r as t,o as s,bd as G,t as Q,b3 as b,n$ as U,p as F,k as P,n as A,ah as L,hn as X,o0 as Z,ce as B,at as _,ho as I,bc as q,cM as K,cP as W,cQ as Y,E as ee}from"./index-CgLC99fU.js";import{c as te,b as ie}from"./featureReferenceUtils-4HUPr07s.js";import{c as se}from"./Analysis-CvtpLw-M.js";import"./IntersectorInterfaces-CmNINbyF.js";import"./boundedPlane-CcAP6iN5.js";import"./lineSegment-Ir8vYjIX.js";let a=class extends C(J){constructor(e){super(e),this.observer=null,this.farDistance=1e3,this.heading=0,this.tilt=90,this.horizontalFieldOfView=45,this.verticalFieldOfView=45,this.feature=null}isValid(){return this.observer!=null&&this.farDistance>0}equals(e){return k(this.observer,e.observer)&&this.farDistance===e.farDistance&&this.heading===e.heading&&this.tilt===e.tilt&&this.horizontalFieldOfView===e.horizontalFieldOfView&&this.verticalFieldOfView===e.verticalFieldOfView&&te(this.feature,e.feature)}};t([s({type:G,json:{write:!0}})],a.prototype,"observer",void 0),t([s({type:Number,nonNullable:!0,range:{min:0},json:{write:{isRequired:!0}}})],a.prototype,"farDistance",void 0),t([s({type:Number,nonNullable:!0,json:{write:{isRequired:!0}}}),Q(i=>b.normalize(U(i),void 0,!0))],a.prototype,"heading",void 0),t([s({type:Number,nonNullable:!0,range:{min:0,max:180},json:{write:{isRequired:!0}}})],a.prototype,"tilt",void 0),t([s({type:Number,nonNullable:!0,range:{min:0,max:360},json:{write:{isRequired:!0}}})],a.prototype,"horizontalFieldOfView",void 0),t([s({type:Number,nonNullable:!0,range:{min:0,max:180},json:{write:{isRequired:!0}}})],a.prototype,"verticalFieldOfView",void 0),t([s(ie)],a.prototype,"feature",void 0),t([s({json:{read:!1}})],a.prototype,"isValid",null),a=t([F("esri.analysis.Viewshed")],a);const T=a,E=L.ofType(T);let u=class extends se{constructor(e){super(e),this.type="viewshed",this._extent=null}initialize(){this.addHandles(P(()=>this._computeExtent(),e=>{e.pending==null&&(this._extent=e.extent)},A))}get viewsheds(){return this._get("viewsheds")||new E}set viewsheds(e){this._set("viewsheds",X(e,this.viewsheds,E))}get spatialReference(){for(const e of this.viewsheds)if(e.observer!=null)return e.observer.spatialReference;return null}get extent(){return this._extent}get requiredPropertiesForEditing(){return this.viewsheds.items.map(({observer:e})=>e)}async waitComputeExtent(){const e=this._computeExtent();e.pending!=null&&await e.pending}_computeExtent(){const{spatialReference:e}=this;if(e==null)return{pending:null,extent:null};const p=this.viewsheds.filter(r=>r.observer!=null),y=p.map(r=>r.observer).toArray(),o=Z(y,e);return o.pending!=null?{pending:o.pending,extent:null}:{pending:null,extent:o.geometries.map((r,d)=>{const V=p.at(d);return r!=null&&V!=null?this._computeViewshedExtent(this.viewsheds.at(d),r):null}).filter(r=>r!=null).reduce((r,d)=>re(r,d),null)}}_computeViewshedExtent(e,p){const{farDistance:y,heading:o,tilt:r,horizontalFieldOfView:d,verticalFieldOfView:V}=e,{spatialReference:v}=p,O=d/2,$=V/2,z=y/v.metersPerUnit,H=[b.normalize(o-O),o,b.normalize(o+O)],h=B.fromPoint(p),g=m=>{const c=H.map(l=>b.normalize(l-m));if(c[0]>c[2]||d===360)return z;const w=c.map(l=>Math.abs(l>180?360-l:l)).reduce((l,x)=>l>x?x:l);return w>90?0:z*Math.cos(_(w))};h.xmax+=g(90),h.xmin-=g(-90),h.ymax+=g(0),h.ymin-=g(180);const f=p.z;if(f!=null){let m=f,c=f;const w=r-90,l=q(w+$,-90,90),x=q(w-$,-90,90),N=v!=null&&v.isGeographic?y:z;m+=N*R(l),c+=N*R(x);const S=M($)*N,j=R(w)*S*(1-M(O));r<90&&(m-=j),r>90&&(c-=j),h.zmax=Math.max(m,f),h.zmin=Math.min(c,f)}return h}clear(){this.viewsheds.removeAll()}};function re(i,e){return i==null?e:e==null?i:i.union(e)}function M(i){return Math.cos(_(i))}function R(i){return Math.sin(_(i))}t([s({type:["viewshed"]})],u.prototype,"type",void 0),t([s({cast:I,type:E,nonNullable:!0})],u.prototype,"viewsheds",null),t([s({readOnly:!0})],u.prototype,"spatialReference",null),t([s()],u.prototype,"_extent",void 0),t([s({readOnly:!0})],u.prototype,"extent",null),t([s({readOnly:!0})],u.prototype,"requiredPropertiesForEditing",null),u=t([F("esri.analysis.ViewshedAnalysis")],u);const D=u;let n=class extends K(W(Y)){constructor(i){super(i),this.type="viewshed",this.operationalLayerType="ViewshedLayer",this.source=new D,this.opacity=1}initialize(){this.addHandles(P(()=>this.source,(i,e)=>{e!=null&&e.parent===this&&(e.parent=null),i!=null&&(i.parent=this)},A))}async load(){return this.addResolvingPromise(this.source.waitComputeExtent()),this}get spatialReference(){return this.source.spatialReference}get fullExtent(){return this.source.extent}releaseAnalysis(i){this.source===i&&(this.source=new D)}get analysis(){return this.source}set analysis(i){this.source=i}get viewsheds(){return this.source.viewsheds}set viewsheds(i){this.source.viewsheds=i}writeViewsheds(i,e,p,y){e.viewsheds=i.filter(o=>o.isValid()).map(o=>o.toJSON(y)).toJSON()}};t([s({json:{read:!1},readOnly:!0})],n.prototype,"type",void 0),t([s({type:["ViewshedLayer"]})],n.prototype,"operationalLayerType",void 0),t([s({nonNullable:!0})],n.prototype,"source",void 0),t([s({readOnly:!0})],n.prototype,"spatialReference",null),t([s({readOnly:!0})],n.prototype,"fullExtent",null),t([s({readOnly:!0,json:{read:!1,write:!1,origins:{service:{read:!1,write:!1},"portal-item":{read:!1,write:!1},"web-document":{read:!1,write:!1}}}})],n.prototype,"opacity",void 0),t([s({type:["show","hide"]})],n.prototype,"listMode",void 0),t([s({type:L.ofType(T),json:{write:{ignoreOrigin:!0},origins:{"web-scene":{write:{ignoreOrigin:!0}}}}})],n.prototype,"viewsheds",null),t([ee("web-scene","viewsheds")],n.prototype,"writeViewsheds",null),n=t([F("esri.layers.ViewshedLayer")],n);const ce=n;export{ce as default};
