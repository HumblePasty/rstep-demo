import{a6 as f,r as e,o as u,p as l,Y as d}from"./index-iReJxP8N.js";import{f as y,s as N,i as h}from"./utils-CVhlqlB9.js";import{d as C}from"./WebMap-DXuP0yIZ.js";import"./ColorBackground-DypACVtr.js";import"./Basemap-D9uk5GRZ.js";import"./editableLayers-BiFd3gYd.js";import"./catalogUtils-DeI3Qqxj.js";import"./basemapUtils--OqWLD8Q.js";import"./jsonContext-CpFEZOZm.js";import"./project-CSQgrjji.js";import"./utils-C-bFbexS.js";import"./NetworkElement-yENxo9q4.js";let o=class extends f{constructor(s){super(s),this.namedTraceConfigurations=[]}};e([u({type:[C],json:{read:{source:"traceConfigurations"},write:{target:"traceConfigurations"}}})],o.prototype,"namedTraceConfigurations",void 0),o=e([l("esri.rest.networks.support.QueryNamedTraceConfigurationsResult")],o);const $=o;async function Q(s,t,i){const a=y(s),r=t.toJSON();t.globalIds&&t.globalIds.length>0&&(r.globalIds=JSON.stringify(t.globalIds)),t.creators&&t.creators.length>0&&(r.creators=JSON.stringify(t.creators)),t.tags&&t.tags.length>0&&(r.tags=JSON.stringify(t.tags)),t.names&&t.names.length>0&&(r.names=JSON.stringify(t.names));const n={...r,f:"json"},m=N({...a.query,...n}),g=h(m,{...i,method:"post"}),p=`${a.path}/traceConfigurations/query`,{data:c}=await d(p,g);return $.fromJSON(c)}export{Q as queryNamedTraceConfigurations};
