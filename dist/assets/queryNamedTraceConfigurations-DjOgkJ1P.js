import{W as f,r as e,o as u,p as l,gW as d,gY as y,gX as N,U as h}from"./index-CW6gHi3a.js";import{d as C}from"./WebMap-DkeDZTNA.js";import"./ColorBackground-Zvl6WFwn.js";import"./Basemap-B7JH8ahh.js";import"./editableLayers-CtF83F1x.js";import"./catalogUtils-C5MM8eat.js";import"./basemapUtils-dI6tlNFF.js";import"./jsonContext-B-2l2533.js";import"./project-D-5J-z-9.js";import"./NetworkElement-DJyOkzVU.js";let s=class extends f{constructor(o){super(o),this.namedTraceConfigurations=[]}};e([u({type:[C],json:{read:{source:"traceConfigurations"},write:{target:"traceConfigurations"}}})],s.prototype,"namedTraceConfigurations",void 0),s=e([l("esri.rest.networks.support.QueryNamedTraceConfigurationsResult")],s);const $=s;async function U(o,t,i){const a=d(o),r=t.toJSON();t.globalIds&&t.globalIds.length>0&&(r.globalIds=JSON.stringify(t.globalIds)),t.creators&&t.creators.length>0&&(r.creators=JSON.stringify(t.creators)),t.tags&&t.tags.length>0&&(r.tags=JSON.stringify(t.tags)),t.names&&t.names.length>0&&(r.names=JSON.stringify(t.names));const n={...r,f:"json"},g=y({...a.query,...n}),m=N(g,{...i,method:"post"}),c=`${a.path}/traceConfigurations/query`,{data:p}=await h(c,m);return $.fromJSON(p)}export{U as queryNamedTraceConfigurations};
