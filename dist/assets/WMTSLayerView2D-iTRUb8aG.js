import{ah as o,hs as y,aS as u,w,r as m,o as g,p as I}from"./index-BlU5-B7d.js";import{r as S,n as f}from"./imageUtils-CCh1m0xA.js";import{j as T}from"./LayerView2D-DepcyPir.js";import{h as V,p as v,r as x}from"./Tile-CdifRvw6.js";import{e as d}from"./TileKey-C-u_wyf-.js";import{y as M}from"./LayerView-5KheOswQ.js";import{i as q}from"./RefreshableLayerView-CJeVyAAc.js";import"./MapView-BK3e2pWI.js";import"./ColorBackground-DRP9oPtY.js";import"./Basemap-D4bTcViI.js";import"./editableLayers-CbuH9SGC.js";import"./catalogUtils-CO4vYFnm.js";import"./basemapUtils-wFzo5J9Z.js";import"./ReactiveMap-CUqMWS3j.js";import"./IViewEvents-Bci6PjlS.js";import"./a11yUtils-C6ywtmUW.js";import"./heightModelInfoUtils-DCLCjqwR.js";import"./mat2df32-orApM5a3.js";import"./vec2f32-BbH2jxlN.js";import"./unitBezier-BX6NeAEr.js";import"./definitions-DyYHcW4a.js";import"./HighlightDefaults-B-Ph5qh1.js";import"./enums-D9v74xTE.js";import"./Texture-DZtLfQ5W.js";import"./imageUtils-zEsx8KVg.js";import"./capabilities-DWNhET5Y.js";import"./accessibleHandler-zFSOQ_6I.js";import"./GoTo-D-GE-AdF.js";import"./Bitmap-BZ6cgeiN.js";import"./Container-CuFugdz6.js";import"./EffectView-fQu7FQWt.js";import"./WGLContainer-CDbeM48o.js";import"./LabelMetric-DtaZxmRz.js";import"./Program-CTSmNKJz.js";import"./BufferObject-C_hurj1A.js";import"./VertexElementDescriptor-BLyltQyJ.js";import"./BoundingBox-CnpCxTZE.js";import"./VertexArrayObject-36YtVcKY.js";import"./ProgramTemplate-rhI0Wyn5.js";import"./vec3f32-nZdmKIgz.js";import"./StyleDefinition-DVOOffXA.js";import"./config-BOD8--da.js";import"./earcut-D9gy186-.js";import"./TileContainer-BmsMZTZT.js";import"./QueueProcessor-WIKCPSQi.js";import"./quickselect-QQC62dOK.js";const R=[0,0];let s=class extends q(S(T(M))){constructor(){super(...arguments),this._tileStrategy=null,this._fetchQueue=null,this.layer=null}get tileMatrixSet(){var r;const{activeLayer:e}=this.layer,{tileMatrixSet:t}=e;if(t&&o((r=t.tileInfo)==null?void 0:r.spatialReference,this.view.spatialReference))return t;const i=this._getTileMatrixSetBySpatialReference(e);return i&&i.id!==e.tileMatrixSetId?(e.tileMatrixSetId=i.id,i):null}update(e){this._fetchQueue.pause(),this._fetchQueue.state=e.state,this._tileStrategy.update(e),this._fetchQueue.resume()}attach(){var t;const e=(t=this.tileMatrixSet)==null?void 0:t.tileInfo;e&&(this._tileInfoView=new V(e),this._fetchQueue=new v({tileInfoView:this._tileInfoView,concurrency:16,process:(i,r)=>this.fetchTile(i,r),scheduler:this.scheduler,priority:y.MAPVIEW_FETCH_QUEUE}),this._tileStrategy=new x({cachePolicy:"keep",resampling:!0,acquireTile:i=>this.acquireTile(i),releaseTile:i=>this.releaseTile(i),tileInfoView:this._tileInfoView}),this.addAttachHandles(this._updatingHandles.add(()=>{var i,r;return[(r=(i=this.layer)==null?void 0:i.activeLayer)==null?void 0:r.styleId,this.tileMatrixSet]},()=>this.doRefresh())),super.attach())}detach(){var e,t;super.detach(),(e=this._tileStrategy)==null||e.destroy(),(t=this._fetchQueue)==null||t.destroy(),this._fetchQueue=this._tileStrategy=this._tileInfoView=null}viewChange(){this.requestUpdate()}moveEnd(){this.requestUpdate()}supportsSpatialReference(e){var t;return((t=this.layer.activeLayer.tileMatrixSets)==null?void 0:t.some(i=>{var r;return o((r=i.tileInfo)==null?void 0:r.spatialReference,e)}))??!1}async doRefresh(){if(this.attached){if(this.suspended)return this._tileStrategy.clear(),void this.requestUpdate();this._fetchQueue.reset(),this._tileStrategy.refresh(e=>this._updatingHandles.addPromise(this._enqueueTileFetch(e)))}}acquireTile(e){const t=this._bitmapView.createTile(e),i=t.bitmap;return[i.x,i.y]=this._tileInfoView.getTileCoords(R,t.key),i.resolution=this._tileInfoView.getTileResolution(t.key),[i.width,i.height]=this._tileInfoView.tileInfo.size,this._updatingHandles.addPromise(this._enqueueTileFetch(t)),this._bitmapView.addChild(t),this.requestUpdate(),t}releaseTile(e){this._fetchQueue.abort(e.key.id),this._bitmapView.removeChild(e),e.once("detach",()=>e.destroy()),this.requestUpdate()}async fetchTile(e,t={}){const i="tilemapCache"in this.layer?this.layer.tilemapCache:null,{signal:r,resamplingLevel:h=0}=t;if(!i)return this._fetchImage(e,r);const a=new d(0,0,0,0);let n;try{await i.fetchAvailabilityUpsample(e.level,e.row,e.col,a,{signal:r}),n=await this._fetchImage(a,r)}catch(l){if(u(l))throw l;if(h<3){const p=this._tileInfoView.getTileParentId(e.id);if(p){const c=new d(p),_=await this.fetchTile(c,{...t,resamplingLevel:h+1});return f(this._tileInfoView,_,c,e)}}throw l}return f(this._tileInfoView,n,a,e)}canResume(){const e=super.canResume();return e&&this.tileMatrixSet!==null}async _enqueueTileFetch(e){if(!this._fetchQueue.has(e.key.id)){try{const t=await this._fetchQueue.push(e.key);e.bitmap.source=t,e.bitmap.width=this._tileInfoView.tileInfo.size[0],e.bitmap.height=this._tileInfoView.tileInfo.size[1],e.once("attach",()=>this.requestUpdate())}catch(t){u(t)||w.getLogger(this).error(t)}this.requestUpdate()}}async _fetchImage(e,t){return this.layer.fetchImageBitmapTile(e.level,e.row,e.col,{signal:t})}_getTileMatrixSetBySpatialReference(e){var t;return(t=e.tileMatrixSets)==null?void 0:t.find(i=>{var r;return o((r=i.tileInfo)==null?void 0:r.spatialReference,this.view.spatialReference)})}};m([g({readOnly:!0})],s.prototype,"tileMatrixSet",null),s=m([I("esri.views.2d.layers.WMTSLayerView2D")],s);const Se=s;export{Se as default};
