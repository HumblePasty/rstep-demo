import{b1 as a,al as m,ak as g,F as l,m as h,r as s,o as n,p as c}from"./index-BI30NJEZ.js";import{j as d}from"./LayerView2D-RxLcFqQA.js";import{t as u}from"./GraphicContainer-BdL-4iF9.js";import{F as w}from"./GraphicsView2D-BlhBtYGN.js";import{e as y}from"./HighlightCounter-Czi-fdpx.js";import{y as V}from"./LayerView-DI5UP2Y-.js";import"./Container-DHtxwpn0.js";import"./MapView-DH75273M.js";import"./ColorBackground-DqS7pZrj.js";import"./Basemap-C072ReG-.js";import"./editableLayers-CpGhURdI.js";import"./catalogUtils-BkxGrXB8.js";import"./basemapUtils-CN4_o_2p.js";import"./TileInfo-BmImNQMT.js";import"./TileKey-DZd6gJy7.js";import"./ReactiveMap-DcJfeSEI.js";import"./IViewEvents-Bci6PjlS.js";import"./a11yUtils-Ca_ldSTH.js";import"./heightModelInfoUtils-CY1DbRBv.js";import"./normalizeUtils-LnVB-8Fy.js";import"./normalizeUtilsCommon-BMoY3ugL.js";import"./utils-BC2urbiu.js";import"./utils-CbogazpE.js";import"./mat2df32-orApM5a3.js";import"./vec2f32-BbH2jxlN.js";import"./unitBezier-BX6NeAEr.js";import"./Tile-C2JyqfNa.js";import"./TileKey-C3-o8508.js";import"./QueueProcessor-C4LTh7WU.js";import"./quickselect-QQC62dOK.js";import"./definitions-DyYHcW4a.js";import"./HighlightDefaults-CcURrPL0.js";import"./enums-D9v74xTE.js";import"./Texture-DjyMkS3b.js";import"./imageUtils-CseXJeGf.js";import"./capabilities-DWNhET5Y.js";import"./accessibleHandler-Cau3sbdb.js";import"./GoTo-CeGKrRkZ.js";import"./EffectView-BNmGaRy1.js";import"./AGraphicContainer-DQLS6qIk.js";import"./TechniqueInstance-7qF_wfuJ.js";import"./UpdateTracking2D-BW9gyM9U.js";import"./BindType-BmZEZMMh.js";import"./Util-CWpgJMM9.js";import"./Program-blw7Wj4S.js";import"./BufferObject-aHJ5p-Nw.js";import"./LabelMetric-B5-gs0h8.js";import"./VertexElementDescriptor-BLyltQyJ.js";import"./BoundingBox-CnpCxTZE.js";import"./TileContainer-BBVE53xg.js";import"./WGLContainer-CTkmifMA.js";import"./VertexArrayObject-Cz3BfojY.js";import"./ProgramTemplate-Dag0f-Sr.js";import"./vec3f32-nZdmKIgz.js";import"./StyleDefinition-1z4oXSGI.js";import"./config-BOD8--da.js";import"./earcut-D9gy186-.js";import"./featureConversionUtils-DpKO9OK_.js";import"./OptimizedFeature-6cJ-QFG5.js";import"./OptimizedGeometry-BF8iz5FO.js";import"./OptimizedFeatureSet-Blu9Ckm7.js";import"./FeatureCommandQueue-CaC-GkDO.js";import"./CIMSymbolHelper-Bt2aUtHh.js";import"./BidiEngine-QXap_35O.js";import"./fontUtils-BnpENzZS.js";import"./GeometryUtils-7iAABlQd.js";import"./Rect-CUzevAry.js";import"./constants-F8oTIn7N.js";import"./AttributeStore-C9u7U8mK.js";import"./TimeOnly-Cdy0GNsa.js";import"./centroid-DdLmOD72.js";import"./queryUtils-Dz-P4hYy.js";import"./json-Wa8cmqdu.js";import"./timeSupport-hgwvQGru.js";import"./normalizeUtilsSync-tmGBfcX2.js";let o=class extends d(V){constructor(){super(...arguments),this._highlightCounter=new y}attach(){this.graphicsView=new w({requestUpdateCallback:()=>this.requestUpdate(),view:this.view,graphics:this.layer.graphics,container:new u(this.view.featuresTilingScheme),layerId:this.layer.id}),this.container.addChild(this.graphicsView.container),this.addAttachHandles([this.layer.on("graphic-update",this.graphicsView.graphicUpdateHandler),this.watch("layer.visible",i=>{i&&(this.graphicsView.update({state:this.view.state}),this.graphicsView.pushUpdate())})]),this._updateHighlights()}detach(){this.container.removeAllChildren(),this.graphicsView=a(this.graphicsView)}async hitTest(i){return this.graphicsView?this.graphicsView.hitTest(i).map(t=>({type:"graphic",graphic:t,mapPoint:i,layer:this.layer})):null}queryGraphics(){return Promise.resolve(this.graphicsView.graphics)}update(i){this.graphicsView.processUpdate(i)}viewChange(){this.graphicsView.viewChange()}moveEnd(){}isUpdating(){return!this.graphicsView||this.graphicsView.updating}highlight(i,t="default"){let r;typeof i=="number"?r=[i]:i instanceof m?r=[i.uid]:Array.isArray(i)&&i.length>0?r=typeof i[0]=="number"?i:i.map(e=>e&&e.uid):g.isCollection(i)&&i.length>0&&(r=i.map(e=>e&&e.uid).toArray());const p=r==null?void 0:r.filter(l);return p!=null&&p.length?(this._addHighlight(p,t),h(()=>this._removeHighlight(p,t))):h()}_addHighlight(i,t){this._highlightCounter.addGroup(i,t),this._updateHighlights()}_removeHighlight(i,t){this._highlightCounter.deleteGroup(i,t),this._updateHighlights()}_updateHighlights(){var t;const i=[];for(const r of this._highlightCounter.ids()){const p=this._highlightCounter.getHighlightGroups(r),e=this._getHighlightBits(p);i.push({objectId:r,highlightFlags:e})}(t=this.graphicsView)==null||t.setHighlight(i)}};s([n()],o.prototype,"graphicsView",void 0),o=s([c("esri.views.2d.layers.GraphicsLayerView2D")],o);const Li=o;export{Li as default};
