import{W as l,eD as n,h3 as p,r as s,o as i,p as d,aL as g,gW as S,gX as y,U as R,jd as w}from"./index-CW6gHi3a.js";let o=class extends l{constructor(e){super(e),this.geometries=[],this.outSpatialReference=null,this.transformation=null,this.transformForward=null}toJSON(){const e=this.geometries.map(a=>a.toJSON()),t=this.geometries[0],r={};return r.outSR=n(this.outSpatialReference),r.inSR=n(t.spatialReference),r.geometries=JSON.stringify({geometryType:p(t),geometries:e}),this.transformation&&(r.transformation=this.transformation.wkid||JSON.stringify(this.transformation)),this.transformForward!=null&&(r.transformForward=this.transformForward),r}};s([i()],o.prototype,"geometries",void 0),s([i({json:{read:{source:"outSR"}}})],o.prototype,"outSpatialReference",void 0),s([i()],o.prototype,"transformation",void 0),s([i()],o.prototype,"transformForward",void 0),o=s([d("esri.rest.support.ProjectParameters")],o);const j=o,$=g(j);async function J(e,t,r){t=$(t);const a=S(e),f={...a.query,f:"json",...t.toJSON()},m=t.outSpatialReference,c=p(t.geometries[0]),u=y(f,r);return R(a.path+"/project",u).then(({data:{geometries:h}})=>w(h,c,m))}export{J as n,j as p};
