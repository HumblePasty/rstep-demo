import{a3 as I,c_ as x,eI as L,d1 as T,nA as N,$ as R,r as i,o as a,E as b,p as f,cH as M,ah as $,P as A,U as j,d7 as J,cM as V,cN as P,cO as E,cP as U,d8 as D,d9 as K,cQ as z,hj as G,dG as H,c1 as k,cs as C,b as c,dh as S,di as q,H as w,dj as F,z as Q,dk as Z}from"./index-CgLC99fU.js";import{j as m}from"./persistable-AwV0q8Ne.js";import{R as B,V as _}from"./SceneService-CT9TY5mV.js";import{p as W,a as X,y as Y,m as ee}from"./I3SLayerDefinitions-D8BNLALi.js";import"./multiOriginJSONSupportUtils-C0wm8_Yw.js";import"./resourceExtension-C77wUpZ0.js";import"./originUtils-D69mHv66.js";import"./jsonContext-Js9jvoqX.js";import"./resourceUtils-CJrAgMK0.js";import"./resourceUtils-B4HD3tp3.js";var u;let n=u=class extends I{constructor(e){super(e),this.geometry=null,this.type="clip"}writeGeometry(e,t,o,r){var l;if((l=r.layer)!=null&&l.spatialReference&&!r.layer.spatialReference.equals(this.geometry.spatialReference)){if(!x(e.spatialReference,r.layer.spatialReference))return void((r==null?void 0:r.messages)&&r.messages.push(new L("scenemodification:unsupported","Scene modifications with incompatible spatial references are not supported",{modification:this,spatialReference:r.layer.spatialReference,context:r})));const d=new T;N(e,d,r.layer.spatialReference),t[o]=d.toJSON(r)}else t[o]=e.toJSON(r);delete t[o].spatialReference}clone(){return new u({geometry:R(this.geometry),type:this.type})}};i([a({type:T}),m()],n.prototype,"geometry",void 0),i([b(["web-scene","portal-item"],"geometry")],n.prototype,"writeGeometry",null),i([a({type:["clip","mask","replace"],nonNullable:!0}),m()],n.prototype,"type",void 0),n=u=i([f("esri.layers.support.SceneModification")],n);const h=n;var p;let y=p=class extends M($.ofType(h)){constructor(e){super(e),this.url=null}clone(){return new p({url:this.url,items:this.items.map(e=>e.clone())})}toJSON(e){return this.toArray().map(t=>t.toJSON(e)).filter(t=>!!t.geometry)}static fromJSON(e,t){const o=new p;for(const r of e)o.add(h.fromJSON(r,t));return o}static async fromUrl(e,t,o){const r={url:A(e),origin:"service"},l=await j(e,{responseType:"json",signal:o==null?void 0:o.signal}),d=t.toJSON(),g=[];for(const v of l.data)g.push(h.fromJSON({...v,geometry:{...v.geometry,spatialReference:d}},r));return new p({url:e,items:g})}};i([a({type:String})],y.prototype,"url",void 0),y=p=i([f("esri.layers.support.SceneModifications")],y);const O=y;let s=class extends B(J(V(P(E(U(D(K(z)))))))){constructor(...e){super(...e),this.geometryType="mesh",this.operationalLayerType="IntegratedMeshLayer",this.type="integrated-mesh",this.nodePages=null,this.materialDefinitions=null,this.textureSetDefinitions=null,this.geometryDefinitions=null,this.serviceUpdateTimeStamp=null,this.profile="mesh-pyramids",this.modifications=null,this._modificationsSource=null,this.path=null,this.definitionExpression=null}initialize(){this.addHandles(G(()=>this.modifications,"after-changes",()=>this.modifications=this.modifications,H))}normalizeCtorArgs(e,t){return typeof e=="string"?{url:e,...t}:e}readModifications(e,t,o){this._modificationsSource={url:k(e,o),context:o}}set elevationInfo(e){this._set("elevationInfo",e),this._validateElevationInfo()}async load(e){return this.addResolvingPromise(this._doLoad(e)),this}async _doLoad(e){const t=e==null?void 0:e.signal;try{await this.loadFromPortal({supportedTypes:["Scene Service"]},e)}catch(o){C(o)}if(await this._fetchService(t),this._modificationsSource!=null){const o=await O.fromUrl(this._modificationsSource.url,this.spatialReference,e);this.setAtOrigin("modifications",o,this._modificationsSource.context.origin),this._modificationsSource=null}await this._fetchIndexAndUpdateExtent(this.nodePages,t)}beforeSave(){if(this._modificationsSource!=null)return this.load().then(()=>{},()=>{})}async saveAs(e,t){return this._debouncedSaveOperations(_.SAVE_AS,{...t,getTypeKeywords:()=>this._getTypeKeywords(),portalItemLayerType:"integrated-mesh"},e)}async save(){const e={getTypeKeywords:()=>this._getTypeKeywords(),portalItemLayerType:"integrated-mesh"};return this._debouncedSaveOperations(_.SAVE,e)}validateLayer(e){if(e.layerType&&e.layerType!=="IntegratedMesh")throw new c("integrated-mesh-layer:layer-type-not-supported","IntegratedMeshLayer does not support this layer type",{layerType:e.layerType});if(isNaN(this.version.major)||isNaN(this.version.minor))throw new c("layer:service-version-not-supported","Service version is not supported.",{serviceVersion:this.version.versionString,supportedVersions:"1.x"});if(this.version.major>1)throw new c("layer:service-version-too-new","Service version is too new.",{serviceVersion:this.version.versionString,supportedVersions:"1.x"})}_getTypeKeywords(){return["IntegratedMeshLayer"]}_validateElevationInfo(){const e=this.elevationInfo,t="Integrated mesh layers";S(w.getLogger(this),q(t,"absolute-height",e)),S(w.getLogger(this),F(t,e))}};i([a({type:String,readOnly:!0})],s.prototype,"geometryType",void 0),i([a({type:["show","hide"]})],s.prototype,"listMode",void 0),i([a({type:["IntegratedMeshLayer"]})],s.prototype,"operationalLayerType",void 0),i([a({json:{read:!1},readOnly:!0})],s.prototype,"type",void 0),i([a({type:W,readOnly:!0})],s.prototype,"nodePages",void 0),i([a({type:[X],readOnly:!0})],s.prototype,"materialDefinitions",void 0),i([a({type:[Y],readOnly:!0})],s.prototype,"textureSetDefinitions",void 0),i([a({type:[ee],readOnly:!0})],s.prototype,"geometryDefinitions",void 0),i([a({readOnly:!0})],s.prototype,"serviceUpdateTimeStamp",void 0),i([a({type:O}),m({origins:["web-scene","portal-item"],type:"resource",prefix:"modifications"})],s.prototype,"modifications",void 0),i([Q(["web-scene","portal-item"],"modifications")],s.prototype,"readModifications",null),i([a(Z)],s.prototype,"elevationInfo",null),i([a({type:String,json:{origins:{"web-scene":{read:!0,write:!0},"portal-item":{read:!0,write:!0}},read:!1}})],s.prototype,"path",void 0),s=i([f("esri.layers.IntegratedMeshLayer")],s);const ye=s;export{ye as default};
