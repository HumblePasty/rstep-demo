import{i as k}from"./CIMResourceManager-DyxEXpsd.js";import{e as _,$ as A,s as E}from"./CIMSymbolHelper-CJojjTWc.js";import{hA as P,hB as F}from"./index-CdlB_1jZ.js";import"./fontUtils-D_W2wV2r.js";import"./imageUtils-DlV4g_go.js";import"./BidiEngine-QXap_35O.js";import"./OptimizedGeometry-BF8iz5FO.js";import"./GeometryUtils-CBEf8Jsw.js";import"./definitions-DyYHcW4a.js";import"./mat2df32-orApM5a3.js";import"./vec2f32-BbH2jxlN.js";import"./Rect-CUzevAry.js";import"./BoundingBox-CnpCxTZE.js";const G=96/72;class U{constructor(g){this._spatialReference=g,this._imageDataCanvas=null,this._cimResourceManager=new k}get _canvas(){return this._imageDataCanvas||(this._imageDataCanvas=document.createElement("canvas")),this._imageDataCanvas}get resourceManager(){return this._cimResourceManager}async rasterizeCIMSymbolAsync(g,d,p,f,s,a,n,h,M){if(!g)return null;const{data:c}=g;if(!c||c.type!=="CIMSymbolReference"||!c.symbol)return null;const{symbol:C}=c;a||(a=P(C));const r=await F.resolveSymbolOverrides(c,d,this._spatialReference,s,a,n,h),l=this._cimResourceManager,w=[];_.fetchResources(r,l,w),_.fetchFonts(r,l,w),w.length>0&&await Promise.all(w);const{width:t,height:i}=p,R=D(a,t,i,f),e=_.getEnvelope(r,R,l);if(!e)return null;e.x===1/0&&(e.x=t+2),e.y===1/0&&(e.y=-i/2),e.width===-1/0&&(e.width=t),e.height===-1/0&&(e.height=i);let o=1,v=0,x=0;switch(C.type){case"CIMPointSymbol":case"CIMTextSymbol":{let m=1;e.width>t&&(m=t/e.width);let u=1;e.height>i&&(u=i/e.height),f==="preview"&&(e.width<t&&(m=t/e.width),e.height<i&&(u=i/e.height)),o=Math.min(m,u),v=e.x+e.width/2,x=e.y+e.height/2}break;case"CIMLineSymbol":{(M||e.height>i)&&(o=i/e.height),x=e.y+e.height/2;const m=e.x*o+t/2,u=(e.x+e.width)*o+t/2,{paths:b}=R;b[0][0][0]-=m/o,b[0][2][0]-=(u-t)/o}break;case"CIMPolygonSymbol":{v=e.x+e.width/2,x=e.y+e.height/2;const m=e.x*o+t/2,u=(e.x+e.width)*o+t/2,b=e.y*o+i/2,I=(e.y+e.height)*o+i/2,{rings:y}=R;m<0&&(y[0][0][0]-=m,y[0][3][0]-=m,y[0][4][0]-=m),b<0&&(y[0][0][1]+=b,y[0][1][1]+=b,y[0][4][1]+=b),u>t&&(y[0][1][0]-=u-t,y[0][2][0]-=u-t),I>i&&(y[0][2][1]+=I-i,y[0][3][1]+=I-i)}}const z={type:"cim",data:{type:"CIMSymbolReference",symbol:r}};return this.rasterize(z,t,i,v,x,o,a,1,R)}rasterize(g,d,p,f,s,a,n,h=0,M=null){const{data:c}=g;if(!c||c.type!=="CIMSymbolReference"||!c.symbol)return null;const{symbol:C}=c,r=this._canvas,l=(window.devicePixelRatio||1)*G;r.width=d*l,r.height=p*l,n||(n=P(C)),M||(M=D(n,d,p,"legend")),r.width+=2*h,r.height+=2*h;const w=r.getContext("2d",{willReadFrequently:!0}),t=A.createIdentity();return t.translate(-f,-s),t.scale(a*l,-a*l),t.translate(d*l/2+h,p*l/2+h),w.clearRect(0,0,r.width,r.height),new E(w,this._cimResourceManager,t,!0).drawSymbol(C,M),w.getImageData(0,0,r.width,r.height)}}function D(S,g,d,p){const s=-g/2+1,a=g/2-1,n=d/2-1,h=-d/2+1;switch(S){case"esriGeometryPoint":return{x:0,y:0};case"esriGeometryPolyline":return{paths:[[[s,0],[0,0],[a,0]]]};default:return p==="legend"?{rings:[[[s,n],[a,0],[a,h],[s,h],[s,n]]]}:{rings:[[[s,n],[a,n],[a,h],[s,h],[s,n]]]}}}export{U as CIMSymbolRasterizer};
