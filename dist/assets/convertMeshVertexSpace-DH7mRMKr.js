import{T as p,s as m,H as s}from"./index-BeW5XHHa.js";import{p as n}from"./MeshVertexAttributes-DAfLcVSs.js";import{B as l}from"./vertexSpaceConversion-BsSdsmTB.js";import"./meshProperties-C4iW0Ukm.js";import"./spatialReferenceEllipsoidUtils-e_8lxtNk.js";import"./computeTranslationToOriginAndRotation-Dczzujep.js";import"./vec3-i8w0Y8uS.js";import"./BufferView-BB-vsLR1.js";import"./vec4-BDxL0CGq.js";async function b(t,e,r){await Promise.resolve(),p(r);const o=l(t,e,{useEllipsoid:r==null?void 0:r.useEllipsoid});if(!o)throw new m("meshUtils:convertVertexSpace()","Failed to convert to provided vertex space due to projection errors");const i=t.cloneAndModifyVertexAttributes(new n({...o,uv:s(t.vertexAttributes.uv),color:s(t.vertexAttributes.color)}),e);return i.transform=null,i}export{b as convertMeshVertexSpace};
