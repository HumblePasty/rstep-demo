import{kp as v,kq as f,ee as _,kr as l,dh as m,a7 as p,P as y,ks as C,aa as u,r as L,p as x}from"./index-BI30NJEZ.js";import{v as P,b as j,j as S}from"./lineSegment-CP9WllMd.js";import{Y as b}from"./Octree-C7726qim.js";import{m as $}from"./edgeProcessing-BC9m0O5P.js";import"./Util-CWpgJMM9.js";import"./deduplicate-B8esDCVl.js";import"./Indices-CwufNzhi.js";import"./InterleavedLayout-Bq559uSJ.js";import"./BufferView-CZvfvCrB.js";import"./types-D0PSWh4d.js";import"./VertexAttribute-Cq4MnHjR.js";import"./glUtil-CAJRmga-.js";import"./enums-D9v74xTE.js";import"./VertexElementDescriptor-BLyltQyJ.js";import"./Normals-OQdBg4cr.js";const k=1e3;function I(t,n,e){const o=v(),s=l(o);return f(s,s,t,.5),f(s,s,n,.5),o[3]=_(s,t),m(s,s,e),o}let g=class{constructor(){this._idToComponent=new Map,this._components=new b(t=>t.bounds),this._edges=new b(t=>t.bounds),this._tmpLineSegment=P(),this._tmpP1=p(),this._tmpP2=p(),this._tmpP3=p(),this.remoteClient=null}async fetchCandidates(t,n){await Promise.resolve(),y(n),await this._ensureEdgeLocations(t,n);const e=[];return this._edges.forEachNeighbor(o=>(this._addCandidates(t,o,e),e.length<k),t.bounds),{result:{candidates:e}}}async _ensureEdgeLocations(t,n){const e=[];if(this._components.forEachNeighbor(i=>{if(i.info==null){const{id:c,uid:r}=i;e.push({id:c,uid:r})}return!0},t.bounds),!e.length)return;const o={components:e},s=await this.remoteClient.invoke("fetchAllEdgeLocations",o,n??{});for(const i of s.components)this._setFetchEdgeLocations(i)}async add(t){const n=new h(t.id,t.bounds);return this._idToComponent.set(n.id,n),this._components.add([n]),{result:{}}}async remove(t){const n=this._idToComponent.get(t.id);if(n){const e=[];this._edges.forEachNeighbor(o=>(o.component===n&&e.push(o),!0),n.bounds),this._edges.remove(e),this._components.remove([n]),this._idToComponent.delete(n.id)}return{result:{}}}_setFetchEdgeLocations(t){const n=this._idToComponent.get(t.id);if(n==null||t.uid!==n.uid)return;const e=$.createView(t.locations),o=new Array(e.count),s=p(),i=p();for(let d=0;d<e.count;d++){e.position0.getVec(d,s),e.position1.getVec(d,i);const a=I(s,i,t.origin),E=new V(n,d,a);o[d]=E}this._edges.add(o);const{objectIds:c,origin:r}=t;n.info={locations:e,objectIds:c,origin:r}}_addCandidates(t,n,e){const{info:o}=n.component,{origin:s,objectIds:i}=o,c=o.locations,r=c.position0.getVec(n.index,this._tmpP1),d=c.position1.getVec(n.index,this._tmpP2);m(r,r,s),m(d,d,s);const a=i[c.componentIndex.get(n.index)];this._addEdgeCandidate(t,a,r,d,e),w(t,a,r,e),w(t,a,d,e)}_addEdgeCandidate(t,n,e,o,s){if(!t.returnEdge)return;const i=l(t.bounds),c=j(e,o,this._tmpLineSegment),r=S(c,i,this._tmpP3);C(t.bounds,r)&&s.push({type:"edge",objectId:n,target:u(r),distance:_(i,r),start:u(e),end:u(o)})}};g=L([x("esri.views.interactive.snapping.featureSources.sceneLayerSource.SceneLayerSnappingSourceWorker")],g);const K=g;function w(t,n,e,o){if(!t.returnVertex||!C(t.bounds,e))return;const s=l(t.bounds);o.push({type:"vertex",objectId:n,target:u(e),distance:_(s,e)})}class h{constructor(n,e){this.id=n,this.bounds=e,this.info=null,this.uid=++h.uid}}h.uid=0;class V{constructor(n,e,o){this.component=n,this.index=e,this.bounds=o}}export{K as default};
