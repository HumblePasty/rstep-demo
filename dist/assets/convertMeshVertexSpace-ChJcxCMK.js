import{T as p,s as m,H as s}from"./index-CdlB_1jZ.js";import{p as n}from"./MeshVertexAttributes-SnGKm1qf.js";import{B as l}from"./vertexSpaceConversion-BsgfdaTL.js";import"./meshProperties-C4iW0Ukm.js";import"./spatialReferenceEllipsoidUtils-DbAq_g9I.js";import"./computeTranslationToOriginAndRotation-DWr0Mq9X.js";import"./vec3-C3OO4TxC.js";import"./BufferView-I-cSGJ2e.js";import"./vec4-DR45tjZ0.js";async function b(t,e,r){await Promise.resolve(),p(r);const o=l(t,e,{useEllipsoid:r==null?void 0:r.useEllipsoid});if(!o)throw new m("meshUtils:convertVertexSpace()","Failed to convert to provided vertex space due to projection errors");const i=t.cloneAndModifyVertexAttributes(new n({...o,uv:s(t.vertexAttributes.uv),color:s(t.vertexAttributes.color)}),e);return i.transform=null,i}export{b as convertMeshVertexSpace};
