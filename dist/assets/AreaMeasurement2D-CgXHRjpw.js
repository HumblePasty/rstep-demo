import{jV as R,kO as re,eF as O,fn as ae,kP as H,kQ as ne,k as b,gS as S,kR as oe,b1 as L,kS as le,kT as z,kU as ue,kV as he,kW as V,d2 as me,bm as T,kX as pe,al as k,c$ as ce,kY as U,by as de,ey as ge,kZ as ve,k_ as ye,k$ as _e,bx as j,aG as B,l0 as f,d1 as v,G as $,l1 as D,l2 as E,d7 as fe,l3 as M,j_ as G,l4 as x,jX as we,l5 as be,l6 as Le,be as P,l7 as Me,l8 as $e,l9 as ke,r as n,o,p as I,kI as Se,M as Ae,la as C,gZ as Oe,db as Te,i8 as De,bG as N,kC as Ge,bI as X,ic as q}from"./index-DbqNxVxJ.js";import{e as xe}from"./defaultUnit-DtOrI9qg.js";import{g as Z,j as Ce,$ as qe,d as Re,D as Ue}from"./unitFormatUtils-z53RvnR8.js";import{d as Ie}from"./SnappingVisualizer2D-qTd7Kz-c.js";import{l as We,a as He,p as ze,u as Ve}from"./MeasurementWidgetContent-nWSWXOj3.js";import{S as je}from"./GraphicManipulator-C_k4onyx.js";import"./getDefaultUnitForView-B-_TG2I1.js";import"./ByteSizeUnit-BsxeN7wM.js";import"./SnappingVisualizer-BnC2D_tO.js";import"./PointSnappingHint-_sym4s91.js";const y=1e5;let g=class extends re{constructor(e){super(e),this._drawActive=!1,this._measurementLayer=new O({internal:!0,listMode:"hide",visible:!1}),this._manipulatorLayer=new O({internal:!0,listMode:"hide",visible:!1}),this._snappingLayer=new O({internal:!0,listMode:"hide",visible:!1}),this._updatingHandles=new ae,this._vertices=[],this.geodesicDistanceThreshold=null,this.measurement=null,this.measurementLabel=null}initialize(){H("esri/core/t9n/Units").then(t=>{this.messages=t});const e=this.view;this._draw=new We({view:e}),e.map.addMany([this._measurementLayer,this._manipulatorLayer,this._snappingLayer]),e.focus(),this._snappingManagerResult=He(e),this.addHandles([ne(async()=>{this.messages=await H("esri/core/t9n/Units")}),b(()=>[this.unit,this.geodesicDistanceThreshold,this.messages],()=>{this._updateGraphics()},S),b(()=>[this.view.effectiveTheme.accentColor,this.view.effectiveTheme.textColor],()=>{if(!this._vertices.length)return;const t=this._vertices.map(({coord:s})=>s);for(const{handle:s}of this._vertices)s.remove();this._vertices=[],this._measurementLayer.removeAll(),this._manipulatorLayer.removeAll(),this._snappingLayer.removeAll(),this.manipulators.removeAll(),this._updateSketch(t)}),b(()=>this.snappingOptions.featureSources,t=>{for(const s of t)s.layer!==this._measurementLayer&&s.layer!==this._manipulatorLayer||(s.enabled=!1)},S),this._snappingManagerResult]),oe(this)}destroy(){const{map:e}=this.view;this._draw.view=null,this._draw=L(this._draw),e.removeMany([this._measurementLayer,this._manipulatorLayer,this._snappingLayer]),this._measurementLayer.removeAll(),this._manipulatorLayer.removeAll(),this._snappingLayer.removeAll(),this._set("measurement",null),this._set("measurementLabel",null),this._measurementLayer=L(this._measurementLayer),this._manipulatorLayer=L(this._manipulatorLayer),this._snappingLayer=L(this._snappingLayer),this._updatingHandles=L(this._updatingHandles),this._resetVertices()}get _snappingManager(){return this._snappingManagerResult.snappingManager}get cursor(){return this._drawActive?"crosshair":null}set editable(e){this._set("editable",e),e||this._draw.reset()}get snappingOptions(){return this._snappingManager.options}get updating(){return this._updatingHandles.updating||this._snappingManager.updating}onActivate(){this._drawActive||this._vertices.length!==0||this._startSketch()}onShow(){this._measurementLayer.visible=!0,this._manipulatorLayer.visible=!0,this._snappingLayer.visible=!0}onHide(){this._measurementLayer.visible=!1,this._manipulatorLayer.visible=!1,this._snappingLayer.visible=!1}reset(){this.manipulators.removeAll(),this._resetVertices(),this._measurementLayer.removeAll(),this._manipulatorLayer.removeAll(),this._set("measurement",null),this._set("measurementLabel",null),this._draw.reset(),this._drawActive=!1}_getSnappingContext(e){return new le({elevationInfo:{mode:"on-the-ground",offset:0},pointer:e,editGeometryOperations:new z(new ue("point",he(!1,!1,this.view.spatialReference)),V.Local),visualizer:new Ie(this._snappingLayer)})}_resetVertices(){for(const{handle:e}of this._vertices)e.remove();this._vertices=[]}_startSketch(){this._drawActive=!0;const e=this._snappingManager,t=this._draw.create("polyline",{mode:"click",snappingManager:e});t.on(["vertex-add","vertex-update","vertex-remove","cursor-update","undo","redo"],s=>this._updateSketch(s.vertices)),t.on("draw-complete",()=>this._stopSketch())}_stopSketch(){if(this._vertices.length<3)return this.reset(),void this._startSketch();this.manipulators.forEach(({manipulator:e})=>{e.interactive=!0}),this._drawActive=!1,this.finishToolCreation()}_updateSketch(e){const t=this.view.spatialReference;if(t&&(!Y(t)||me())){for(;this._vertices.length>e.length;){const{handle:s,manipulator:r}=this._vertices.pop();s.remove(),this.manipulators.remove(r)}for(let s=this._vertices.length;s<e.length;s++){const[r,h]=e[s],l=new T({x:r,y:h,spatialReference:t}),u=Be(l,this.view,this._manipulatorLayer);this.manipulators.add(u);const a=z.fromGeometry(l,V.Local);a.on("vertex-update",p=>{const m=p.vertices.at(0);m&&(this._vertices[s].coord=[m.pos[0],m.pos[1]],this._updateGraphics())});const i=pe(u,(p,m,d,w)=>{const ee=this._getSnappingContext(w),te=this._snappingManager,se=this._updatingHandles,{snappingStep:ie}=Me({snappingContext:ee,snappingManager:te,updatingHandles:se});m.next($e(this.view)).next(A=>{if(A.action==="start"){const W=new T(A.mapStart);p.graphic.geometry=W,a.trySetGeometry(W)}return A}).next(...ie).next(ke({operations:a})).next(()=>{p.graphic.geometry=a.data.geometry})});this._vertices.push({manipulator:u,coord:[r,h],handle:i})}if(this._vertices.length){const s=this._vertices.length-1,r=this._vertices[s],[h,l]=e[s];r.coord[0]===h&&r.coord[1]===l||(r.coord=[h,l],r.manipulator.graphic.geometry=new T({x:h,y:l,spatialReference:t}));const u=this._drawActive?this._vertices[s].manipulator:null;this.manipulators.forEach(({manipulator:a})=>{a.interactive=u==null||a!==u})}this._updateGraphics()}}_updateGraphics(){if(this._vertices.length<2)return void this._measurementLayer.removeAll();const e=Ee(this._vertices.map(({coord:d})=>d),this.view.spatialReference,this.geodesicDistanceThreshold);if(!e)return;const{measurement:t,fillGeometry:s,outlineGeometry:r}=e;this._set("measurement",t);const h=t?Ne(this.messages,t,this.unit):null;if(this._set("measurementLabel",h),!s&&!r)return;let l,u,a;const{graphics:i}=this._measurementLayer,p=i.length===3,{effectiveTheme:m}=this.view;p?(l=i.at(0),u=i.at(1),a=i.at(2)):(l=new k({symbol:new ce({color:U(m.accentColor,.3),outline:null})}),u=new k({symbol:new de({color:m.accentColor,width:2})}),a=new k({symbol:new ge({color:m.textColor,font:new ve({size:14,family:"sans-serif"}),haloColor:U(ye(m.textColor,_e.Low),.5),haloSize:2})}),i.removeAll(),i.addMany([l,u,a])),l.geometry=s,u.geometry=r,a.geometry=s==null?void 0:s.centroid,a.symbol.text=(h==null?void 0:h.area)??""}};function Be(e,t,s){const h={style:"circle",color:U(t.effectiveTheme.accentColor,.5),outline:{type:"simple-line",width:0}},l=new j({...h,size:8}),u=new j({...h,size:1.5*8}),a=new k({geometry:e,symbol:l});return new je({view:t,layer:s,graphic:a,focusedSymbol:u})}function Ee(e,t,s){if(e.length===2){const p=new B({paths:[e],spatialReference:t});let m;if(t.isGeographic)if(R(t))m=f(p,y);else{const d=v(p,$.WGS84),w=f(d,y);m=v(w,t)}else if(t.isWebMercator)m=D(p,y,"meters");else if(E(p,"meters")>=F(s)){const d=v(p,$.WGS84),w=f(d,y);m=v(w,t)}else m=p;return{measurement:null,fillGeometry:null,outlineGeometry:m}}e.push(e[0]);const r=new B({paths:[e],spatialReference:t}),h=new fe({rings:[e],spatialReference:t});let l,u,a=null,i=null;if(t.isGeographic)if(R(t)){if(a=f(r,y),i=f(h,y),i=M(i),!i)return null;l=G([r],"meters")[0],u=x([i],"square-meters")[0]}else{const p=$.WGS84,m=v(r,p),d=v(h,p);if(a=f(m,y),i=f(d,y),i=M(i),!i)return null;l=G([m],"meters")[0],u=x([i],"square-meters")[0],a=v(a,t),i=v(i,t)}else if(t.isWebMercator){if(a=D(r,y,"meters"),i=D(h,y,"meters"),i=M(i),!i)return null;l=we(r,"meters"),u=be(i,"square-meters")}else{const p=E(r,"meters");if(p>=F(s)){const m=$.WGS84,d=v(r,m),w=v(h,m);if(a=f(d,y),i=f(w,y),i=M(i),!i)return null;l=G([d],"meters")[0],u=x([i],"square-meters")[0],a=v(a,t),i=v(i,t)}else{if(a=r,i=M(h),!i)return null;l=p,u=Le(i,"square-meters")}}return{measurement:{geometry:i,area:u,perimeter:l},fillGeometry:i,outlineGeometry:a}}function Pe(e){return e!=null}function Y(e){if(!e)return!1;const{isGeographic:t,isWebMercator:s,isWGS84:r}=e;return t&&!r&&!R(e)||!t&&!s}function Ne(e,t,s){if(!t||!e)return null;const r={area:null,perimeter:null},{area:h,perimeter:l}=t;switch(s){case"metric":r.area=qe(e,h,"square-meters");break;case"imperial":r.area=Ce(e,h,"square-meters");break;default:{const a=P(h,"square-meters",s);r.area=Z(e,a,s);break}}const u=Xe(s);if(u)switch(u){case"metric":r.perimeter=Ue(e,l,"meters");break;case"imperial":r.perimeter=Re(e,l,"meters");break;default:{const a=P(l,"meters",u);r.perimeter=Z(e,a,u);break}}else r.perimeter="";return r}function Xe(e){switch(e){case"metric":case"ares":case"hectares":return"metric";case"imperial":case"acres":return"imperial";case"square-inches":return"inches";case"square-feet":return"feet";case"square-yards":return"yards";case"square-miles":return"miles";case"square-us-feet":return"us-feet";case"square-meters":return"meters";case"square-kilometers":return"kilometers";case"square-millimeters":return"millimeters";case"square-centimeters":return"centimeters";case"square-decimeters":return"decimeters";default:return null}}function F(e){return e??1/0}n([o()],g.prototype,"_drawActive",void 0),n([o({readOnly:!0})],g.prototype,"cursor",null),n([o({value:!0})],g.prototype,"editable",null),n([o({type:Number})],g.prototype,"geodesicDistanceThreshold",void 0),n([o({readOnly:!0})],g.prototype,"measurement",void 0),n([o({readOnly:!0})],g.prototype,"measurementLabel",void 0),n([o()],g.prototype,"messages",void 0),n([o()],g.prototype,"unit",void 0),n([o()],g.prototype,"updating",null),n([o({constructOnly:!0})],g.prototype,"view",void 0),g=n([I("esri.widgets.AreaMeasurement2D.AreaMeasurement2DTool")],g);let _=class extends ze{constructor(e){super(e),this.supportedViewType="2d",this.unsupportedErrorMessage="AreaMeasurement2DViewModel is only supported in 2D views."}initialize(){this.addHandles([b(()=>{var e;return(e=this.view)==null?void 0:e.spatialReference},()=>this.clear()),b(()=>this.unit,e=>{this.tool!=null&&(this.tool.unit=e)},S),b(()=>this.geodesicDistanceThreshold,e=>{this.tool!=null&&(this.tool.geodesicDistanceThreshold=e)},S)])}get geodesicDistanceThreshold(){return this._get("geodesicDistanceThreshold")}set geodesicDistanceThreshold(e){Se(Ae.getLogger(this),"geodesicDistanceThreshold",{version:"4.29",warnOnce:!0}),this._set("geodesicDistanceThreshold",e)}get measurement(){return this.tool!=null?this.tool.measurement:null}get measurementLabel(){return this.tool!=null?this.tool.measurementLabel:null}get state(){var e;return this.disabled||this.view==null||!Pe(this.view.spatialReference)?"disabled":(e=this.tool)!=null&&e.measurement?this.tool.active?"measuring":"measured":"ready"}get unit(){return this._validateUnit(this.defaultUnit)}set unit(e){this._overrideIfSome("unit",this._validateUnit(e))}get unitOptions(){return C}set unitOptions(e){this._overrideIfSome("unitOptions",this._validateUnits(e))}async start(){const e=this.view;e!=null&&(await Oe(()=>e.ready),Y(e.spatialReference)&&await Te()),this.createTool({interactive:!0})}clear(){this.removeTool()}constructTool(){return new g({view:this.view,visible:this.visible,geodesicDistanceThreshold:this.geodesicDistanceThreshold,unit:this.unit})}_validateUnit(e){const{unitOptions:t,defaultUnit:s}=this;return e!=null&&t.includes(e)?e:t.includes(s)?s:t.length>0?t[0]:s}_validateUnits(e){if(e==null)return[];const t=e.filter(s=>C.includes(s));return t.length===0?C.slice():t}};n([o(xe)],_.prototype,"defaultUnit",void 0),n([o()],_.prototype,"geodesicDistanceThreshold",null),n([o({readOnly:!0})],_.prototype,"measurement",null),n([o({readOnly:!0})],_.prototype,"measurementLabel",null),n([o({readOnly:!0})],_.prototype,"state",null),n([o({type:String})],_.prototype,"unit",null),n([o({type:[String]})],_.prototype,"unitOptions",null),_=n([I("esri.widgets.AreaMeasurement2D.AreaMeasurement2DViewModel")],_);const J=_,K="esri-area-measurement-2d",Q={base:K,newMeasurementButton:`${K}__clear-button`};let c=class extends De{constructor(e,t){super(e,t),this.messages=null,this.messagesUnits=null,this.messagesCommon=null,this.viewModel=new J}get active(){return this.viewModel.active}get icon(){return"measure-area"}set icon(e){this._overrideIfSome("icon",e)}get label(){var e;return((e=this.messages)==null?void 0:e.widgetLabel)??""}set label(e){this._overrideIfSome("label",e)}get unit(){return this.viewModel.unit}set unit(e){this.viewModel.unit=e}get unitOptions(){return this.viewModel.unitOptions}set unitOptions(e){this.viewModel.unitOptions=e}get view(){return this.viewModel.view}set view(e){this.viewModel.view=e}get visible(){return this.viewModel.visible}set visible(e){this.viewModel.visible=e}render(){const{messages:e,messagesCommon:t,messagesUnits:s,unit:r,unitOptions:h,viewModel:l,visible:u}=this,{active:a,measurementLabel:i,state:p,supported:m}=l;return N("div",{"aria-label":e.widgetLabel,class:this.classes(Q.base,X.widget,X.panel),key:this,role:"region"},u?N(Ve,{active:a,measurementItems:[{key:"area",title:s==null?void 0:s.measures.area,value:i==null?void 0:i.area},{key:"perimeter",title:e.perimeter,value:i==null?void 0:i.perimeter}],messages:{...e,notApplicable:t.notApplicable},newMeasurementButtonClass:Q.newMeasurementButton,state:p,supported:m,unit:r,unitOptions:h,onNewMeasurementClick:()=>{Ge(l.start())},onUnitChange:d=>{this.unit=d}}):null)}};n([o({readOnly:!0})],c.prototype,"active",null),n([o()],c.prototype,"icon",null),n([o()],c.prototype,"label",null),n([o(),q("esri/widgets/AreaMeasurement2D/t9n/AreaMeasurement2D")],c.prototype,"messages",void 0),n([o(),q("esri/core/t9n/Units")],c.prototype,"messagesUnits",void 0),n([o(),q("esri/t9n/common")],c.prototype,"messagesCommon",void 0),n([o()],c.prototype,"uiStrings",void 0),n([o()],c.prototype,"unit",null),n([o()],c.prototype,"unitOptions",null),n([o()],c.prototype,"view",null),n([o({type:J})],c.prototype,"viewModel",void 0),n([o({type:Boolean})],c.prototype,"visible",null),c=n([I("esri.widgets.AreaMeasurement2D")],c);const rt=c;export{rt as default};
