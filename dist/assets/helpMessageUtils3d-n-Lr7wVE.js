import{cm as l,fw as M,ea as P,a4 as S,fx as T,fy as A}from"./index-CgLC99fU.js";function D(e,a){const s=e==null?void 0:e.geometry;if(!e||(s==null?void 0:s.type)!=="mesh"||!a)return;const{renderCoordsHelper:i,elevationProvider:x}=a,{camera:h}=a.state,{extent:t}=s,{center:d,spatialReference:r}=t,z=l(r),n=M(r),w=l(i.spatialReference),y=t.width*z,v=t.height*n,f=(t.zmax??0)*n,u=f-(t.zmin??0)*n,C=Math.max(y,v,u)/w,{x:m,y:c}=d,p=d.z??0;P(o,m,c,p),i.toRenderCoords(o,r,o);const g=C/h.computeScreenPixelSizeAt(o);if(g>h.width*U)return"meshTooClose";if(g<H)return"meshTooFar";const R=T(e),{absoluteZ:b}=A(m,c,f,r,a,R);return b<(x.getElevation(m,c,p,r,"ground")??0)*n+u*j?"meshUnderground":"mesh"}const H=20,U=1,j=.1,o=S();export{D as getDrawMeshHelpMessage};
