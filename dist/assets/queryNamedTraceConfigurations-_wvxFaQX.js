import{W as f,r as e,o as u,p as l,g_ as d,h0 as y,g$ as h,U as N}from"./index-BlU5-B7d.js";import{d as $}from"./WebMap-BjVL4IY8.js";import"./ColorBackground-DRP9oPtY.js";import"./Basemap-D4bTcViI.js";import"./editableLayers-CbuH9SGC.js";import"./catalogUtils-CO4vYFnm.js";import"./basemapUtils-wFzo5J9Z.js";import"./jsonContext-B2RpgdW7.js";import"./project-BSjR502S.js";import"./NetworkElement-Cya2pudP.js";let s=class extends f{constructor(o){super(o),this.namedTraceConfigurations=[]}};e([u({type:[$],json:{read:{source:"traceConfigurations"},write:{target:"traceConfigurations"}}})],s.prototype,"namedTraceConfigurations",void 0),s=e([l("esri.rest.networks.support.QueryNamedTraceConfigurationsResult")],s);const C=s;async function U(o,t,i){const a=d(o),r=t.toJSON();t.globalIds&&t.globalIds.length>0&&(r.globalIds=JSON.stringify(t.globalIds)),t.creators&&t.creators.length>0&&(r.creators=JSON.stringify(t.creators)),t.tags&&t.tags.length>0&&(r.tags=JSON.stringify(t.tags)),t.names&&t.names.length>0&&(r.names=JSON.stringify(t.names));const n={...r,f:"json"},g=y({...a.query,...n}),m=h(g,{...i,method:"post"}),c=`${a.path}/traceConfigurations/query`,{data:p}=await N(c,m);return C.fromJSON(p)}export{U as queryNamedTraceConfigurations};
