import{k1 as K,kW as ee,eF as D,fn as te,kX as I,kY as se,k as g,gT as $,kZ as ie,b1 as w,k_ as ne,k$ as G,l0 as ae,l1 as re,l2 as U,bm as k,l3 as oe,bD as le,al as O,bs as ue,l6 as H,ey as he,l5 as pe,l4 as N,l7 as ce,bx as z,aG as de,k6 as T,l8 as C,d1 as M,G as E,k3 as me,l9 as ge,la as ve,be as ye,lf as _e,lg as we,lh as fe,r as i,o as n,p as A,kQ as be,M as Me,lj as x,g_ as Le,db as $e,ih as Se,bG as B,kK as De,bI as P,il as W}from"./index-Clgsc_ww.js";import{e as ke}from"./defaultUnit-C4QR-iS6.js";import{g as Te,d as Ce,D as xe}from"./unitFormatUtils-qKrk4z41.js";import{d as Oe}from"./SnappingVisualizer2D-dByWdwJ0.js";import{l as Ae,a as Re,p as Ie,u as Ge}from"./MeasurementWidgetContent-REm3eATu.js";import{S as Ue}from"./GraphicManipulator-BUoJXYAA.js";import"./getDefaultUnitForView-BvvWQCb4.js";import"./ByteSizeUnit-BsxeN7wM.js";import"./SnappingVisualizer-D52P2jDP.js";import"./PointSnappingHint-CMvkZpLE.js";const L=1e5;let p=class extends ee{constructor(e){super(e),this._drawActive=!1,this._measurementLayer=new D({internal:!0,listMode:"hide",visible:!1}),this._manipulatorLayer=new D({internal:!0,listMode:"hide",visible:!1}),this._snappingLayer=new D({internal:!0,listMode:"hide",visible:!1}),this._updatingHandles=new te,this._vertices=[],this.geodesicDistanceThreshold=null,this.measurement=null,this.measurementLabel=null}initialize(){I("esri/core/t9n/Units").then(t=>{this.messages=t});const e=this.view;this._draw=new Ae({view:e}),e.map.addMany([this._measurementLayer,this._manipulatorLayer,this._snappingLayer]),e.focus(),this._snappingManagerResult=Re(e),this.addHandles([se(async()=>{this.messages=await I("esri/core/t9n/Units")}),g(()=>[this.unit,this.geodesicDistanceThreshold,this.messages],()=>{this._updatePolylines()},$),g(()=>[this.view.effectiveTheme.accentColor,this.view.effectiveTheme.textColor],()=>{if(!this._vertices.length)return;const t=this._vertices.map(({coord:s})=>s);for(const{handle:s}of this._vertices)s.remove();this._vertices=[],this._measurementLayer.removeAll(),this._manipulatorLayer.removeAll(),this._snappingLayer.removeAll(),this.manipulators.removeAll(),this._updateSketch(t)}),g(()=>this.snappingOptions.featureSources,t=>{for(const s of t)s.layer!==this._measurementLayer&&s.layer!==this._manipulatorLayer||(s.enabled=!1)},$),this._snappingManagerResult]),ie(this)}destroy(){const{map:e}=this.view;this._draw.view=null,this._draw=w(this._draw),e.removeMany([this._measurementLayer,this._manipulatorLayer,this._snappingLayer]),this._measurementLayer.removeAll(),this._manipulatorLayer.removeAll(),this._snappingLayer.removeAll(),this._set("measurement",null),this._set("measurementLabel",null),this._measurementLayer=w(this._measurementLayer),this._manipulatorLayer=w(this._manipulatorLayer),this._snappingLayer=w(this._snappingLayer),this._updatingHandles=w(this._updatingHandles),this._resetVertices()}get _snappingManager(){return this._snappingManagerResult.snappingManager}get cursor(){return this._drawActive?"crosshair":null}set editable(e){this._set("editable",e),e||this._draw.reset()}get snappingOptions(){return this._snappingManager.options}get updating(){return this._updatingHandles.updating||this._snappingManager.updating}onActivate(){this._drawActive||this._vertices.length!==0||this._startSketch()}onShow(){this._measurementLayer.visible=!0,this._manipulatorLayer.visible=!0,this._snappingLayer.visible=!0}onHide(){this._measurementLayer.visible=!1,this._manipulatorLayer.visible=!1,this._snappingLayer.visible=!1}_getSnappingContext(e){return new ne({elevationInfo:{mode:"on-the-ground",offset:0},pointer:e,editGeometryOperations:new G(new ae("point",re(!1,!1,this.view.spatialReference)),U.Local),visualizer:new Oe(this._snappingLayer)})}_resetVertices(){for(const{handle:e}of this._vertices)e.remove();this._vertices=[]}_startSketch(){this._drawActive=!0;const e=this._snappingManager,t=this._draw.create("polyline",{mode:"click",snappingManager:e});t.on(["vertex-add","vertex-update","vertex-remove","cursor-update","undo","redo"],s=>this._updateSketch(s.vertices)),t.on("draw-complete",()=>{this._stopSketch()})}_stopSketch(){this.manipulators.forEach(({manipulator:e})=>{e.interactive=!0}),this._drawActive=!1,this.finishToolCreation()}_updateSketch(e){const{spatialReference:t}=this.view;for(;this._vertices.length>e.length;){const{handle:a,manipulator:c}=this._vertices.pop();a.remove(),this.manipulators.remove(c)}for(let a=this._vertices.length;a<e.length;a++){const[c,m]=e[a],v=new k({x:c,y:m,spatialReference:t}),y=He(v,this.view,this._manipulatorLayer);this.manipulators.add(y);const f=G.fromGeometry(v,U.Local),Q=[f.on("vertex-update",b=>{const _=b.vertices.at(0);_&&(this._vertices[a].coord=[_.pos[0],_.pos[1]],this._updatePolylines())}),oe(y,(b,_,We,X)=>{const Y=this._getSnappingContext(X),Z=this._snappingManager,q=this._updatingHandles,{snappingStep:J}=_e({snappingContext:Y,snappingManager:Z,updatingHandles:q});_.next(we(this.view)).next(S=>{if(S.action==="start"){const R=new k(S.mapStart);b.graphic.geometry=R,f.trySetGeometry(R)}return S}).next(...J).next(fe({operations:f})).next(()=>{b.graphic.geometry=f.data.geometry})})];this._vertices.push({manipulator:y,coord:[c,m],handle:le(Q)})}const s=this._vertices.length-1,r=this._vertices[s],[l,o]=e[s];r.coord[0]===l&&r.coord[1]===o||(r.coord=[l,o],r.manipulator.graphic.geometry=new k({x:l,y:o,spatialReference:t}));const u=this._drawActive?this._vertices[s].manipulator:null;this.manipulators.forEach(({manipulator:a})=>{a.interactive=u==null||a!==u}),this._updatePolylines()}_updatePolylines(){var v;if(this._vertices.length<2)return void this._measurementLayer.removeAll();const e=this._vertices.map(({coord:y})=>y),{measurement:t,drawing:s,original:r}=ze(e,this.view.spatialReference,this.geodesicDistanceThreshold);this._set("measurement",t);const l=Pe(this.messages,t,this.unit);let o,u;this._set("measurementLabel",l);const{graphics:a}=this._measurementLayer,c=a.length===2,{effectiveTheme:m}=this.view;c?(o=a.at(0),u=a.at(1)):(o=new O({symbol:new ue({data:{type:"CIMSymbolReference",symbol:{type:"CIMLineSymbol",symbolLayers:[{type:"CIMSolidStroke",effects:[{type:"CIMGeometricEffectDashes",dashTemplate:[14,12],lineDashEnding:"FullGap",controlPointEnding:"NoConstraint"}],enable:!0,capStyle:"Butt",joinStyle:"Round",width:3.5,color:H(m.accentColor).toArray()},{type:"CIMSolidStroke",enable:!0,capStyle:"Butt",joinStyle:"Round",width:5,color:m.accentColor.toArray()}]}}})}),u=new O({symbol:new he({color:m.textColor,haloColor:N(H(m.textColor,ce.Low),.5),haloSize:2,font:new pe({size:14,family:"sans-serif"})})}),a.removeAll(),a.addMany([o,u])),o.geometry=s,u.geometry=(v=r.extent)==null?void 0:v.center,u.symbol.text=l}};function He(e,t,s){const r=N(t.effectiveTheme.accentColor,.5),l={type:"simple-line",width:0},o=8,u=new z({style:"circle",color:r,size:o,outline:l}),a=new z({style:"circle",color:r,size:1.5*o,outline:l}),c=new O({geometry:e,symbol:u});return new Ue({view:t,layer:s,graphic:c,focusedSymbol:a})}function ze(e,t,s){const r=new de({paths:[e],spatialReference:t});let l,o;if(t.isGeographic)if(K(t))l=T([r],"meters")[0],o=C(r,L);else{const u=M(r,E.WGS84),a=C(u,L);l=T([u],"meters")[0],o=M(a,t)}else if(t.isWebMercator)l=me(r,"meters"),o=ge(r,L,"meters");else{const u=ve(r,"meters");if(s!=null&&u>=s){const a=M(r,E.WGS84),c=C(a,L);l=T([a],"meters")[0],o=M(c,t)}else l=u,o=r}return{measurement:{geometry:o,length:l},original:r,drawing:o}}function Ee(e){return e!=null}function Be(e){if(!e)return!1;const{isGeographic:t,isWebMercator:s,isWGS84:r}=e;return t&&!r&&!K(e)||!t&&!s}function Pe(e,t,s){if(!t||!e)return"";switch(s){case"metric":return xe(e,t.length,"meters");case"imperial":return Ce(e,t.length,"meters");default:return Te(e,ye(t.length,"meters",s),s)}}i([n()],p.prototype,"_drawActive",void 0),i([n({readOnly:!0})],p.prototype,"cursor",null),i([n({value:!0})],p.prototype,"editable",null),i([n({type:Number})],p.prototype,"geodesicDistanceThreshold",void 0),i([n({readOnly:!0})],p.prototype,"measurement",void 0),i([n({readOnly:!0})],p.prototype,"measurementLabel",void 0),i([n()],p.prototype,"messages",void 0),i([n()],p.prototype,"unit",void 0),i([n()],p.prototype,"updating",null),i([n({constructOnly:!0})],p.prototype,"view",void 0),p=i([A("esri.widgets.DistanceMeasurement2D.DistanceMeasurement2DTool")],p);let d=class extends Ie{constructor(e){super(e),this.supportedViewType="2d",this.unsupportedErrorMessage="DistanceMeasurement2DViewModel is only supported in 2D views."}initialize(){this.addHandles([g(()=>{var e;return(e=this.view)==null?void 0:e.spatialReference},()=>this.clear()),g(()=>this.unit,e=>{this.tool!=null&&(this.tool.unit=e)},$),g(()=>this.geodesicDistanceThreshold,e=>{this.tool!=null&&(this.tool.geodesicDistanceThreshold=e)},$)])}get geodesicDistanceThreshold(){return this._get("geodesicDistanceThreshold")}set geodesicDistanceThreshold(e){be(Me.getLogger(this),"geodesicDistanceThreshold",{version:"4.29",warnOnce:!0}),this._set("geodesicDistanceThreshold",e)}get measurement(){return this.tool!=null?this.tool.measurement:null}get measurementLabel(){return this.tool!=null?this.tool.measurementLabel:null}get state(){var e;return this.disabled||this.view==null||!Ee((e=this.view)==null?void 0:e.spatialReference)?"disabled":this.tool!=null&&this.measurement?this.tool.active?"measuring":"measured":"ready"}get unit(){return this._validateUnit(this.defaultUnit)}set unit(e){this._overrideIfSome("unit",this._validateUnit(e))}get unitOptions(){return x}set unitOptions(e){this._overrideIfSome("unitOptions",this._validateUnits(e))}async start(){const e=this.view;e!=null&&(await Le(()=>e.ready),Be(e.spatialReference)&&await $e()),this.createTool({interactive:!0})}clear(){this.removeTool()}constructTool(){return new p({view:this.view,visible:this.visible,geodesicDistanceThreshold:this.geodesicDistanceThreshold,unit:this.unit})}_validateUnit(e){const{unitOptions:t,defaultUnit:s}=this;return e!=null&&t.includes(e)?e:t.includes(s)?s:t.length>0?t[0]:s}_validateUnits(e){if(e==null)return[];const t=e.filter(s=>x.includes(s));return t.length===0?x.slice():t}};i([n(ke)],d.prototype,"defaultUnit",void 0),i([n()],d.prototype,"geodesicDistanceThreshold",null),i([n({readOnly:!0})],d.prototype,"measurement",null),i([n({readOnly:!0})],d.prototype,"measurementLabel",null),i([n({readOnly:!0})],d.prototype,"state",null),i([n({type:String})],d.prototype,"unit",null),i([n({type:[String]})],d.prototype,"unitOptions",null),d=i([A("esri.widgets.DistanceMeasurement2D.DistanceMeasurement2DViewModel")],d);const F=d,V="esri-distance-measurement-2d",j={base:V,newMeasurementButton:`${V}__clear-button`};let h=class extends Se{constructor(e,t){super(e,t),this.messages=null,this.messagesCommon=null,this.viewModel=new F}get active(){return this.viewModel.active}get icon(){return"measure-line"}set icon(e){this._overrideIfSome("icon",e)}get label(){var e;return((e=this.messages)==null?void 0:e.widgetLabel)??""}set label(e){this._overrideIfSome("label",e)}get unit(){return this.viewModel.unit}set unit(e){this.viewModel.unit=e}get unitOptions(){return this.viewModel.unitOptions}set unitOptions(e){this.viewModel.unitOptions=e}get view(){return this.viewModel.view}set view(e){this.viewModel.view=e}get visible(){return this.viewModel.visible}set visible(e){this.viewModel.visible=e}render(){const{messages:e,messagesCommon:t,unit:s,unitOptions:r,viewModel:l}=this,{active:o,measurementLabel:u,state:a,supported:c}=l;return B("div",{"aria-label":this.messages.widgetLabel,class:this.classes(j.base,P.widget,P.panel),key:this,role:"presentation"},this.visible?B(Ge,{active:o,measurementItems:[{key:"distance",title:e.distance,value:u}],messages:{...e,notApplicable:t.notApplicable},newMeasurementButtonClass:j.newMeasurementButton,state:a,supported:c,unit:s,unitOptions:r,onNewMeasurementClick:()=>{De(this.viewModel.start())},onUnitChange:m=>{this.unit=m}}):null)}};i([n({readOnly:!0})],h.prototype,"active",null),i([n()],h.prototype,"icon",null),i([n()],h.prototype,"label",null),i([n()],h.prototype,"uiStrings",void 0),i([n(),W("esri/widgets/DistanceMeasurement2D/t9n/DistanceMeasurement2D")],h.prototype,"messages",void 0),i([n(),W("esri/t9n/common")],h.prototype,"messagesCommon",void 0),i([n()],h.prototype,"unit",null),i([n()],h.prototype,"unitOptions",null),i([n()],h.prototype,"view",null),i([n({type:F})],h.prototype,"viewModel",void 0),i([n({type:Boolean})],h.prototype,"visible",null),h=i([A("esri.widgets.DistanceMeasurement2D")],h);const Je=h;export{Je as default};
