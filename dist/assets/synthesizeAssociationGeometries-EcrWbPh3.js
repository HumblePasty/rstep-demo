import{a6 as u,r as i,o as n,p as y,Y as d}from"./index-iVlkrMet.js";import{f as l,s as h,i as x}from"./utils-oO-C4Iyn.js";import{d as $}from"./Association-ockd7I6r.js";import"./NetworkElement-BoQvwHI4.js";let r=class extends u{constructor(o){super(o),this.maxGeometryCountExceeded=!1,this.associations=[]}};i([n({type:Boolean,json:{write:!0}})],r.prototype,"maxGeometryCountExceeded",void 0),i([n({type:[$],json:{write:!0}})],r.prototype,"associations",void 0),r=i([y("esri.rest.networks.support.AssociationGeometriesResult")],r);const G=r;async function g(o,t,e){const s=l(o),a={...t.toJSON(),f:"json"},c=h({...s.query,...a});e?e.method="post":e={method:"post"};const p=x(c,e),m=`${s.path}/synthesizeAssociationGeometries`;return d(m,p).then(f=>R(f,t.outSpatialReference))}function R(o,t){const{data:e}=o;if(t)for(const s of e.associations)s.geometry.spatialReference||(s.geometry.spatialReference=t.clone());return G.fromJSON(e)}export{g as synthesizeAssociationGeometries};
