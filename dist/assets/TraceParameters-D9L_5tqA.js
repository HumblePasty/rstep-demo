import{fb as g,r as t,m as e,n as l,a4 as u,bn as f,M as v,C as b}from"./index-BeW5XHHa.js";import{o as a}from"./NetworkElement-DZPOSsx-.js";import{s as j}from"./WebMap-QsQtHZyE.js";import"./ColorBackground-BVKEg-ac.js";import"./Basemap-NADnrhTn.js";import"./loadAll-CXj3UdOi.js";import"./writeUtils-B7-V_fnF.js";import"./CollectionFlattener-DQyCU__2.js";import"./editableLayers-DTLxgvJL.js";import"./catalogUtils-DH9XeEkf.js";import"./basemapUtils-DslCIlfo.js";import"./TablesMixin-ST5f4_Kg.js";import"./jsonContext-BIL0Zu_y.js";import"./project-DVpMNVPf.js";import"./utils-qTUZr5IF.js";import"./utils-L8buF51K.js";const n=new g({startingPoint:"starting-point",barrier:"barrier"});let i=class extends u{constructor(o){super(o),this.globalId=null,this.isFilterBarrier=!1,this.percentAlong=null,this.terminalId=null,this.type=null}};t([e({type:String,json:{write:!0}})],i.prototype,"globalId",void 0),t([e({type:Boolean,json:{write:!0}})],i.prototype,"isFilterBarrier",void 0),t([e({type:Number,json:{write:!0}})],i.prototype,"percentAlong",void 0),t([e({type:Number,json:{write:!0}})],i.prototype,"terminalId",void 0),t([e({type:n.apiValues,json:{type:n.jsonValues,read:{reader:n.read,source:"traceLocationType"},write:{writer:n.write,target:"traceLocationType"}}})],i.prototype,"type",void 0),i=t([l("esri.rest.networks.support.TraceLocation")],i);const h=i;var s;let r=s=class extends u{static from(o){return f(s,o)}constructor(o){super(o),this.namedTraceConfigurationGlobalId=null,this.gdbVersion=null,this.traceLocations=[],this.moment=null,this.outSpatialReference=null,this.traceConfiguration=null,this.resultTypes=null,this.traceType=null}writeOutSR(o,p,d){if(o!=null){const{wkid:y,latestWkid:c,wkt:m,wkt2:w}=o;p[d]=JSON.stringify({wkid:y??void 0,latestWkid:c??void 0,wkt:m??void 0,wkt2:w??void 0})}}};t([e({type:String,json:{read:{source:"traceConfigurationGlobalId"},write:{target:"traceConfigurationGlobalId"}}})],r.prototype,"namedTraceConfigurationGlobalId",void 0),t([e({type:String,json:{write:!0}})],r.prototype,"gdbVersion",void 0),t([e({type:[h],json:{write:!0}})],r.prototype,"traceLocations",void 0),t([e({type:Date,json:{type:Number,write:{writer:(o,p)=>{p.moment=o?o.getTime():null}}}})],r.prototype,"moment",void 0),t([e({type:v,json:{write:{allowNull:!0,target:"outSR"}}})],r.prototype,"outSpatialReference",void 0),t([b("outSpatialReference")],r.prototype,"writeOutSR",null),t([e({type:j,json:{write:!0}})],r.prototype,"traceConfiguration",void 0),t([e({type:[Object],json:{write:!0}})],r.prototype,"resultTypes",void 0),t([e({type:a.apiValues,json:{type:a.jsonValues,read:a.read,write:a.write}})],r.prototype,"traceType",void 0),r=s=t([l("esri.rest.networks.support.TraceParameters")],r);const P=r;export{P as default};
