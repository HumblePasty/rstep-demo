import{cr as l,fF as H,ej as M,X as P,fG as S,fH as T}from"./index-CW6gHi3a.js";function k(e,s){const a=e==null?void 0:e.geometry;if(!e||(a==null?void 0:a.type)!=="mesh"||!s)return;const{renderCoordsHelper:m,elevationProvider:x}=s,{camera:h}=s.state,{extent:t}=a,{center:d,spatialReference:r}=t,z=l(r),n=H(r),v=l(m.spatialReference),w=t.width*z,y=t.height*n,f=(t.zmax??0)*n,u=f-(t.zmin??0)*n,C=Math.max(w,y,u)/v,{x:c,y:i}=d,p=d.z??0;M(o,c,i,p),m.toRenderCoords(o,r,o);const g=C/h.computeScreenPixelSizeAt(o);if(g>h.width*A)return"meshTooClose";if(g<j)return"meshTooFar";const R=S(e),{absoluteZ:b}=T(c,i,f,r,s,R);return b<(x.getElevation(c,i,p,r,"ground")??0)*n+u*F?"meshUnderground":"mesh"}const j=20,A=1,F=.1,o=P();export{k as getDrawMeshHelpMessage};
