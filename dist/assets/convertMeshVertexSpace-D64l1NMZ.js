import{P as p,b as m,a0 as i}from"./index-BI30NJEZ.js";import{p as n}from"./MeshVertexAttributes-yFqovbhF.js";import{B as a}from"./vertexSpaceConversion-Cg9oW-r7.js";import"./meshProperties-C4iW0Ukm.js";import"./spatialReferenceEllipsoidUtils-8AIBkSW2.js";import"./computeTranslationToOriginAndRotation-CphOvF9T.js";import"./vec3-COoiVc3B.js";import"./BufferView-CZvfvCrB.js";import"./vec4-C4aGqQFf.js";async function A(t,e,r){await Promise.resolve(),p(r);const o=a(t,e,{useEllipsoid:r==null?void 0:r.useEllipsoid});if(!o)throw new m("meshUtils:convertVertexSpace()","Failed to convert to provided vertex space due to projection errors");const s=t.cloneAndModifyVertexAttributes(new n({...o,uv:i(t.vertexAttributes.uv),color:i(t.vertexAttributes.color)}),e);return s.transform=null,s}export{A as convertMeshVertexSpace};
