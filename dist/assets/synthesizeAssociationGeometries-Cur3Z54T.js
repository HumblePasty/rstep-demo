import{W as u,r as i,o as n,p as y,g_ as d,h0 as h,g$ as l,U as $}from"./index-BlU5-B7d.js";import{d as x}from"./Association-CvBOz6O6.js";import"./NetworkElement-Cya2pudP.js";let r=class extends u{constructor(t){super(t),this.maxGeometryCountExceeded=!1,this.associations=[]}};i([n({type:Boolean,json:{write:!0}})],r.prototype,"maxGeometryCountExceeded",void 0),i([n({type:[x],json:{write:!0}})],r.prototype,"associations",void 0),r=i([y("esri.rest.networks.support.AssociationGeometriesResult")],r);const G=r;async function A(t,o,e){const s=d(t),a={...o.toJSON(),f:"json"},c=h({...s.query,...a});e?e.method="post":e={method:"post"};const p=l(c,e),m=`${s.path}/synthesizeAssociationGeometries`;return $(m,p).then(f=>g(f,o.outSpatialReference))}function g(t,o){const{data:e}=t;if(o)for(const s of e.associations)s.geometry.spatialReference||(s.geometry.spatialReference=o.clone());return G.fromJSON(e)}export{A as synthesizeAssociationGeometries};
