import{mk as v,ml as f,el as l,mm as _,dk as h,X as u,x,mn as C,$ as p,r as y,p as L}from"./index-CW6gHi3a.js";import{v as $,b as j,j as P}from"./lineSegment-B0AUPHGc.js";import{Y as b}from"./Octree-CfbPp-7e.js";import{m as S}from"./edgeProcessing-DWpvhh_o.js";import"./Util-CH0CKLV8.js";import"./deduplicate-AVGKsPDn.js";import"./Indices-9tK8bmuh.js";import"./InterleavedLayout-DkM9b6wH.js";import"./BufferView-BVvswgSh.js";import"./types-D0PSWh4d.js";import"./VertexAttribute-Cq4MnHjR.js";import"./glUtil-CAJRmga-.js";import"./enums-D9v74xTE.js";import"./VertexElementDescriptor-BLyltQyJ.js";import"./Normals-D6ahlA3D.js";const I=1e3;function V(t,n,o){const e=v(),s=_(e);return f(s,s,t,.5),f(s,s,n,.5),e[3]=l(s,t),h(s,s,o),e}let g=class{constructor(){this._idToComponent=new Map,this._components=new b(t=>t.bounds),this._edges=new b(t=>t.bounds),this._tmpLineSegment=$(),this._tmpP1=u(),this._tmpP2=u(),this._tmpP3=u(),this.remoteClient=null}async fetchCandidates(t,n){await Promise.resolve(),x(n),await this._ensureEdgeLocations(t,n);const o=[];return this._edges.forEachNeighbor(e=>(this._addCandidates(t,e,o),o.length<I),t.bounds),{result:{candidates:o}}}async _ensureEdgeLocations(t,n){const o=[];if(this._components.forEachNeighbor(i=>{if(i.info==null){const{id:c,uid:r}=i;o.push({id:c,uid:r})}return!0},t.bounds),!o.length)return;const e={components:o},s=await this.remoteClient.invoke("fetchAllEdgeLocations",e,n??{});for(const i of s.components)this._setFetchEdgeLocations(i)}async add(t){const n=new m(t.id,t.bounds);return this._idToComponent.set(n.id,n),this._components.add([n]),{result:{}}}async remove(t){const n=this._idToComponent.get(t.id);if(n){const o=[];this._edges.forEachNeighbor(e=>(e.component===n&&o.push(e),!0),n.bounds),this._edges.remove(o),this._components.remove([n]),this._idToComponent.delete(n.id)}return{result:{}}}_setFetchEdgeLocations(t){const n=this._idToComponent.get(t.id);if(n==null||t.uid!==n.uid)return;const o=S.createView(t.locations),e=new Array(o.count),s=u(),i=u();for(let d=0;d<o.count;d++){o.position0.getVec(d,s),o.position1.getVec(d,i);const a=V(s,i,t.origin),E=new T(n,d,a);e[d]=E}this._edges.add(e);const{objectIds:c,origin:r}=t;n.info={locations:o,objectIds:c,origin:r}}_addCandidates(t,n,o){const{info:e}=n.component,{origin:s,objectIds:i}=e,c=e.locations,r=c.position0.getVec(n.index,this._tmpP1),d=c.position1.getVec(n.index,this._tmpP2);h(r,r,s),h(d,d,s);const a=i[c.componentIndex.get(n.index)];this._addEdgeCandidate(t,a,r,d,o),w(t,a,r,o),w(t,a,d,o)}_addEdgeCandidate(t,n,o,e,s){if(!t.returnEdge)return;const i=_(t.bounds),c=j(o,e,this._tmpLineSegment),r=P(c,i,this._tmpP3);C(t.bounds,r)&&s.push({type:"edge",objectId:n,target:p(r),distance:l(i,r),start:p(o),end:p(e)})}};g=y([L("esri.views.interactive.snapping.featureSources.sceneLayerSource.SceneLayerSnappingSourceWorker")],g);const J=g;function w(t,n,o,e){if(!t.returnVertex||!C(t.bounds,o))return;const s=_(t.bounds);e.push({type:"vertex",objectId:n,target:p(o),distance:l(s,o)})}class m{constructor(n,o){this.id=n,this.bounds=o,this.info=null,this.uid=++m.uid}}m.uid=0;class T{constructor(n,o,e){this.component=n,this.index=o,this.bounds=e}}export{J as default};
