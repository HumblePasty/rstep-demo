import{ak as l,gY as u,gT as _,F as p,m as g,k as c,r as n,o as d,p as w}from"./index-Clgsc_ww.js";import{c as y,y as f,C as k,T as M,j as F,S as V,w as I}from"./Stop-BhQCNxRf.js";import{j as v}from"./LayerView2D-C1thh6TT.js";import{t as G}from"./GraphicContainer-DK6KMytX.js";import{F as H}from"./GraphicsView2D-BN0-Up3V.js";import{y as C}from"./LayerView-CwzjKKP6.js";import"./Container-BU1u2SIH.js";import"./MapView-BSc05RhZ.js";import"./ColorBackground-Culo9zv3.js";import"./Basemap-C55jA_4J.js";import"./editableLayers-D01jxX5I.js";import"./catalogUtils-nuN0YsKB.js";import"./basemapUtils-BtVgAZyh.js";import"./TileInfo-DE_C4-d4.js";import"./TileKey-DZd6gJy7.js";import"./ReactiveMap-BZ7M9Iai.js";import"./IViewEvents-Bci6PjlS.js";import"./a11yUtils-DpDdtsvA.js";import"./heightModelInfoUtils-BJnvTU2F.js";import"./normalizeUtils-D41z3Sc6.js";import"./normalizeUtilsCommon-DdoKG547.js";import"./utils-B95B5uOD.js";import"./utils-DSCvw780.js";import"./mat2df32-orApM5a3.js";import"./vec2f32-BbH2jxlN.js";import"./unitBezier-BX6NeAEr.js";import"./Tile-DyPqReij.js";import"./TileKey-BYE4o8R3.js";import"./QueueProcessor-DJXUtTsL.js";import"./quickselect-QQC62dOK.js";import"./definitions-DyYHcW4a.js";import"./HighlightDefaults-B3qdZrQW.js";import"./enums-D9v74xTE.js";import"./Texture-DyXOhKsV.js";import"./imageUtils-BGF-PRfx.js";import"./capabilities-DWNhET5Y.js";import"./accessibleHandler-CAka6Pgv.js";import"./GoTo-D0c6IP3K.js";import"./EffectView-C4l0-Don.js";import"./AGraphicContainer-MyOZDEJO.js";import"./TechniqueInstance-cNbJGs7L.js";import"./UpdateTracking2D-D0boKsjm.js";import"./BindType-BmZEZMMh.js";import"./Util-DVZ-cjJ5.js";import"./Program-CbpDqC-1.js";import"./BufferObject-BG_LvDvc.js";import"./LabelMetric-DpBQcGA5.js";import"./VertexElementDescriptor-BLyltQyJ.js";import"./BoundingBox-CnpCxTZE.js";import"./TileContainer-D2WHgY1q.js";import"./WGLContainer-Dp52BGRV.js";import"./VertexArrayObject-Be6iuBkl.js";import"./ProgramTemplate-C8RFrvgL.js";import"./vec3f32-nZdmKIgz.js";import"./StyleDefinition-DaF-Cgaa.js";import"./config-BOD8--da.js";import"./earcut-D9gy186-.js";import"./featureConversionUtils-DN0wCCRp.js";import"./OptimizedFeature-6cJ-QFG5.js";import"./OptimizedGeometry-BF8iz5FO.js";import"./OptimizedFeatureSet-Blu9Ckm7.js";import"./FeatureCommandQueue-1uVsgpwd.js";import"./CIMSymbolHelper-CVqtVK_G.js";import"./BidiEngine-QXap_35O.js";import"./fontUtils-CrrHZX7Y.js";import"./GeometryUtils-CzwzzK-1.js";import"./Rect-CUzevAry.js";import"./constants-F8oTIn7N.js";import"./AttributeStore-q8SKcJ8X.js";import"./TimeOnly-BMcSMz65.js";import"./centroid-DdLmOD72.js";import"./queryUtils-f-kYRL3m.js";import"./json-Wa8cmqdu.js";import"./timeSupport-CFjVINbV.js";import"./normalizeUtilsSync-KBg0O4k-.js";const U=["route-info","direction-line","direction-point","polygon-barrier","polyline-barrier","point-barrier","stop"],o={graphic:null,property:null,oldValue:null,newValue:null};function m(t){return t instanceof y||t instanceof f||t instanceof k||t instanceof M||t instanceof F||t instanceof V||t instanceof I}function $(t){return l.isCollection(t)&&t.length&&m(t.at(0))}function b(t){return Array.isArray(t)&&t.length>0&&m(t[0])}const T=new Set(["default"]);let a=class extends v(C){constructor(){super(...arguments),this._graphics=new l,this._highlightIds=new Map,this._networkFeatureMap=new Map,this._networkGraphicMap=new Map}get _routeItems(){return new u({getCollections:()=>this.layer==null||this.destroyed?[]:[this.layer.routeInfo!=null?new l([this.layer.routeInfo]):null,this.layer.directionLines,this.layer.directionPoints,this.layer.polygonBarriers,this.layer.polylineBarriers,this.layer.pointBarriers,this.layer.stops]})}initialize(){this._updatingHandles.addOnCollectionChange(()=>this._routeItems,t=>this._routeItemsChanged(t),_)}destroy(){var t;this._networkFeatureMap.clear(),this._networkGraphicMap.clear(),this._graphics.removeAll(),(t=this._get("_routeItems"))==null||t.destroy()}attach(){this._createGraphicsView()}detach(){this._destroyGraphicsView()}async fetchPopupFeaturesAtLocation(t,i){return this._graphicsView.hitTest(t).filter(({popupTemplate:e})=>!!e)}highlight(t){let i;i=m(t)?[this._getNetworkFeatureUid(t)]:b(t)?t.map(r=>this._getNetworkFeatureUid(r)):$(t)?t.map(r=>this._getNetworkFeatureUid(r)).toArray():[t.uid];const e=i.filter(p);return e.length?(this._addHighlight(e),g(()=>this._removeHighlight(e))):g()}async hitTest(t,i){if(this.suspended)return null;const e=this._graphicsView.hitTest(t).filter(p).map(s=>this._networkGraphicMap.get(s));if(!e.length)return null;const{layer:r}=this;return e.reverse().map(s=>({type:"route",layer:r,mapPoint:t,networkFeature:s}))}isUpdating(){return this._graphicsView.updating}moveEnd(){}update(t){this._graphicsView.processUpdate(t)}viewChange(){this._graphicsView.viewChange()}_addHighlight(t){for(const i of t)if(this._highlightIds.has(i)){const e=this._highlightIds.get(i);this._highlightIds.set(i,e+1)}else this._highlightIds.set(i,1);this._updateHighlight()}_createGraphic(t){const i=t.toGraphic();return i.layer=this.layer,i.sourceLayer=this.layer,i}_createGraphicsView(){const t=this.view,i=()=>this.requestUpdate(),e=new G(t.featuresTilingScheme);this._graphicsView=new H({container:e,graphics:this._graphics,requestUpdateCallback:i,view:t}),this.container.addChild(e),this._updateHighlight()}_destroyGraphicsView(){this.container.removeChild(this._graphicsView.container),this._graphicsView.destroy()}_getDrawOrder(t){const i=this._networkGraphicMap.get(t);return U.indexOf(i.type)}_getNetworkFeatureUid(t){return this._networkFeatureMap.has(t)?this._networkFeatureMap.get(t).uid:null}_removeHighlight(t){for(const i of t)if(this._highlightIds.has(i)){const e=this._highlightIds.get(i)-1;e===0?this._highlightIds.delete(i):this._highlightIds.set(i,e)}this._updateHighlight()}_routeItemsChanged(t){if(t.removed.length){this._graphics.removeMany(t.removed.map(i=>{const e=this._networkFeatureMap.get(i);return this._networkFeatureMap.delete(i),this._networkGraphicMap.delete(e),e}));for(const i of t.removed)this.removeHandles(i)}if(t.added.length){this._graphics.addMany(t.added.map(i=>{const e=this._createGraphic(i);return e.symbol==null?null:(this._networkFeatureMap.set(i,e),this._networkGraphicMap.set(e,i),e)}).filter(p));for(const i of t.added)this.addHandles([c(()=>i.geometry,(e,r)=>{this._updateGraphic(i,"geometry",e,r)}),c(()=>i.symbol,(e,r)=>{this._updateGraphic(i,"symbol",e,r)})],i);this._graphics.sort((i,e)=>this._getDrawOrder(i)-this._getDrawOrder(e))}}_updateGraphic(t,i,e,r){if(!this._networkFeatureMap.has(t)){const h=this._createGraphic(t);return this._networkFeatureMap.set(t,h),this._networkGraphicMap.set(h,t),void this._graphics.add(h)}const s=this._networkFeatureMap.get(t);s[i]=e,o.graphic=s,o.property=i,o.oldValue=r,o.newValue=e,this._graphicsView.graphicUpdateHandler(o)}_updateHighlight(){const t=Array.from(this._highlightIds.keys()),i=this._getHighlightBits(T);this._graphicsView.setHighlight(t.map(e=>({objectId:e,highlightFlags:i})))}};n([d()],a.prototype,"_graphics",void 0),n([d()],a.prototype,"_routeItems",null),a=n([w("esri.views.2d.layers.RouteLayerView2D")],a);const ti=a;export{ti as default};
