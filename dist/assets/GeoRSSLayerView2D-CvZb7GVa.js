import{k as h,hr as l,bZ as g,a9 as w,dI as f,dH as d,hs as n,r as u,p as b}from"./index-CW6gHi3a.js";import{j as V}from"./LayerView2D-DPa_orHp.js";import{t as S}from"./GraphicContainer-Bwacg3jM.js";import{F as _}from"./GraphicsView2D-1jyxP5lD.js";import{y as T}from"./LayerView-DbQXxGKu.js";import"./Container-BZIK0L5b.js";import"./MapView-CSCXeU1L.js";import"./ColorBackground-Zvl6WFwn.js";import"./Basemap-B7JH8ahh.js";import"./editableLayers-CtF83F1x.js";import"./catalogUtils-C5MM8eat.js";import"./basemapUtils-dI6tlNFF.js";import"./ReactiveMap-DJuXf8F6.js";import"./IViewEvents-Bci6PjlS.js";import"./a11yUtils-38Hxkhfu.js";import"./heightModelInfoUtils-Cb4tsNOg.js";import"./mat2df32-orApM5a3.js";import"./vec2f32-BbH2jxlN.js";import"./unitBezier-BX6NeAEr.js";import"./Tile-Dz_dvAiT.js";import"./TileKey-gYTcETqi.js";import"./QueueProcessor-D7-0R4uc.js";import"./quickselect-QQC62dOK.js";import"./definitions-DyYHcW4a.js";import"./HighlightDefaults-ed6mFyf9.js";import"./enums-D9v74xTE.js";import"./Texture-CPI1qv4O.js";import"./imageUtils-CI6jvOe2.js";import"./capabilities-DWNhET5Y.js";import"./accessibleHandler-zttpahxM.js";import"./GoTo-D23tvqtp.js";import"./EffectView-CxFHuewt.js";import"./AGraphicContainer-DSVNFEzN.js";import"./TechniqueInstance-lGQcppc2.js";import"./UpdateTracking2D-B8l698Xy.js";import"./BindType-BmZEZMMh.js";import"./Util-CH0CKLV8.js";import"./Program-CzR3_6cC.js";import"./BufferObject-Dd-DgKtS.js";import"./LabelMetric-BpJAzKI3.js";import"./VertexElementDescriptor-BLyltQyJ.js";import"./BoundingBox-CnpCxTZE.js";import"./TileContainer-DfriXqr1.js";import"./WGLContainer-Ci2HHPbO.js";import"./VertexArrayObject-Dnpi3fpX.js";import"./ProgramTemplate-B5gHjgGt.js";import"./vec3f32-nZdmKIgz.js";import"./StyleDefinition-BCMmD6Hs.js";import"./config-BOD8--da.js";import"./earcut-D9gy186-.js";import"./FeatureCommandQueue-D9MoK3HE.js";import"./CIMSymbolHelper-C0OGMFuw.js";import"./BidiEngine-QXap_35O.js";import"./fontUtils-DtbQOETI.js";import"./GeometryUtils-CAixfqJt.js";import"./Rect-CUzevAry.js";import"./constants-F8oTIn7N.js";import"./AttributeStore-nIWrljAo.js";import"./TimeOnly-BaFYDIX2.js";import"./centroid-DdLmOD72.js";import"./queryUtils-BGbLhWX4.js";import"./json-Wa8cmqdu.js";import"./timeSupport-CsJwyL03.js";import"./normalizeUtilsSync-mw0m7D4I.js";let y=class extends V(T){constructor(){super(...arguments),this._graphicsViewMap={},this._popupTemplates=new Map,this.graphicsViews=[]}async hitTest(t,e){if(!this.graphicsViews.length)return null;const o=this.layer;return this.graphicsViews.reverse().flatMap(r=>{const i=this._popupTemplates.get(r),s=r.hitTest(t);for(const p of s)p.layer=o,p.sourceLayer=o,p.popupTemplate=i;return s}).map(r=>({type:"graphic",graphic:r,layer:o,mapPoint:t}))}update(t){if(this.graphicsViews)for(const e of this.graphicsViews)e.processUpdate(t)}attach(){this.addAttachHandles([h(()=>{var t;return(t=this.layer)==null?void 0:t.featureCollections},t=>{this._clear();for(const{popupInfo:e,featureSet:o,layerDefinition:r}of t){const i=g.fromJSON(o),s=new w(i.features),p=r.drawingInfo,c=e?f.fromJSON(e):null,m=d(p.renderer),a=new _({requestUpdateCallback:()=>this.requestUpdate(),view:this.view,graphics:s,renderer:m,container:new S(this.view.featuresTilingScheme)});this._graphicsViewMap[i.geometryType]=a,this._popupTemplates.set(a,c),i.geometryType!=="polygon"||this.layer.polygonSymbol?i.geometryType!=="polyline"||this.layer.lineSymbol?i.geometryType!=="point"||this.layer.pointSymbol||(this.layer.pointSymbol=m.symbol):this.layer.lineSymbol=m.symbol:this.layer.polygonSymbol=m.symbol,this.graphicsViews.push(a),this.container.addChild(a.container)}},l),h(()=>{var t;return(t=this.layer)==null?void 0:t.polygonSymbol},t=>{this._graphicsViewMap.polygon.renderer=new n({symbol:t})},l),h(()=>{var t;return(t=this.layer)==null?void 0:t.lineSymbol},t=>{this._graphicsViewMap.polyline.renderer=new n({symbol:t})},l),h(()=>{var t;return(t=this.layer)==null?void 0:t.pointSymbol},t=>{this._graphicsViewMap.point.renderer=new n({symbol:t})},l)])}detach(){this._clear()}moveEnd(){}viewChange(){for(const t of this.graphicsViews)t.viewChange()}_clear(){this.container.removeAllChildren();for(const t of this.graphicsViews)t.destroy();this._graphicsViewMap={},this._popupTemplates.clear(),this.graphicsViews.length=0}};y=u([b("esri.views.2d.layers.GeoRSSLayerView2D")],y);const At=y;export{At as default};
