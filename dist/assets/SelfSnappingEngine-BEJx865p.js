import{bf as P,mc as f,q9 as y,mg as x,mh as v,cr as K,qa as D,ba as p,qb as S,iz as R,p3 as G,X as C,hc as Q,qc as $,qd as W,qe as H,qf as z,qg as A,qh as J,qi as Y,qj as Z,qk as j,jp as U,bb as b,iC as I,ql as ee,qm as T,b9 as X,qn as te,qo as se,qp as ie,ms as re,md as ne,mf as oe,me as ae,dj as he,ej as de,qq as le,qr as ce,qs as pe,bV as ge,a9 as fe,ma as ue,iL as xe,r as L,o as k,p as ve}from"./index-BlU5-B7d.js";import{u as B}from"./geodesicLengthMeasurementUtils-BNB1oFlx.js";class F{constructor(s,e){this.view=s,this.options=e,this.squaredShortLineThreshold=P.shortLineThreshold*P.shortLineThreshold}snap(s,e){return e.vertexHandle!=null?e.vertexHandle.type!=="vertex"?[]:this.snapExistingVertex(s,e):this.snapNewVertex(s,e)}edgeExceedsShortLineThreshold(s,e){return this.exceedsShortLineThreshold(f(s.leftVertex.pos,this.view,e),f(s.rightVertex.pos,this.view,e),e)}exceedsShortLineThreshold(s,e,{spatialReference:t}){return this.squaredShortLineThreshold===0||y(x(e,t,v,this.view),x(s,t,v,this.view))>this.squaredShortLineThreshold}isVertical(s,e,{spatialReference:t}){const i=K(t);return D(p(s),p(e))*i<P.verticalLineThresholdMeters}squaredProximityThreshold(s){return s==="touch"?this._squaredTouchProximityThreshold:this._squaredMouseProximityThreshold}get _squaredMouseProximityThreshold(){return this.options.distance*this.options.distance}get _squaredTouchProximityThreshold(){const{distance:s,touchSensitivityMultiplier:e}=this.options,t=s*e;return t*t}}class Ee extends F{snapNewVertex(s,e){const t=e.editGeometryOperations.data.components[0],i=t.edges.length,r=[];if(i<1)return r;const{spatialReference:n}=e,a=x(s,n,v,this.view),{view:o}=this,h=t.edges[i-1];let d=h;do{if(this.edgeExceedsShortLineThreshold(d,e)){const g=S(d,o,e);this._processCandidateProposal(g.left,g.right,s,a,e,r)}d=d.leftVertex.leftEdge}while(d&&d!==h);return r}snapExistingVertex(s,e){const t=[],i=e.vertexHandle,r=i.component;if(r.edges.length<2)return t;const{view:n}=this,{spatialReference:a}=e,o=x(s,a,v,n),h=i.leftEdge,d=i.rightEdge;h&&d&&this.edgeExceedsShortLineThreshold(h,e)&&this.edgeExceedsShortLineThreshold(d,e)&&this._processCandidateProposal(f(h.leftVertex.pos,n,e),f(d.rightVertex.pos,n,e),s,o,e,t);const g=r.edges[0];let c=g;do{if(c!==i.leftEdge&&c!==i.rightEdge&&this.edgeExceedsShortLineThreshold(c,e)){const u=S(c,n,e);this._processCandidateProposal(u.left,u.right,s,o,e,t)}c=c.rightVertex.rightEdge}while(c&&c!==g);return t}_processCandidateProposal(s,e,t,i,r,n){var g;const{spatialReference:a,pointer:o}=r,h=C();me(h,s,e,t,r);const d=R(G(h));y(i,x(d,a,v,this.view))<this.squaredProximityThreshold(o)&&n.push(new Q({lineStart:s,lineEnd:e,targetPoint:d,isDraped:((g=r.elevationInfo)==null?void 0:g.mode)==="on-the-ground"}))}}function me(l,s,e,t,i){we(l,s,e,t,i)||Ve(l,t,s,e)}function we(l,s,e,t,{spatialReference:i}){const r=$(s,e,i,i);if(r==null)return!1;const n=$(e,t,i,i);if(n==null)return!1;const a=B(e,t,i);if(a==null)return!1;const o=Math.abs(W.shortestSignedDiff(r,n))>Math.PI/2?H.normalize(r+Math.PI):r;return z(l,e,i,A(a,"meters"),J(o,"radians","geographic"),"geodesic"),l[2]=t[2],!0}function Ve(l,s,e,t){Y(s,{start:e,end:t,type:Z.LINE},l),l[2]=s[2]}let Pe=class extends F{snapNewVertex(s,e){const t=e.editGeometryOperations.data.components[0],i=t.edges.length,r=t.vertices.length,n=[];if(i<2)return n;const{view:a}=this,o=x(s,e.spatialReference,v,a),h=f(t.vertices[r-1].pos,a,e),d=f(t.vertices[0].pos,a,e),g=t.edges[i-1];let c=g;do{if(this.edgeExceedsShortLineThreshold(c,e)){const u=S(c,a,e);this._checkEdgeForParallelLines(u,h,s,o,e,n),this._checkEdgeForParallelLines(u,d,s,o,e,n)}c=c.leftVertex.leftEdge}while(c&&c!==g);return n}snapExistingVertex(s,e){const t=[],i=e.vertexHandle,r=i.component;if(r.edges.length<3)return t;const{view:n}=this,a=x(s,e.spatialReference,v,n),o=i.leftEdge,h=i.rightEdge,d=r.vertices[0],g=f(d.pos,n,e),c=r.vertices.length,u=r.vertices[c-1],w=f(u.pos,n,e),_=r.edges[0];let E=_;do{if(E!==o&&E!==h&&this.edgeExceedsShortLineThreshold(E,e)){const q=S(E,n,e);o&&this._checkEdgeForParallelLines(q,f(o.leftVertex.pos,n,e),s,a,e,t),h&&this._checkEdgeForParallelLines(q,f(h.rightVertex.pos,n,e),s,a,e,t),i===d?this._checkEdgeForParallelLines(q,w,s,a,e,t):i===u&&this._checkEdgeForParallelLines(q,g,s,a,e,t)}E=E.rightVertex.rightEdge}while(E&&E!==_);return t}_checkEdgeForParallelLines(s,e,t,i,r,n){var c;const a=s.left,o=s.right;if(j(m,p(e),p(a),p(o)),U(m,p(e))<P.parallelLineThreshold)return;j(m,p(t),p(a),p(o),p(e));const{spatialReference:h,pointer:d}=r,g=R(I(m[0],m[1],t[2]));if(y(i,x(g,h,v,this.view))<this.squaredProximityThreshold(d)){if(this.isVertical(g,e,r)||this.isVertical(a,o,r)||ye(s,n))return;n.push(new ee({referenceLine:s,lineStart:e,targetPoint:g,isDraped:((c=r.elevationInfo)==null?void 0:c.mode)==="on-the-ground"}))}}};function ye(l,s){const e=l.left,t=l.right;for(const i of s)if(j(m,p(t),p(i.constraint.start),p(i.constraint.end),p(e)),U(m,p(t))<P.parallelLineThreshold)return i.addReferenceLine(l),!0;return!1}const m=b();class _e extends F{snapNewVertex(s,e){const t=e.editGeometryOperations.data.components[0],i=[];if(t.vertices.length<2)return i;const{view:r}=this,n=x(s,e.spatialReference,v,r),a=t.vertices.at(-1);this._checkForSnappingCandidate(T.LastVertex,i,a.leftEdge,a,a.leftEdge.leftVertex,s,n,e);const o=t.vertices[0];return this._checkForSnappingCandidate(T.FirstVertex,i,o.rightEdge,o,o.rightEdge.rightVertex,s,n,e),i}snapExistingVertex(s,e){const t=[],i=e.vertexHandle;if(i.component.vertices.length<3)return t;const{view:r}=this,n=x(s,e.spatialReference,v,r),a=i.leftEdge,o=i.rightEdge;if(a!=null&&a.leftVertex.leftEdge){const h=a.leftVertex.leftEdge;this._checkForSnappingCandidate(T.ExistingEdge,t,h,h.rightVertex,h.leftVertex,s,n,e)}if(o!=null&&o.rightVertex.rightEdge){const h=o.rightVertex.rightEdge;this._checkForSnappingCandidate(T.ExistingEdge,t,h,h.leftVertex,h.rightVertex,s,n,e)}return t}_checkForSnappingCandidate(s,e,t,i,r,n,a,o){if(!this.edgeExceedsShortLineThreshold(t,o))return;const h=this.view,d=f(i.pos,h,o),g=f(r.pos,h,o);qe(N,g,d,n,o),this._checkForSnappingCandidateAlongProjectedRay(s,e,g,d,N,n,a,o)}_checkForSnappingCandidateAlongProjectedRay(s,e,t,i,r,n,a,o){var E;const{spatialReference:h,pointer:d}=o,g=X(M,p(n),p(i)),c=te(r,g)/se(r),u=ie(M,p(i),r,c),w=R(I(u[0],u[1],n[2]));if(y(a,x(w,h,v,this.view))>this.squaredProximityThreshold(d)||this.isVertical(w,i,o)||this.isVertical(i,t,o))return;const _=re(C(),i,r,Math.sign(c));e.push(new ne({targetPoint:w,constraint:new ae(i,G(_)),previousVertex:t,otherVertex:i,otherVertexType:oe.CENTER,selfSnappingType:s,isDraped:((E=o.elevationInfo)==null?void 0:E.mode)==="on-the-ground"}))}}function qe(l,s,e,t,i){Te(l,s,e,t,i)||Le(l,s,e)}function Te(l,s,e,t,{spatialReference:i}){const r=$(s,e,i,i);if(r==null)return!1;const n=$(e,t,i,i);if(n==null)return!1;const a=Math.sign(H.shortestSignedDiff(r,n))*Math.PI*.5,o=J(r+a,"radians","geographic"),h=C(),d=B(e,t,i);return d!=null&&(z(h,e,i,A(d,"meters"),o,"geodesic"),he(l,h,e),!0)}function Le(l,s,e){const t=X(M,p(e),p(s));de(l,t[1],-t[0],0)}const M=b(),N=C();let Se=class extends F{snapNewVertex(s,e){const t=e.editGeometryOperations.data.components[0],i=[],r=t.vertices.length;if(e.editGeometryOperations.data.type!=="polygon"||r<2)return i;const{view:n}=this,a=t.vertices[0],o=t.vertices[r-1],h=f(a.pos,n,e),d=f(o.pos,n,e);return this._processCandidateProposal(h,d,s,e,i),i}snapExistingVertex(s,e){const t=[],i=e.vertexHandle,r=i.component;if(r.edges.length<2||e.editGeometryOperations.data.type==="polyline"&&(i.index===0||i.index===r.vertices.length-1))return t;const{view:n}=this,a=f(i.leftEdge.leftVertex.pos,n,e),o=f(i.rightEdge.rightVertex.pos,n,e);return this._processCandidateProposal(a,o,s,e,t),t}_processCandidateProposal(s,e,t,i,r){var u;if(!this.exceedsShortLineThreshold(s,e,i))return;const n=le(O,p(s),p(e),.5),a=.5*D(p(s),p(e)),o=ce(O,p(t),n,a),h=R(I(o[0],o[1],t[2])),{spatialReference:d,pointer:g}=i,c=x(t,d,v,this.view);if(y(c,x(h,d,v,this.view))<this.squaredProximityThreshold(g)){if(this.isVertical(s,h,i)||this.isVertical(h,e,i))return;r.push(new pe({targetPoint:h,point1:s,point2:e,isDraped:((u=i.elevationInfo)==null?void 0:u.mode)==="on-the-ground"}))}}};const O=b();let V=class extends ge{constructor(l){super(l),this.updating=!1,this._snappers=new fe,this._domain=ue.SELF}initialize(){this._snappers.push(new Pe(this.view,this.options),new Ee(this.view,this.options),new _e(this.view,this.options),new Se(this.view,this.options))}set options(l){this._set("options",l);for(const s of this._snappers)s.options=l}async fetchCandidates(l,s,e){if(!(s&this._domain&&this.options.effectiveSelfEnabled))return[];const t=[];for(const i of this._snappers.items)for(const r of i.snap(l,e))t.push(r);return xe(l,t),t}};L([k({readOnly:!0})],V.prototype,"updating",void 0),L([k({constructOnly:!0})],V.prototype,"view",void 0),L([k()],V.prototype,"options",null),V=L([ve("esri.views.interactive.snapping.SelfSnappingEngine")],V);export{V as SelfSnappingEngine};
